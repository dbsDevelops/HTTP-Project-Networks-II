2024-05-08T17:46:40.716826200-Server is running on port: 80
2024-05-08T17:46:47.607643400-Client connected from /127.0.0.1:46395
2024-05-08T17:46:47.691974200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 15:46:47 GMT
Server: DJGI/1.0.0
Content-Type: application/json
Content-Length: 267
Set-Cookie: cookie1=ma366xrz; Max-Age=52; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie2=ma367xrz; Max-Age=29; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie3=ma368xrz; Max-Age=44; HttpOnly; Date=2024-05-08T17:46:40.665842100

{"name":"Teacher_1","passRate":0.5,"project":{"name":"Project_1","description":"Description_1","teacher":"Teacher_1","student":"Student_1","grade":"A","status":"Completed","lastModified":"2024-05-08T17:46:40.660195900"},"lastModified":"2024-05-08T17:46:40.660195900"}

2024-05-08T17:46:47.714980600-Client connected from /127.0.0.1:46396
2024-05-08T17:46:47.739512100-Response: 
HTTP/1.1 201 Created
Connection: close
Date: Wed, 08 May 2024 15:46:47 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 16
Set-Cookie: cookie1=ma366xrz; Max-Age=52; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie2=ma367xrz; Max-Age=29; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie3=ma368xrz; Max-Age=44; HttpOnly; Date=2024-05-08T17:46:40.665842100

Resource created

2024-05-08T17:46:47.749509500-Client connected from /127.0.0.1:46397
2024-05-08T17:46:47.761519300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 15:46:47 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 25
Set-Cookie: cookie1=ma366xrz; Max-Age=52; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie2=ma367xrz; Max-Age=29; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie3=ma368xrz; Max-Age=44; HttpOnly; Date=2024-05-08T17:46:40.665842100

Data updated successfully

2024-05-08T17:46:47.767509400-Client connected from /127.0.0.1:46398
2024-05-08T17:46:47.771510100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 15:46:47 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 15
Set-Cookie: cookie1=ma366xrz; Max-Age=52; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie2=ma367xrz; Max-Age=29; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie3=ma368xrz; Max-Age=44; HttpOnly; Date=2024-05-08T17:46:40.665842100

Teacher deleted

2024-05-08T17:46:47.778511-Client connected from /127.0.0.1:46399
2024-05-08T17:46:47.788508500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 15:46:47 GMT
Server: DJGI/1.0.0
Content-Type: application/json
Content-Length: 1056
Set-Cookie: cookie1=ma366xrz; Max-Age=52; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie2=ma367xrz; Max-Age=29; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie3=ma368xrz; Max-Age=44; HttpOnly; Date=2024-05-08T17:46:40.665842100

[{"name":"Project_1","description":"Description_1","teacher":"Teacher_1","student":"Student_1","grade":"A","status":"Completed","lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Project_2","description":"Description_2","teacher":"Teacher_2","student":"Student_2","grade":"B","status":"In_Progress","lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Project_3","description":"Description_3","teacher":"Teacher_3","student":"Student_3","grade":"C","status":"In_Progress","lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Project_4","description":"Description_4","teacher":"Teacher_4","student":"Student_4","grade":"D","status":"In_Progress","lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Project_5","description":"Description_5","teacher":"Teacher_5","student":"Student_5","grade":"E","status":"In_Progress","lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Project_6","description":"Description_1","teacher":"Teacher_6","student":"Student_1","grade":"A","status":"Completed","lastModified":"2024-05-08T17:46:47.467098"}]

2024-05-08T17:46:47.796514600-Client connected from /127.0.0.1:46400
2024-05-08T17:46:47.805510700-Response: 
HTTP/1.1 304 Not Modified
Connection: close
Date: Wed, 08 May 2024 15:46:47 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 30
Set-Cookie: cookie1=ma366xrz; Max-Age=52; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie2=ma367xrz; Max-Age=29; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie3=ma368xrz; Max-Age=44; HttpOnly; Date=2024-05-08T17:46:40.665842100

Resource has not been modified

2024-05-08T17:46:47.817513700-Client connected from /127.0.0.1:46401
2024-05-08T17:46:47.826520300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 15:46:47 GMT
Server: DJGI/1.0.0
Content-Type: application/json
Content-Length: 2501
Set-Cookie: cookie1=ma366xrz; Max-Age=52; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie2=ma367xrz; Max-Age=29; HttpOnly; Date=2024-05-08T17:46:40.665842100
Set-Cookie: cookie3=ma368xrz; Max-Age=44; HttpOnly; Date=2024-05-08T17:46:40.665842100

{"teachers":[{"name":"Teacher_2","passRate":0.6,"project":{"name":"Project_2","description":"Description_2","teacher":"Teacher_2","student":"Student_2","grade":"B","status":"In_Progress","lastModified":"2024-05-08T17:46:40.660195900"},"lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Teacher_3","passRate":0.7,"project":{"name":"Project_3","description":"Description_3","teacher":"Teacher_3","student":"Student_3","grade":"C","status":"In_Progress","lastModified":"2024-05-08T17:46:40.660195900"},"lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Teacher_4","passRate":0.8,"project":{"name":"Project_4","description":"Description_4","teacher":"Teacher_4","student":"Student_4","grade":"D","status":"In_Progress","lastModified":"2024-05-08T17:46:40.660195900"},"lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Teacher_5","passRate":0.9,"project":{"name":"Project_5","description":"Description_5","teacher":"Teacher_5","student":"Student_5","grade":"E","status":"In_Progress","lastModified":"2024-05-08T17:46:40.660195900"},"lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Teacher_6","passRate":3.3,"project":{"name":"Project_6","description":"Description_1","teacher":"Teacher_6","student":"Student_1","grade":"A","status":"Completed","lastModified":"2024-05-08T17:46:47.467098"},"lastModified":"2024-05-08T17:46:47.745510300"}],"projects":[{"name":"Project_1","description":"Description_1","teacher":"Teacher_1","student":"Student_1","grade":"A","status":"Completed","lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Project_2","description":"Description_2","teacher":"Teacher_2","student":"Student_2","grade":"B","status":"In_Progress","lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Project_3","description":"Description_3","teacher":"Teacher_3","student":"Student_3","grade":"C","status":"In_Progress","lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Project_4","description":"Description_4","teacher":"Teacher_4","student":"Student_4","grade":"D","status":"In_Progress","lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Project_5","description":"Description_5","teacher":"Teacher_5","student":"Student_5","grade":"E","status":"In_Progress","lastModified":"2024-05-08T17:46:40.660195900"},{"name":"Project_6","description":"Description_1","teacher":"Teacher_6","student":"Student_1","grade":"A","status":"Completed","lastModified":"2024-05-08T17:46:47.467098"}],"path":"TeachersClass.txt","lastModified":"2024-05-08T17:46:47.821510300"}

2024-05-08T18:01:20.843562600-Client connected from /127.0.0.1:46549
2024-05-08T18:01:20.843562600-Response: 
HTTP/1.1 418 I'm a teapot
Connection: close
Date: Wed, 08 May 2024 16:01:20 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 13
Set-Cookie: cookie4=ma369xrz; Max-Age=51; HttpOnly; Date=2024-05-08T18:01:20.843562600
Set-Cookie: cookie5=ma370xrz; Max-Age=25; HttpOnly; Date=2024-05-08T18:01:20.843562600
Set-Cookie: cookie6=ma371xrz; Max-Age=60; HttpOnly; Date=2024-05-08T18:01:20.843562600

I'm a teapot 

2024-05-08T18:01:20.953393400-Client connected from /127.0.0.1:46550
2024-05-08T18:01:20.969051500-Response: 
HTTP/1.1 404 Not Found
Connection: close
Date: Wed, 08 May 2024 16:01:20 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 9
Set-Cookie: cookie4=ma369xrz; Max-Age=51; HttpOnly; Date=2024-05-08T18:01:20.843562600
Set-Cookie: cookie5=ma370xrz; Max-Age=25; HttpOnly; Date=2024-05-08T18:01:20.843562600
Set-Cookie: cookie6=ma371xrz; Max-Age=60; HttpOnly; Date=2024-05-08T18:01:20.843562600

Not found

2024-05-08T18:01:56.912564600-Client connected from /127.0.0.1:46554
2024-05-08T18:01:56.912564600-Response: 
HTTP/1.1 404 Not Found
Connection: close
Date: Wed, 08 May 2024 16:01:56 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 9
Set-Cookie: cookie4=ma369xrz; Max-Age=51; HttpOnly; Date=2024-05-08T18:01:20.843562600
Set-Cookie: cookie7=ma372xrz; Max-Age=22; HttpOnly; Date=2024-05-08T18:01:56.912564600
Set-Cookie: cookie6=ma371xrz; Max-Age=60; HttpOnly; Date=2024-05-08T18:01:20.843562600

Not found

2024-05-08T18:02:04.873390400-Client connected from /127.0.0.1:46555
2024-05-08T18:02:04.883404700-Response: 
HTTP/1.1 404 Not Found
Connection: close
Date: Wed, 08 May 2024 16:02:04 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 9
Set-Cookie: cookie4=ma369xrz; Max-Age=51; HttpOnly; Date=2024-05-08T18:01:20.843562600
Set-Cookie: cookie6=ma371xrz; Max-Age=60; HttpOnly; Date=2024-05-08T18:01:20.843562600
Set-Cookie: cookie7=ma372xrz; Max-Age=22; HttpOnly; Date=2024-05-08T18:01:56.912564600

Not found

2024-05-08T18:02:11.743371-Client connected from /127.0.0.1:46556
2024-05-08T18:02:11.743371-Response: 
HTTP/1.1 404 Not Found
Connection: close
Date: Wed, 08 May 2024 16:02:11 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 9
Set-Cookie: cookie4=ma369xrz; Max-Age=51; HttpOnly; Date=2024-05-08T18:01:20.843562600
Set-Cookie: cookie6=ma371xrz; Max-Age=60; HttpOnly; Date=2024-05-08T18:01:20.843562600
Set-Cookie: cookie7=ma372xrz; Max-Age=22; HttpOnly; Date=2024-05-08T18:01:56.912564600

Not found

2024-05-08T18:02:39.797344900-Client connected from /127.0.0.1:46560
2024-05-08T18:02:39.812957900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:39 GMT
Server: DJGI/1.0.0
Content-Type: text/html
Content-Length: 1318
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Whimsical World of Señoras</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <header>
        <h1>Welcome to the Whimsical World of Señoras Lapuente & Lasheras!</h1>
    </header>
    <nav>
        <ul>
            <li><a href="#story">Epic Saga</a></li>
            <li><a href="#recipes">Magical Recipes</a></li>
            <li><a href="https://youtu.be/qaLTbmgwUQ8?si=sJopucLrzPkPoYRK">Mystical Advice (Fake URL)</a></li>
        </ul>
    </nav>
    <main>
        <section id="story">
            <h2>The Epic Saga</h2>
            <p>Join our heroes, Señora Lapuente and Señora Lasheras, in a whimsical tale of laughter, mystery, and fake mustaches!</p>
            <img src="juan.jpg" alt="juangpt">
        </section>
        <section id="recipes">
            <h2>Magical Recipes</h2>
            <p>Feast your eyes on the most fantastical, never-before-seen recipes straight from the kitchens of our señoras. Unicorn toast, anyone?</p>
            <img src="baquero.jpeg" alt="baquerogpt">
        </section>
    </main>
    <footer>
        <p>🌈 &copy; 2024 The Whimsical World of Señoras. All rights reserved, even the imaginary ones!</p>
    </footer>
</body>
</html>


2024-05-08T18:02:39.875840300-Client connected from /127.0.0.1:46561
2024-05-08T18:02:39.907103200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:39 GMT
Server: DJGI/1.0.0
Content-Type: text/css
Content-Length: 1552
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

body {
    font-family: 'Papyrus', fantasy; /* Playful and fantasy-like font */
    background-color: #ffccf9; /* Light, whimsical background color */
    color: #5d3a9b; /* Deep purple for text, adding to the whimsy */
    margin: 0;
    padding: 0;
}

header {
    background-color: #4aedc4; /* Bright, welcoming color */
    color: #ffffff;
    padding: 20px;
    text-align: center;
    border-bottom: 5px dashed #ff69b4; /* Adds a playful dash underline */
}

nav ul {
    list-style-type: none;
    background-color: #ff69b4; /* Playful pink */
    padding: 0;
    text-align: center;
    border-bottom: 3px dotted #333; /* Dotted underline for a whimsical touch */
}

nav ul li {
    display: inline;
    margin-right: 10px;
}

nav ul li a {
    text-decoration: none;
    color: white;
    padding: 5px 20px;
    background-color: #34befa; /* Bright blue for contrast */
}

nav ul li a:hover {
    background-color: #fa8334; /* A warm, playful hover color */
}

main {
    padding: 20px;
}

section {
    margin-bottom: 20px;
    background-color: #fff0f5; /* Light and airy background for sections */
    padding: 10px;
    border-radius: 15px; /* Soft, rounded corners for a gentle look */
}

footer {
    background-color: #5d3a9b; /* Ties in with the text color for consistency */
    color: white;
    text-align: center;
    padding: 10px;
    position: fixed;
    bottom: 0;
    width: 100%;
    border-top: 5px dashed #ff69b4; /* Echoes the playful dash from the header */
}


2024-05-08T18:02:39.907103200-Client connected from /127.0.0.1:46562
2024-05-08T18:02:39.922731600-Client connected from /127.0.0.1:46563
2024-05-08T18:02:39.922731600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:39 GMT
Server: DJGI/1.0.0
Content-Type: image/jpeg
Content-Length: 6399
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:39.922731600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:39 GMT
Server: DJGI/1.0.0
Content-Type: image/jpeg
Content-Length: 108244
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:53.272236800-Client connected from /127.0.0.1:46565
2024-05-08T18:02:53.272236800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: text/html
Content-Length: 1186
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>ImpostOut</title>
		<link rel="stylesheet" href="css/style.css">
	</head>
	<body style="margin:0px">

		<!--PowerUp-->
		<script src="js/powerup.js"></script>

		<!--AutoClicker-->
		<script src="js/autoclicker.js"></script>

		<!--Sound-->
		<script src="js/sound.js"></script>

		<!--HUD-->
		<script src="js/barometer.js"></script>
		<script src="js/paralax.js"></script>
		<script src="js/HUD.js"></script>
		<script src="js/Buttons.js"></script>

		<!--Impostor Variables-->
		<script src="js/CustomSus.js"></script>
		<script src="js/vent.js"></script>
		<script src="js/crewMini.js"></script>
		<script src="js/bg_room.js"></script>
		<script src="js/TextValues.js"></script>
		<script src="js/impostor.js"></script>
		<script src="js/imposWHITE.js"></script>
		<script src="js/imposBLACK.js"></script>
		<script src="js/imposRED.js"></script>

		<!--Collisions Variables-->
		<script src="js/collisions.js"></script>

		<!--Cookies-->
		<script src="js/cookies.js"></script>


		<!--Game Variables-->
		<script src="js/game.js"></script>


	</body>
</html>

2024-05-08T18:02:53.350848600-Client connected from /127.0.0.1:46566
2024-05-08T18:02:53.350848600-Client connected from /127.0.0.1:46567
2024-05-08T18:02:53.350848600-Client connected from /127.0.0.1:46568
2024-05-08T18:02:53.350848600-Client connected from /127.0.0.1:46569
2024-05-08T18:02:53.375817400-Client connected from /127.0.0.1:46570
2024-05-08T18:02:53.380831200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1810
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class PowerUp {
    constructor(posX, posY, width, height, sprite) {
        this.posX = posX;
        this.posY = posY;
        this.width = width;
        this.height = height;
        this.image = new Image();
        this.image.src = sprite;
    }
    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

var doubleAuto = false;

class DoubleAutoPowerUp extends PowerUp {
    constructor(posX, posY, width, height, sprite) {
        super(posX, posY, width, height, sprite);
        this.active = false;

        setInterval(() => {
            if (this.active == false) {
                this.active = true;
                this.posX = getRandomInt(100, canvas.width - 100);
            }
        }, getRandomInt(60000, 120000));
    }
    render() {
        if (this.active)
            super.render();
    }

    update(dt) {
        if(this.posY > canvas.height) this.active = false; 

        if (this.active) {

            //move down making a sinusoidal movement
            this.posX += 100 * Math.sin(this.posY / 10) * dt;
            this.posY += 20 * dt;

            //Check if pressed
            this.OverPowerAction();
        }
        else {
            this.posX = -this.width;
            this.posY = -this.height;
        }
        
        
    }

    MouseOverButton() {
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    OverPowerAction() {
        if (this.MouseOverButton() && this.active && isClick ) {
            this.active = false;
            doubleAuto = true;
            setTimeout(() => {
                doubleAuto = false;
            }, 10000);
        }
    }
}

2024-05-08T18:02:53.381817400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: text/css
Content-Length: 193
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

@font-face {
    font-family: AmongUsFont; 
    src: url('../fonts/amongus_vector.ttf');
 } 

body {
cursor: url('../images/icons/mouseCursor.ico'), auto;
background-color: black;
}



2024-05-08T18:02:53.396824700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 2049
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

var clickPower = 1;

var adminCost = 2; //5
var adminCostBase = 2;
var adminPow = 0.6;
var adminPowTotal = 1.0;

var medBayCost = 3; //10
var medBayCostBase = 3;
var medBayPow = 0.4;
var medBayPowTotal = 1.0;

var electricalCost = 5; //15
var electricalCostBase = 5;
var electricalPow = 0.6;
var electricalPowTotal = 1.0;

var shieldsCost = 10; //20
var shieldsCostBase = 10;
var shieldsPow = 0.3;
var shieldsPowTotal = 1.0;

var autoClickerCost = 10;
var votesIncrement = 0.1;

class AutoClicker{
    constructor(){
        this.active = false;
        this.clicksPerSecond = 0.0;
        this.clicksPerSecondBase = 0.0;
    } 

}

class AutoClkrSimple extends AutoClicker{
    
    constructor(){
        super();
    }

    update(dt){
        
        //Upgrade costs
        adminCost = Math.floor(Math.pow(adminCostBase, adminPowTotal + adminPow * crewAdminArray.length));
        medBayCost = Math.floor(Math.pow(medBayCostBase, medBayPowTotal + medBayPow * crewMedBayArray.length));
        electricalCost = Math.floor(Math.pow(electricalCostBase, electricalPowTotal + electricalPow * crewElectricArray.length));
        shieldsCost = Math.floor(Math.pow(shieldsCostBase, shieldsPowTotal + shieldsPow * crewShieldsArray.length));
        autoClickerCost = doubleAuto ? this.clicksPerSecond * 50 : this.clicksPerSecond * 100;
        
        this.clicksPerSecond = doubleAuto ? this.clicksPerSecondBase *2  : this.clicksPerSecondBase; 

        if(!this.active && this.clicksPerSecond >= 0.1){
            this.active = true;
            setTimeout(() => {
                if(impostor.isImpostorAlive()){
                    if(doubleAuto){
                        DamageImpostor();
                        DamageImpostor();
                    }
                    else{
                        DamageImpostor();
                    }
                    
                }
                this.active = false;
            }, 1000/this.clicksPerSecond);
        }
    }
}

2024-05-08T18:02:53.396824700-Client connected from /127.0.0.1:46571
2024-05-08T18:02:53.402343400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1935
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class Barometer{
        constructor(posX, posY){
        this.posX = posX;
        this.posY = posY;
        this.width = 1490/12;
        this.height = 158/12;
        this.limit = 30;
        this.image = new Image();
        this.image.src = "images/interface/Needle.png";
        this.baroBody = new BaroBody(this.posX - 1920/24 + this.width/2, this.posY-1344/24 + this.height/2 - 25);
    }

    render(){
        this.baroBody.render();
        ctx.save();
        //rotate the image from the center
        ctx.translate(this.posX + this.width / 2, this.posY + this.height / 2);
        ctx.rotate(this.angle);
        ctx.translate(-(this.posX + this.width / 2), -(this.posY + this.height / 2));
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        ctx.restore();
    }

    update(dt, CrewsActive){
        //rotate the needle based on the quantity of crew members
        this.angle = (CrewsActive/this.limit) * Math.PI/2;

        //limit the rotation
        if(this.angle > Math.PI){
            this.angle = Math.PI;
        }
        if(this.angle < 0){
            this.angle = 0;
        }

        if (this.angle < Math.PI/2){
            impostor.forceDamage = 1;
        }

        if (this.angle > Math.PI/2){
            impostor.forceDamage = 2;
        }

        if (this.angle > Math.PI/2 + Math.PI/4){
            impostor.forceDamage = 3;
        }

        if (this.angle > Math.PI){
            impostor.forceDamage = 4;
        }
    }
};

class BaroBody {
    constructor(posX, posY){
        this.posX = posX;
        this.posY = posY;
        this.width = 1920/12;
        this.height = 1344/12;
        this.image = new Image();
        this.image.src = "images/interface/Counter.png";
    }

    render(){
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

2024-05-08T18:02:53.403341100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 204
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

// Sound effects
var sndKilled = new Audio("sound/killed.mp3");
sndKilled.volume = 0.1;

var sndBackground = new Audio("sound/NormalTask.wav");
sndBackground.volume = 0.1;
sndBackground.loop = true;

2024-05-08T18:02:53.408337600-Client connected from /127.0.0.1:46572
2024-05-08T18:02:53.408337600-Client connected from /127.0.0.1:46573
2024-05-08T18:02:53.419353600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 733
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class paralax {
  constructor(image, posX, posY, speed) {
    this.posX = posX;
    this.posY = posY;
    this.width = 600;
    this.height = 600;
    this.image = new Image();
    this.image.src = image;
    this.angle = 0;
    this.speed = speed;
  }
  render() {
    
    ctx.save();
    //rotate the image from the center
    ctx.translate(this.posX + this.width / 2, this.posY + this.height / 2);
    ctx.rotate(this.angle);
    ctx.translate(-(this.posX + this.width / 2), -(this.posY + this.height / 2));



    ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    ctx.restore();
  }

    update(dt) {
        //rotate the image
        this.angle +=this.speed*dt;
    }
}

2024-05-08T18:02:53.419353600-Client connected from /127.0.0.1:46574
2024-05-08T18:02:53.437339700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 6319
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900




class Button {
    constructor(name, sprite, posX, posY, width, height) {
        //Custom values
        this.name = name;
        this.image = new Image();
        this.image.src = sprite;
        this.posX = posX;
        this.posY = posY;
        this.width = width;
        this.height = height;
    }

    render(){
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }

   
}

class simpleButton extends Button{
    constructor(name, sprite, posX, posY, width, height) {
        super(name, sprite, posX, posY, width, height);
        
    }
    
    update(dt){
    
    }
      
    render(){
        super.render();
    }

    
    MouseOverButton(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    ClickingButton(type){

        if(this.MouseOverButton() && isClick){
            switch(type){
                case "autoclicker":
                    if(score - autoClickerCost >= 0){
                        score -= autoClickerCost;
                        autoclicker.clicksPerSecondBase += votesIncrement;
                    }
                        break;
                    case "howtoplay":
                        // Go to the How to Play html
                        saveAllCookies();
                        window.location.href = "howtoplay.html";
                        break;
                    case "erase":
                        // Erase the game
                        deleteAllCookies();
                        break;
                    case "save":
                        // Save the game
                        saveAllCookies();
                        break;
                    case "gladiator":
                        if(score - hatCost >= 0 && !GladiatorUnloked){
                            score -= hatCost;
                            GladiatorUnloked = true;
                        }
                        if(GladiatorUnloked) ChangeHat("Gladiator");
                        break;
                    case "hat":
                        if(score - hatCost >= 0 && !HatUnloked){
                            score -= hatCost;
                            HatUnloked = true;
                        }
                        if(HatUnloked) ChangeHat("Hat");
                    break;
                    case "demon":
                        if(score - hatCost >= 0 && !DemonUnloked){
                            score -= hatCost;
                            DemonUnloked = true;
                        }
                        if(DemonUnloked) ChangeHat("Demon");
                    break;
                    case "archeologist":
                        if(score - costumeCost >= 0 && !ArcheologistUnloked){
                            score -= costumeCost
                            ArcheologistUnloked = true;
                        }
                        if(ArcheologistUnloked) ChangeCostume("Archeologist");
                    break;
                    case "suit":
                        if(score - costumeCost >= 0 && !SuitUnloked){
                            score -= costumeCost
                            SuitUnloked = true;
                        }
                        if(SuitUnloked) ChangeCostume("Suit");
                    break;
                    case "robot":
                        if(score - costumeCost >= 0 && !RobotUnloked){
                            score -= costumeCost
                            RobotUnloked = true;
                        }
                        if(RobotUnloked) ChangeCostume("Robot");
                    break;
                    case "cube":
                        if(score - petCost >= 0 && !CubeUnloked){
                            score -= petCost;
                            CubeUnloked = true;
                        }
                        if(CubeUnloked) ChangePet("Cube");
                    break;
                    case "clank":
                        if(score - petCost >= 0 && !ClankUnloked){
                            score -= petCost;
                            ClankUnloked = true;
                        }
                        if(ClankUnloked) ChangePet("ClankPet");
                    break;
                    case "spark":
                        if(score - petCost >= 0 && !SparkUnloked){
                            score -= petCost;
                            SparkUnloked = true;
                        }
                        if(SparkUnloked) ChangePet("343GuiltySpark");
                    break;

                        
            }
        }
    }
}

class upgradeButton extends Button{
    constructor(name, sprite, posX, posY, width, height) {
        super(name, sprite, posX, posY, width, height);
        
    }
    
    update(dt){
    
    }
      
    render(){
        super.render();
    }

    
    MouseOverButton(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }


    ClickingButton(cost, type){
        if(this.MouseOverButton() && isClick){
            if(score-cost >= 0){
                score -= cost;
                this.image.src = "images/interface/ButtonPressed.png";
                
                switch(type){
                    case "admin":
                        SpawnCrewAdmin();
                        break;
                    case "medbay":
                        SpawnCrewMedBay();
                        break;
                    case "electrical":
                        SpawnCrewElectric();
                        break;
                    case "shields":
                        SpawnCrewShields();
                        break;
                }

                var self = this;
                setTimeout(function(){
                    console.log("Button pressed");
                    clickPower += 0.001;
                    self.image.src = "images/interface/Button.png";
                }, 200);
                return true;
            }
        }
    };

    
    
}

2024-05-08T18:02:53.454348900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 7839
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

var hatCost = 1000;
var costumeCost = 10000;
var petCost = 50000; 

var GladiatorUnloked = false;
var HatUnloked = false;
var DemonUnloked = false;

var ArcheologistUnloked = false;
var SuitUnloked = false;
var RobotUnloked = false;

var CubeUnloked = false;
var ClankUnloked = false;
var SparkUnloked = false;

var lockImage = new Image();
lockImage.src = "./images/icons/Lock.png";


class HUD{

    constructor() {
        this.scoreText = "Score: 0";
        this.movableTexts = [];

        this.imgCrewAnnounce = new Image();
        this.imgCrewAnnounce.src = "./images/icons/Announce.png";

        this.specialScore = "";

        this.randomAngleCombo = 0;
        this.randomSizeCombo = 50;

        this.createMovableText("Welcome to the ImpostOut Web Game", "grey", -75);
        this.newMovableTextFromFile();

    }

    update(dt) {
        this.scoreText = 'Crew Votes: ' + Math.floor(score);

        //Movable Texts
        for (var i = 0; i < this.movableTexts.length ; i++) {
            this.movableTexts[i].update(dt);

            //Remove if out of screen
            if(this.movableTexts[i].x > canvas.width+1 || this.movableTexts[i].x < -401){
                this.movableTexts.splice(i, 1);
            }
        }
    }

    render() {
        //Black line at the top
        ctx.fillStyle = 'black';
        ctx.fillRect(0, 0, canvas.width, 25);

        //Crew Votes
        ctx.font = '80px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText(this.scoreText, 
            canvas.width/2 - 120, 
            canvas.height/2 - 360);

        //Votes per second
        ctx.font = '30px AmongUsFont';
        if(doubleAuto) ctx.fillStyle = "red";
        else ctx.fillStyle = "#e0e0e0";
        ctx.fillText('Votes per second: ' + Math.floor(autoclicker.clicksPerSecond*10)/10,
            canvas.width/2 - 55,
            canvas.height/2 - 325);

        //Upgrade Cost
        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + electricalCost,
        ElectricalRoom.posX+buttonSize, ElectricalRoom.posY +290);

        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + medBayCost,
        MedbayRoom.posX+buttonSize, MedbayRoom.posY +260);

        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + adminCost,
        AdminRoom.posX+buttonSize, AdminRoom.posY +290);
        
        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + shieldsCost,
        Shields.posX+buttonSize, Shields.posY +320);

        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + Math.floor(autoClickerCost),
        canvas.width/2- 60, canvas.height -35);

        //Shop Cost

        //Gladiator
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Gladiator: " + hatCost,
        GladiatorShopButton.posX + 10, GladiatorShopButton.posY + 77);
        if(!GladiatorUnloked) ctx.drawImage(lockImage, GladiatorShopButton.posX + 45, GladiatorShopButton.posY + 40, 20, 20);
        //Hat
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Hat: " + hatCost,
        HatShopButton.posX + 20, HatShopButton.posY + 77);
        if(!HatUnloked) ctx.drawImage(lockImage, HatShopButton.posX + 45, HatShopButton.posY + 40, 20, 20);
        //Demon
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Demon: " + hatCost,
        DemonShopButton.posX + 10, DemonShopButton.posY + 77);
        if(!DemonUnloked) ctx.drawImage(lockImage, DemonShopButton.posX + 45, DemonShopButton.posY + 40, 20, 20);

        //Archeologist
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Archeologist: " + costumeCost,
        ArcheologistShopButton.posX - 20, ArcheologistShopButton.posY + 77);
        if(!ArcheologistUnloked) ctx.drawImage(lockImage, ArcheologistShopButton.posX + 40, ArcheologistShopButton.posY + 40, 20, 20);
        //Suit
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Suit: " + costumeCost,
        SuitShopButton.posX +5, SuitShopButton.posY + 77);
        if(!SuitUnloked) ctx.drawImage(lockImage, SuitShopButton.posX + 40, SuitShopButton.posY + 40, 20, 20);
        //Robot
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Robot: " + costumeCost,
        RobotShopButton.posX+5, RobotShopButton.posY + 77);
        if(!RobotUnloked) ctx.drawImage(lockImage, RobotShopButton.posX + 40, RobotShopButton.posY + 40, 20, 20);

        //Pets
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("All pets: " + petCost,
        ClankShopButton.posX -20, ClankShopButton.posY + 60);

        if(!CubeUnloked) ctx.drawImage(lockImage, CubeShopButton.posX + 15, CubeShopButton.posY + 20, 15, 15);
        if(!ClankUnloked) ctx.drawImage(lockImage, ClankShopButton.posX + 15, ClankShopButton.posY + 20, 15, 15);
        if(!SparkUnloked) ctx.drawImage(lockImage, SparkShopButton.posX + 15, SparkShopButton.posY + 20, 15, 15);

        //Shop Unlocks


        // Special Score
        ctx.font = '60px AmongUsFont';
        ctx.fillStyle = "grey";
        ctx.save(); // Save the current state
            ctx.translate(canvas.width/2 + 180, canvas.height/2 - 300); 
            ctx.rotate(-15 * Math.PI / 180); 
            ctx.fillText(this.specialScore, 0, 0); 
            ctx.restore(); 

        //Combo
        if(combo > 9){
             
            ctx.font = this.randomSizeCombo + 'px AmongUsFont';
            ctx.fillStyle = "rgba(255, 0, 0, 0.7)";
            ctx.save(); // Save the current state
            ctx.translate(canvas.width/2, canvas.height/2 + 175 ); 
            ctx.rotate(this.randomAngleCombo * Math.PI / 180); 
            ctx.fillText('Combo x' + combo + '!', -50, 0); 
            ctx.restore(); 
        }          

        //Movable Texts
        for (var i = 0; i < this.movableTexts.length ; i++) {
            this.movableTexts[i].render();
        }

        //Image at the top right
        ctx.drawImage(this.imgCrewAnnounce, canvas.width - 30, - 5, 40, 40);

        
        // Anti Cease and desist
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = 'grey';
        ctx.fillText('Sprites property of @. Only for class project porpuses and sus amogus.', 10, canvas.height - 10);

    }
    
    newMovableTextFromFile() {
        setInterval(() => {
            this.createMovableText(textPrompt[getRandomInt(0, textPrompt.length)], "grey", -75);
        }, 17500);

    }
        

    createMovableText(text, color, speed) {
        var movableText = new MovableText(text, color, speed);
        this.movableTexts.push(movableText);
    }

}

class MovableText{
    constructor(text, color, speed) {
        this.text = "Default Text"
        
        this.font = '30px AmongUsFont';
        this.speed = 0;
        
        this.text = text;
        this.color = color;
        this.speed = speed;

        this.y = 25;

        if(this.speed <= 0){
            this.x = canvas.width;
        }
        else{
            this.x = -400;
        }
    }

    update(dt) {
        this.x += this.speed * dt;
    }

    render() {
        ctx.font = this.font;
        ctx.fillStyle = this.color;
        ctx.fillText(this.text, this.x, this.y);
    }
}



2024-05-08T18:02:53.457344500-Client connected from /127.0.0.1:46575
2024-05-08T18:02:53.458345400-Client connected from /127.0.0.1:46576
2024-05-08T18:02:53.471375400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 2565
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class CustomSus {
    constructor() {
        this.posX = 60;
        this.posY = 50;
        this.width = 250/5;
        this.height = 300/5;
        this.color = "red";
        this.image = new Image();
        this.image.src = "./images/" + this.color + "/Body.png";
        this.costume = new CustomCostume(this.posX, this.posY);
        this.hat = new CustomHat(this.posX, this.posY);
        this.pet = new CustomPet(this.posX, this.posY);

    }

    render() {
        if(!this.hat.inFront)
        this.hat.render();
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        this.costume.render();
        if(this.hat.inFront)
        this.hat.render();

        this.pet.render();
    }

};

function ChangeHat(hat){
    customSus.hat.hat = hat;
    customSus.hat.image.src = "./images/miniCustom/" + customSus.hat.hat + ".png";
}

function ChangeCostume(costume){
    customSus.costume.costume = costume;
    customSus.costume.image.src = "./images/miniCustom/" + customSus.costume.costume + ".png";
}

function ChangePet(pet){
    customSus.pet.pet = pet;
    customSus.pet.image.src = "./images/miniCustom/" + customSus.pet.pet + ".png";
}


class CustomCostume {
    constructor(posX, posY) {
        this.posX = posX;
        this.posY = posY;
        this.width = 250/5;
        this.height = 300/5;
        this.image = new Image();
        this.costume = "noneCostume";
        
    }

    render() {
        this.image.src = "./images/miniCustom/" + this.costume + ".png";
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
};

class CustomHat {
    constructor(posX, posY) {
        this.posX = posX - 15;
        this.posY = posY-45;
        this.width = 120/1.5;
        this.height = 120/1.5;
        this.image = new Image();
        this.hat = "noneHat";
        this.inFront = true;
    }

    render() {
        this.image.src = "./images/miniCustom/" + this.hat + ".png";
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
};

class CustomPet {
    constructor(posX, posY) {
        this.posX = posX - 40;
        this.posY = posY+15 ;
        this.width = 120/3;
        this.height = 141/3;
        this.image = new Image();
        this.pet = "nonePet";
    }

    render() {
        this.image.src = "./images/miniCustom/" + this.pet + ".png";
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}


2024-05-08T18:02:53.472343400-Client connected from /127.0.0.1:46577
2024-05-08T18:02:53.503859300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 22545
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900



class CrewMiniMedic { //canvas.width - spaceFromBorder - 364/1.7, 140
    constructor(color) {
        this.width = 40;
        this.height = 40;
        this.Taskscore = 50;
        this.posX =             canvas.width - 160 - 364/1.7;
        this.posY = 100         + 140;
        this.going = true;
        this.image = new Image();
        this.image.src = "./images/" + color + "/step/step00.png";
        this.imageIterator = 0;
        this.timer = false;
        this.directionchange = false;
        this.color = color;
        
        this.intervalstep = setInterval(() => {
            if (this.imageIterator < 10) {
                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else if (this.imageIterator <= 11) {
                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else {
                this.imageIterator = 1;
                this.image.src = "./images/" + this.color + "/step/step00.png";
            }
        } , 100);
        
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }

    update(dt) {
        if (this.going){
            if(this.posX < canvas.width + 10 - 364/1.7)
            this.posX += 1;
            else {
                if (!this.timer){
                    this.timer = true;
                    clearInterval(this.intervalstep);
                    this.image.src = "./images/" + this.color + "/Body.png";
                    this.width = 30;
                    this.height = 30;
                    this.posX += 5;
                    this.posY += 5;
                    setTimeout(() => {
                        this.posX-= 5;
                        this.posY-= 5;
                        this.width = 40;
                        this.height = 40;
                        this.imageIterator = 12; 
                        this.intervalstep = setInterval(() => {
                            if (this.imageIterator <= 23) {
                                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else {
                                this.imageIterator = 13;
                                this.image.src = "./images/" + this.color + "/step/step12.png";
                            }
                        } , 100);
                        this.timer = false;
                        score += this.Taskscore;
                        this.going = false;
                    }, 1000);
                }
            }
        }
        else{
            if(this.posX > canvas.width - 160 - 364/1.7)
            this.posX -= 1;
            else{
                
                clearInterval(this.intervalstep);
                 //Erase this from the array
                 this.posX =             canvas.width - 160 - 364/1.7;
                 this.posY = 100         + 140;
                 this.going = true;
                 this.timer = false;
                 this.imageIterator = 0;
                 this.directionchange = false;
                 this.image.src = "./images/" + this.color + "/step/step00.png";

                 this.intervalstep = setInterval(() => {
                    if (this.imageIterator < 10) {
                        this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else if (this.imageIterator <= 11) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 1;
                        this.image.src = "./images/" + this.color + "/step/step00.png";
                    }
                } , 100);
            }
        }
        
    }
}

class CrewMiniShields {  //canvas.width - spaceFromBorder - 437/2, canvas.height - 180 - 477/2
    constructor(color) {
        this.width = 40;
        this.height = 40;
        this.Taskscore = 100;
        this.posX =             canvas.width - 160 - 437/2;
        this.posY = 90 +       canvas.height - 180 - 477/2;
        this.going = true;
        this.image = new Image();
        this.image.src = "./images/" + color + "/step/step00.png";
        this.imageIterator = 0;
        this.timer = false;
        this.directionchange = true;
        this.color = color;
        
        this.intervalstep = setInterval(() => {
            if (this.imageIterator < 10) {
                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else if (this.imageIterator <= 11) {
                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else {
                this.imageIterator = 1;
                this.image.src = "./images/" + this.color + "/step/step00.png";
            }
        } , 100);
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
    update(dt) {
        if (this.going){
        if(this.posX < canvas.width - 40 - 437/2  && this.posY == canvas.height - 90 - 477/2)
        this.posX += 50*dt;
        else if(this.posY < canvas.height + 0 - 477/2)
        this.posY += 50*dt;
        else if (this.posX > canvas.width -120 - 437/2){
            this.posX -= 50*dt;
            if (this.directionchange){
                this.directionchange = false;
                this.imageIterator = 12;
                clearInterval(this.intervalstep);
                this.intervalstep = setInterval(() => {
                    if (this.imageIterator <= 23) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 13;
                        this.image.src = "./images/" + this.color + "/step/step12.png";
                    }
                } , 100);
            }
        }
        
        else {
            if (!this.timer){
                this.timer = true;
                clearInterval(this.intervalstep);
                    this.image.src = "./images/" + this.color + "/Body.png";
                    this.width = 30;
                    this.height = 30;
                    this.posX += 5;
                    this.posY += 5;
                    setTimeout(() => {
                        this.posX-= 5;
                        this.posY-= 5;
                        this.width = 40;
                        this.height = 40;
                        this.imageIterator = 12; 
                        this.intervalstep = setInterval(() => {
                            if (this.imageIterator < 10) {
                                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else if (this.imageIterator <= 11) {
                                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else {
                                this.imageIterator = 1;
                                this.image.src = "./images/" + this.color + "/step/step00.png";
                            }
                        } , 100);
                        this.timer = false;
                        score += this.Taskscore;
                        this.going = false;
                    }, 1000);
            }
            
        }
        }
        else{
            
        //inversed path
        if (this.posX < canvas.width - 40 - 437/2 && this.posY >= canvas.height + 0 - 477/2){
            this.posX += 50*dt;
            this.directionchange = true;
        }
        
        else if (this.posY > canvas.height - 90 - 477/2)
        this.posY -= 50*dt;
        else if (this.posX > canvas.width -160 - 437/2){
            this.posX -= 50*dt;
            if (this.directionchange){
                this.directionchange = false;
                this.imageIterator = 12;
                clearInterval(this.intervalstep);
                this.intervalstep = setInterval(() => {
                    if (this.imageIterator <= 23) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 13;
                        this.image.src = "./images/" + this.color + "/step/step12.png";
                    }
                } , 100);
            }
        }

        
        else{
            //Erase this from the array
            clearInterval(this.intervalstep);

            this.posX =             canvas.width - 160 - 437/2;
            this.posY = 90 +       canvas.height - 180 - 477/2;
            this.going = true;
            this.image.src = "./images/" + this.color + "/step/step00.png";
            this.imageIterator = 0;
            this.timer = false;
            this.directionchange = true;
            
            this.intervalstep = setInterval(() => {
                if (this.imageIterator < 10) {
                    this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                    this.imageIterator += 1;
                }
                else if (this.imageIterator <= 11) {
                    this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                    this.imageIterator += 1;
                }
                else {
                    this.imageIterator = 1;
                    this.image.src = "./images/" + this.color + "/step/step00.png";
                }
            } , 100);           
            
        }
        
        }
    }
}

class CrewMiniElectro { //spaceFromBorder, 150
    constructor(color) {
        this.width = 40;
        this.height = 40;
        this.Taskscore = 75;
        this.posX = 160 +       160;
        this.posY = 150 +       150;
        this.going = true;
        this.image = new Image();
        this.image.src = "./images/" + color + "/step/step00.png";
        this.timer = false;   
        this.imageIterator = 12;
        this.timer = false;
        this.directionchange = false;
        this.color = color;
        
        this.intervalstep = setInterval(() => {
            if (this.imageIterator <= 23) {
                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else {
                this.imageIterator = 13;
                this.image.src = "./images/" + this.color + "/step/step12.png";
            }
        } , 100);
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        }

    update(dt) {
         if (this.going){
             if(this.posY > 240)
             this.posY -= 50 * dt;
             else if(this.posX > 165){
                this.posX -= 50 * dt;
                this.posY -= 20 * dt;
             }
             else {
                if (!this.timer){
                    this.timer = true;
                    clearInterval(this.intervalstep);
                    this.image.src = "./images/" + this.color + "/Body.png";
                    this.width = 30;
                    this.height = 30;
                    this.posX += 5;
                    this.posY += 5;
                    setTimeout(() => {
                        this.posX-= 5;
                        this.posY-= 5;
                        this.width = 40;
                        this.height = 40;
                        this.imageIterator = 12; 
                        this.intervalstep = setInterval(() => {
                            if (this.imageIterator < 10) {
                                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else if (this.imageIterator <= 11) {
                                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else {
                                this.imageIterator = 1;
                                this.image.src = "./images/" + this.color + "/step/step00.png";
                            }
                        } , 100);
                        this.timer = false;
                        score += this.Taskscore;
                        this.going = false;
                    }, 1000);
                }
             }
         }
         else{
             if(this.posX < 320){
                this.posX += 50 * dt;
                this.posY += 20 * dt;
             }
            else if(this.posY < 300){
                this.posY += 50 * dt;
            }
            else{
                //Erase this from the array
                clearInterval(this.intervalstep);

                this.posX = 160 +       160;
                this.posY = 150 +       150;
                this.going = true;
                this.image.src = "./images/" + this.color + "/step/step00.png";
                this.timer = false;   
                this.imageIterator = 12;
                this.timer = false;
                this.directionchange = false;
                
                this.intervalstep = setInterval(() => {
                    if (this.imageIterator <= 23) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 13;
                        this.image.src = "./images/" + this.color + "/step/step12.png";
                    }
                } , 100);         
                
            }

         }
        
    }
}

class CrewMiniAdmin {   //spaceFromBorder, canvas.height - 180 - 1445/7
    constructor(color) {
        this.width = 40;
        this.height = 40;
        this.Taskscore = 25;
        this.posX = - 20        +160;
        this.posY = 45          + canvas.height - 180 - 1445/7;
        this.going = true;
        this.image = new Image();
        this.image.src = "./images/" + color + "/step/step00.png";
        this.timer = false;   
        this.imageIterator = 0;
        this.timer = false;
        this.directionchange = false;
        this.color = color;
        
        this.intervalstep = setInterval(() => {
            if (this.imageIterator < 10) {
                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else if (this.imageIterator <= 11) {
                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else {
                this.imageIterator = 1;
                this.image.src = "./images/" + this.color + "/step/step00.png";
            }
        } , 100);
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        }
    update(dt) {
        if (this.going){
            if(this.posX < 370 && this.posY == 45 + canvas.height - 180 - 1445/7)
            this.posX += 50 * dt;
            else if(this.posY < 110 + canvas.height - 180 - 1445/7) {
                this.posY += 50 * dt;
            }
            else {
                if (!this.timer){
                    this.timer = true;
                    clearInterval(this.intervalstep);
                    this.image.src = "./images/" + this.color + "/Body.png";
                    this.width = 30;
                    this.height = 30;
                    this.posX += 5;
                    this.posY += 5;
                    setTimeout(() => {
                        this.posX-= 5;
                        this.posY-= 5;
                        this.width = 40;
                        this.height = 40;
                        this.imageIterator = 12; 
                        this.intervalstep = setInterval(() => {
                            if (this.imageIterator < 10) {
                                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else if (this.imageIterator <= 11) {
                                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else {
                                this.imageIterator = 1;
                                this.image.src = "./images/" + this.color + "/step/step00.png";
                            }
                        } , 100);
                        this.timer = false;
                        score += this.Taskscore;
                        this.going = false;
                    }, 1000);
                }
            }
        }
        else{
            if(this.posX < 430)
            this.posX += 50 * dt;
            else{
                //Erase this from the array
                clearInterval(this.intervalstep);

                this.posX = - 20        +160;
                this.posY = 45          + canvas.height - 180 - 1445/7;
                this.going = true;
                this.image.src = "./images/" + this.color + "/step/step00.png";
                this.timer = false;   
                this.imageIterator = 0;
                this.timer = false;
                this.directionchange = false;

                this.intervalstep = setInterval(() => {
                    if (this.imageIterator < 10) {
                        this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else if (this.imageIterator <= 11) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 1;
                        this.image.src = "./images/" + this.color + "/step/step00.png";
                    }
                } , 100);
                
            }
        }        
    }
}

class CrewBodyDeath { 
    constructor(color, posX, posY) {
        this.width = 40;
        this.height = 40;
        this.posX = posX;
        this.posY = posY;
        this.image = new Image();
        this.color = "red";
        this.color = color;
        
        this.image.src = "images/" + this.color +"/CuerpoMuerto.png";
        
        
        this.active = true;

        setTimeout(() => {
            this.active = false;
            deathAnimation.push(new CrewDeath(this.color, this.posX, this.posY));
        }, 200);
    }

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

class CrewDeath { 
    constructor(color, posX, posY) {
        this.width = 40;
        this.height = 30;
        this.posX = posX+10;
        this.posY = posY+15;
        this.image = new Image();
        this.color = "red";
        this.color = color;
        
        this.image.src = "images/"+ this.color +"/Death.png";
               
        this.active = true;

        setTimeout(() => {
            this.active = false;
        }, 400);
    }

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}



function SpawnCrewAdmin(){
	switch (getRandomInt(0, 4)){
		case 0:
			crewAdminArray.push(new CrewMiniAdmin("red"));
			break;
		case 1:
			crewAdminArray.push(new CrewMiniAdmin("white"));
			break;
		case 2:
			crewAdminArray.push(new CrewMiniAdmin("black"));
			break;
	}
};

function SpawnCrewElectric(){
	switch (getRandomInt(0, 4)){
		case 0:
			crewElectricArray.push(new CrewMiniElectro("red"));
			break;
		case 1:
			crewElectricArray.push(new CrewMiniElectro("white"));
			break;
		case 2:
			crewElectricArray.push(new CrewMiniElectro("black"));
			break;
	}
};

function SpawnCrewMedBay(){
	switch (getRandomInt(0, 4)){
		case 0:
			crewMedBayArray.push(new CrewMiniMedic("red"));
			break;
		case 1:
			crewMedBayArray.push(new CrewMiniMedic("white"));
			break;
		case 2:
			crewMedBayArray.push(new CrewMiniMedic("black"));
			break;
	}
};

function SpawnCrewShields(){
	switch (getRandomInt(0, 4)){
		case 0:
			crewShieldsArray.push(new CrewMiniShields("red"));
			break;
		case 1:
			crewShieldsArray.push(new CrewMiniShields("white"));
			break;
		case 2:
			crewShieldsArray.push(new CrewMiniShields("black"));
			break;
	}
};


2024-05-08T18:02:53.513859900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 3832
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class Vent {
    constructor( posX, posY) {
        this.width = 165/4;
        this.height = 211/4;
        this.posX = posX;
        this.posY = posY;
        this.ventOpen = false;
        this.going = true;
        this.image = new Image();
        this.image.src = "images/vent/ventClosed.png";
        setTimeout(() => {
            var timerOuter = getRandomInt(2000, 5000);
            exclamations.push(new Exclamation(this.posX, this.posY, timerOuter));
            setTimeout(() => {
                switch (getRandomInt(0, 3)) {
                    case 0:
                        this.image.src = "images/vent/ventBLACK.png";
                        break;
                    case 1:
                        this.image.src = "images/vent/ventWHITE.png";
                        break;
                    case 2:
                        this.image.src = "images/vent/ventRED.png";
                        break;
                }
                this.ventOpen = true;
            }   , timerOuter);
        }   , getRandomInt(30000, 90000));
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }

    update(dt) {
    }

    MouseOverVent(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    OverVent(){
        
    }

    ClickingVent(x, y){
        if(x > this.posX  && x < this.posX + this.width &&
         y > this.posY && y < this.posY + this.height && this.ventOpen){
            this.VentReset();
        }
    };

    VentReset(){
        if(this.ventOpen){
            this.ventOpen = false;
            this.image.src = "images/vent/ventClosed.png";
            setTimeout(() => {
                var timerOuter = getRandomInt(2000, 5000);
                exclamations.push(new Exclamation(this.posX, this.posY, timerOuter));
                setTimeout(() => {
                    switch (getRandomInt(0, 3)) {
                        case 0:
                            this.image.src = "images/vent/ventBLACK.png";
                            break;
                        case 1:
                            this.image.src = "images/vent/ventWHITE.png";
                            break;
                        case 2:
                            this.image.src = "images/vent/ventRED.png";
                            break;
                    }
                    this.ventOpen = true;
                }   , timerOuter);
            }   , getRandomInt(30000, 90000));
        }
    }

};

class Exclamation {
    constructor(posX, posY, timerOuter) {
        this.width = 20;
        this.height = 30;
        this.posX = posX+10;
        this.posY = posY;
        this.going = true;
        this.active = true;
        this.image = new Image();
        this.image.src = "images/interface/Exclamation.png";
        setTimeout(() => {
            clearInterval(interval);
            this.active = false;
        }, timerOuter);

        var interval = setInterval(() => {
            if (this.width < 35 && this.going){
                this.width += 1;
                this.height += 1;

                this.posX -= 0.5;
                this.posY -= 1;
            }
            else if (this.width >25){
                this.going = false;
                this.width -= 1;
                this.height -= 1;

                this.posX += 0.5;
                this.posY += 1;
            }
            else{
                this.going = true;
            }
            
        }, 10);
    }

    

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

2024-05-08T18:02:53.517864900-Client connected from /127.0.0.1:46578
2024-05-08T18:02:53.518861900-Client connected from /127.0.0.1:46579
2024-05-08T18:02:53.528858300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1120
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class bg_room {
    constructor(name, sprite, posX, posY, width, height) {
        
        //Custom values
        this.name = name;
        this.image = new Image();
        this.image.src = sprite;
        this.posX = posX;
        this.posY = posY;
        this.width = width;
        this.height = height;
        
      }
    
      update(dt){
      }
      
      render(){
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
      }
    
}

function renderPlaces(){
  if(AdminSupport) AdminSupport.render();
	if(ElectricalSupport) ElectricalSupport.render();
	if(MedbaySupport) MedbaySupport.render();
	if(ShieldsSupport) ShieldsSupport.render();
	
	if(AdminRoom) AdminRoom.render();
	if(ElectricalRoom) ElectricalRoom.render();
	if(MedbayRoom) MedbayRoom.render();
	if(Shields) Shields.render();

	if(AdminCam) AdminCam.render();
	if(ElectricalCam) ElectricalCam.render();
	if(MedbayCam) MedbayCam.render();
	if(ShieldsCam) ShieldsCam.render();

	ventElectric.render();
	ventMedBay.render();
	ventShields.render();
	ventAdmin.render();
}

2024-05-08T18:02:53.528858300-Client connected from /127.0.0.1:46580
2024-05-08T18:02:53.532858-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 2049
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

var clickPower = 1;

var adminCost = 2; //5
var adminCostBase = 2;
var adminPow = 0.6;
var adminPowTotal = 1.0;

var medBayCost = 3; //10
var medBayCostBase = 3;
var medBayPow = 0.4;
var medBayPowTotal = 1.0;

var electricalCost = 5; //15
var electricalCostBase = 5;
var electricalPow = 0.6;
var electricalPowTotal = 1.0;

var shieldsCost = 10; //20
var shieldsCostBase = 10;
var shieldsPow = 0.3;
var shieldsPowTotal = 1.0;

var autoClickerCost = 10;
var votesIncrement = 0.1;

class AutoClicker{
    constructor(){
        this.active = false;
        this.clicksPerSecond = 0.0;
        this.clicksPerSecondBase = 0.0;
    } 

}

class AutoClkrSimple extends AutoClicker{
    
    constructor(){
        super();
    }

    update(dt){
        
        //Upgrade costs
        adminCost = Math.floor(Math.pow(adminCostBase, adminPowTotal + adminPow * crewAdminArray.length));
        medBayCost = Math.floor(Math.pow(medBayCostBase, medBayPowTotal + medBayPow * crewMedBayArray.length));
        electricalCost = Math.floor(Math.pow(electricalCostBase, electricalPowTotal + electricalPow * crewElectricArray.length));
        shieldsCost = Math.floor(Math.pow(shieldsCostBase, shieldsPowTotal + shieldsPow * crewShieldsArray.length));
        autoClickerCost = doubleAuto ? this.clicksPerSecond * 50 : this.clicksPerSecond * 100;
        
        this.clicksPerSecond = doubleAuto ? this.clicksPerSecondBase *2  : this.clicksPerSecondBase; 

        if(!this.active && this.clicksPerSecond >= 0.1){
            this.active = true;
            setTimeout(() => {
                if(impostor.isImpostorAlive()){
                    if(doubleAuto){
                        DamageImpostor();
                        DamageImpostor();
                    }
                    else{
                        DamageImpostor();
                    }
                    
                }
                this.active = false;
            }, 1000/this.clicksPerSecond);
        }
    }
}

2024-05-08T18:02:53.540858200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1810
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class PowerUp {
    constructor(posX, posY, width, height, sprite) {
        this.posX = posX;
        this.posY = posY;
        this.width = width;
        this.height = height;
        this.image = new Image();
        this.image.src = sprite;
    }
    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

var doubleAuto = false;

class DoubleAutoPowerUp extends PowerUp {
    constructor(posX, posY, width, height, sprite) {
        super(posX, posY, width, height, sprite);
        this.active = false;

        setInterval(() => {
            if (this.active == false) {
                this.active = true;
                this.posX = getRandomInt(100, canvas.width - 100);
            }
        }, getRandomInt(60000, 120000));
    }
    render() {
        if (this.active)
            super.render();
    }

    update(dt) {
        if(this.posY > canvas.height) this.active = false; 

        if (this.active) {

            //move down making a sinusoidal movement
            this.posX += 100 * Math.sin(this.posY / 10) * dt;
            this.posY += 20 * dt;

            //Check if pressed
            this.OverPowerAction();
        }
        else {
            this.posX = -this.width;
            this.posY = -this.height;
        }
        
        
    }

    MouseOverButton() {
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    OverPowerAction() {
        if (this.MouseOverButton() && this.active && isClick ) {
            this.active = false;
            doubleAuto = true;
            setTimeout(() => {
                doubleAuto = false;
            }, 10000);
        }
    }
}

2024-05-08T18:02:53.540858200-Client connected from /127.0.0.1:46581
2024-05-08T18:02:53.543859900-Client connected from /127.0.0.1:46582
2024-05-08T18:02:53.544861800-Client connected from /127.0.0.1:46583
2024-05-08T18:02:53.550864500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1935
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class Barometer{
        constructor(posX, posY){
        this.posX = posX;
        this.posY = posY;
        this.width = 1490/12;
        this.height = 158/12;
        this.limit = 30;
        this.image = new Image();
        this.image.src = "images/interface/Needle.png";
        this.baroBody = new BaroBody(this.posX - 1920/24 + this.width/2, this.posY-1344/24 + this.height/2 - 25);
    }

    render(){
        this.baroBody.render();
        ctx.save();
        //rotate the image from the center
        ctx.translate(this.posX + this.width / 2, this.posY + this.height / 2);
        ctx.rotate(this.angle);
        ctx.translate(-(this.posX + this.width / 2), -(this.posY + this.height / 2));
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        ctx.restore();
    }

    update(dt, CrewsActive){
        //rotate the needle based on the quantity of crew members
        this.angle = (CrewsActive/this.limit) * Math.PI/2;

        //limit the rotation
        if(this.angle > Math.PI){
            this.angle = Math.PI;
        }
        if(this.angle < 0){
            this.angle = 0;
        }

        if (this.angle < Math.PI/2){
            impostor.forceDamage = 1;
        }

        if (this.angle > Math.PI/2){
            impostor.forceDamage = 2;
        }

        if (this.angle > Math.PI/2 + Math.PI/4){
            impostor.forceDamage = 3;
        }

        if (this.angle > Math.PI){
            impostor.forceDamage = 4;
        }
    }
};

class BaroBody {
    constructor(posX, posY){
        this.posX = posX;
        this.posY = posY;
        this.width = 1920/12;
        this.height = 1344/12;
        this.image = new Image();
        this.image.src = "images/interface/Counter.png";
    }

    render(){
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

2024-05-08T18:02:53.550864500-Client connected from /127.0.0.1:46584
2024-05-08T18:02:53.553863300-Client connected from /127.0.0.1:46585
2024-05-08T18:02:53.554863900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 204
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

// Sound effects
var sndKilled = new Audio("sound/killed.mp3");
sndKilled.volume = 0.1;

var sndBackground = new Audio("sound/NormalTask.wav");
sndBackground.volume = 0.1;
sndBackground.loop = true;

2024-05-08T18:02:53.561862900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 396
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

const textPrompt = [
    "Blue was an impostor",
    "Red is sus, vote him out",
    "Green was with brown",
    "Yellow was in electrical",
    "Purple called the meeting",
    "Orange vented",
    "Pink vote for Red",
    "Black is \'doing\' tasks",
    "White is sus",
    "Brown was with green",
    "Cyan finished his tasks",
    "Lime have lag",
    "Maroon is crewmate",

];

2024-05-08T18:02:53.561862900-Client connected from /127.0.0.1:46586
2024-05-08T18:02:53.564858700-Client connected from /127.0.0.1:46587
2024-05-08T18:02:53.565864200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 205
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class ImpostorWhite extends Impostor {
    constructor() {
      var lifePoints = 15;
      var name = 'White Impostor';
      var color = 'white';
      super(color, lifePoints, name,10);
    }
  }

2024-05-08T18:02:53.573858100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 4709
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900



class Impostor {
    constructor(color, lifePoints, name, score) {
      
      this.width = 250;
      this.height = 300;
      this.posX = canvas.width / 2 -this.width / 2;
      this.posY = canvas.height / 2 - this.height / 2;
      this.image = new Image();
      this.forceDamage = 1;

      //Default values
      this.color = 'red';
      this.name = 'Impostor';
      
      this.lifePoints = 5;
      this.score = 1;

      //Custom values
      this.color = color;
      this.name = name;
      this.sprite = "images/" + this.color + "/Body.png";  
      this.lifePoints = lifePoints;
      this.score = score;
      this.image.src = this.sprite;

      
    }
  
    update(dt){
        this.OverImpostor();
    }
    
    render(){
        if (this.isImpostorAlive()) {
            ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        }
    }
    
    isImpostorAlive(){
        return this.lifePoints > 0;
    }
    
    DamageImpostor(){
        this.lifePoints -= Math.floor(clickPower * (this.forceDamage + (combo/500)));
    } 

    MouseOverImpostor(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    OverImpostor(){
        if(this.MouseOverImpostor()){
            if(!isClick){
                //Make the image bigger
                this.width = 350;
                this.height = 400;
                this.posX = canvas.width / 2 -this.width / 2;
                this.posY = canvas.height / 2 - this.height / 2;
            } 
            else {
                //Make the image bit smaller
                this.width = 325;
                this.height = 375;
                this.posX = canvas.width / 2 -this.width / 2;
                this.posY = canvas.height / 2 - this.height / 2;        
            }
        } else {
                //Make the image smaller
                this.width = 250;
                this.height = 300;
                this.posX = canvas.width / 2 -this.width / 2;
                this.posY = canvas.height / 2 - this.height / 2;
            }
        }
  }

  //To damage the impostor
  function ClickingImpostor(x,y){
	if(x > canvas.width / 2 - impostor.width / 2 && x < canvas.width / 2 + impostor.width / 2 &&
	 y > canvas.height / 2 - impostor.height / 2 && y < canvas.height / 2 + impostor.height / 2){
		
		if (impostor.isImpostorAlive()) {
		    combo++;
		    UI.randomAngleCombo = getRandomInt(-25, 25);
		    UI.randomSizeCombo = getRandomInt(45, 65);
            DamageImpostor();
		}
	}
};

  DamageImpostor = function(){
    score += Math.floor(clickPower*(1 + (combo/500)));
	impostor.DamageImpostor();

	//Kill the impostor
	if(!impostor.isImpostorAlive()){
        sndKilled.pause();
        sndKilled.currentTime = 0;
		sndKilled.play();

        UI.specialScore = "+" + impostor.score;
        setTimeout(() => {
            UI.specialScore = "";
        }, 1000);

		score += impostor.score;
		impostorSpawned = false;
		setTimeout(SpawnImpostor, 1000);

        //Spawn death animation
        console.log("Spawn death animation: " + impostor.color);
        deathAnimation.push(new ImpostorBodyDeath(impostor.color));
	}
};

class ImpostorBodyDeath { 
    constructor(color){
        this.width = 350;
        this.height = 400;
        this.posX = canvas.width / 2 -this.width / 2;
        this.posY = canvas.height / 2 - this.height / 2;
        this.image = new Image();
        this.color = color;
       
        this.image.src = "images/" + this.color + "/CuerpoMuerto.png";
                
        
        this.active = true;

        setTimeout(() => {
            this.active = false;
            deathAnimation.push(new ImpostorDeath(impostor.color));
        }, 200);
    }

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

class ImpostorDeath { 
    constructor(color){
        this.width = 350;
        this.height = 400;
        this.posX = canvas.width / 2 -this.width / 2 + 100;
        this.posY = canvas.height / 2 - this.height / 2 + 100;
        this.image = new Image();
        this.color = color;
        
        this.image.src = "images/" + this.color + "/Death.png";
                
        
        this.active = true;

        setTimeout(() => {
            this.active = false;
        }, 200);
    }

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

2024-05-08T18:02:53.579862-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 733
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class paralax {
  constructor(image, posX, posY, speed) {
    this.posX = posX;
    this.posY = posY;
    this.width = 600;
    this.height = 600;
    this.image = new Image();
    this.image.src = image;
    this.angle = 0;
    this.speed = speed;
  }
  render() {
    
    ctx.save();
    //rotate the image from the center
    ctx.translate(this.posX + this.width / 2, this.posY + this.height / 2);
    ctx.rotate(this.angle);
    ctx.translate(-(this.posX + this.width / 2), -(this.posY + this.height / 2));



    ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    ctx.restore();
  }

    update(dt) {
        //rotate the image
        this.angle +=this.speed*dt;
    }
}

2024-05-08T18:02:53.579862-Client connected from /127.0.0.1:46588
2024-05-08T18:02:53.582866800-Client connected from /127.0.0.1:46589
2024-05-08T18:02:53.584873100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 206
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class ImpostorBlack extends Impostor {
    constructor() {
      var lifePoints = 25;
      var name = 'Black Impostor';
      var color = 'black';
      super(color, lifePoints, name, 15);
    }
  }

2024-05-08T18:02:53.598383400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 6319
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900




class Button {
    constructor(name, sprite, posX, posY, width, height) {
        //Custom values
        this.name = name;
        this.image = new Image();
        this.image.src = sprite;
        this.posX = posX;
        this.posY = posY;
        this.width = width;
        this.height = height;
    }

    render(){
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }

   
}

class simpleButton extends Button{
    constructor(name, sprite, posX, posY, width, height) {
        super(name, sprite, posX, posY, width, height);
        
    }
    
    update(dt){
    
    }
      
    render(){
        super.render();
    }

    
    MouseOverButton(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    ClickingButton(type){

        if(this.MouseOverButton() && isClick){
            switch(type){
                case "autoclicker":
                    if(score - autoClickerCost >= 0){
                        score -= autoClickerCost;
                        autoclicker.clicksPerSecondBase += votesIncrement;
                    }
                        break;
                    case "howtoplay":
                        // Go to the How to Play html
                        saveAllCookies();
                        window.location.href = "howtoplay.html";
                        break;
                    case "erase":
                        // Erase the game
                        deleteAllCookies();
                        break;
                    case "save":
                        // Save the game
                        saveAllCookies();
                        break;
                    case "gladiator":
                        if(score - hatCost >= 0 && !GladiatorUnloked){
                            score -= hatCost;
                            GladiatorUnloked = true;
                        }
                        if(GladiatorUnloked) ChangeHat("Gladiator");
                        break;
                    case "hat":
                        if(score - hatCost >= 0 && !HatUnloked){
                            score -= hatCost;
                            HatUnloked = true;
                        }
                        if(HatUnloked) ChangeHat("Hat");
                    break;
                    case "demon":
                        if(score - hatCost >= 0 && !DemonUnloked){
                            score -= hatCost;
                            DemonUnloked = true;
                        }
                        if(DemonUnloked) ChangeHat("Demon");
                    break;
                    case "archeologist":
                        if(score - costumeCost >= 0 && !ArcheologistUnloked){
                            score -= costumeCost
                            ArcheologistUnloked = true;
                        }
                        if(ArcheologistUnloked) ChangeCostume("Archeologist");
                    break;
                    case "suit":
                        if(score - costumeCost >= 0 && !SuitUnloked){
                            score -= costumeCost
                            SuitUnloked = true;
                        }
                        if(SuitUnloked) ChangeCostume("Suit");
                    break;
                    case "robot":
                        if(score - costumeCost >= 0 && !RobotUnloked){
                            score -= costumeCost
                            RobotUnloked = true;
                        }
                        if(RobotUnloked) ChangeCostume("Robot");
                    break;
                    case "cube":
                        if(score - petCost >= 0 && !CubeUnloked){
                            score -= petCost;
                            CubeUnloked = true;
                        }
                        if(CubeUnloked) ChangePet("Cube");
                    break;
                    case "clank":
                        if(score - petCost >= 0 && !ClankUnloked){
                            score -= petCost;
                            ClankUnloked = true;
                        }
                        if(ClankUnloked) ChangePet("ClankPet");
                    break;
                    case "spark":
                        if(score - petCost >= 0 && !SparkUnloked){
                            score -= petCost;
                            SparkUnloked = true;
                        }
                        if(SparkUnloked) ChangePet("343GuiltySpark");
                    break;

                        
            }
        }
    }
}

class upgradeButton extends Button{
    constructor(name, sprite, posX, posY, width, height) {
        super(name, sprite, posX, posY, width, height);
        
    }
    
    update(dt){
    
    }
      
    render(){
        super.render();
    }

    
    MouseOverButton(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }


    ClickingButton(cost, type){
        if(this.MouseOverButton() && isClick){
            if(score-cost >= 0){
                score -= cost;
                this.image.src = "images/interface/ButtonPressed.png";
                
                switch(type){
                    case "admin":
                        SpawnCrewAdmin();
                        break;
                    case "medbay":
                        SpawnCrewMedBay();
                        break;
                    case "electrical":
                        SpawnCrewElectric();
                        break;
                    case "shields":
                        SpawnCrewShields();
                        break;
                }

                var self = this;
                setTimeout(function(){
                    console.log("Button pressed");
                    clickPower += 0.001;
                    self.image.src = "images/interface/Button.png";
                }, 200);
                return true;
            }
        }
    };

    
    
}

2024-05-08T18:02:53.602385400-Client connected from /127.0.0.1:46590
2024-05-08T18:02:53.606382400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 200
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class ImpostorRed extends Impostor {
    constructor() {
      var lifePoints = 40;
      var name = 'Red Impostor';
      var color = 'red';
      super(color, lifePoints, name, 25);
    }
  }

2024-05-08T18:02:53.606382400-Client connected from /127.0.0.1:46591
2024-05-08T18:02:53.609386500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1114
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

function collision(first, second) {
    return !(first.posX > second.posX + second.width ||
        first.posX + first.width < second.posX ||
        first.posY > second.posY + second.height ||
        first.posY + first.height < second.posY);
}

class ventCollision {
    constructor(posX, posY, width, height) {
        this.posX = posX + 40;
        this.posY = posY;
        this.width = width - 80;
        this.height = height;
    }
}

function checkCollisionBetweenCrewArrayAndVent(crewArray, vent) {
    var arraylength = 0;
    var ventColl = new ventCollision(vent.posX, vent.posY, vent.width, vent.height);
    arraylength = crewArray.length;
    if (arraylength > 0) {
        for (let i = 0; i < arraylength; i++) {
            if (collision(crewArray[i], ventColl) && vent.ventOpen) {
                deathAnimation.push(new CrewBodyDeath(crewArray[i].color, crewArray[i].posX, crewArray[i].posY));
                crewArray.splice(i, 1); 
                setTimeout(function(){ vent.VentReset(); }, 1500);
                break;
            }
        }
    }
    
}


2024-05-08T18:02:53.616384800-Client connected from /127.0.0.1:46592
2024-05-08T18:02:53.629381-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 7839
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

var hatCost = 1000;
var costumeCost = 10000;
var petCost = 50000; 

var GladiatorUnloked = false;
var HatUnloked = false;
var DemonUnloked = false;

var ArcheologistUnloked = false;
var SuitUnloked = false;
var RobotUnloked = false;

var CubeUnloked = false;
var ClankUnloked = false;
var SparkUnloked = false;

var lockImage = new Image();
lockImage.src = "./images/icons/Lock.png";


class HUD{

    constructor() {
        this.scoreText = "Score: 0";
        this.movableTexts = [];

        this.imgCrewAnnounce = new Image();
        this.imgCrewAnnounce.src = "./images/icons/Announce.png";

        this.specialScore = "";

        this.randomAngleCombo = 0;
        this.randomSizeCombo = 50;

        this.createMovableText("Welcome to the ImpostOut Web Game", "grey", -75);
        this.newMovableTextFromFile();

    }

    update(dt) {
        this.scoreText = 'Crew Votes: ' + Math.floor(score);

        //Movable Texts
        for (var i = 0; i < this.movableTexts.length ; i++) {
            this.movableTexts[i].update(dt);

            //Remove if out of screen
            if(this.movableTexts[i].x > canvas.width+1 || this.movableTexts[i].x < -401){
                this.movableTexts.splice(i, 1);
            }
        }
    }

    render() {
        //Black line at the top
        ctx.fillStyle = 'black';
        ctx.fillRect(0, 0, canvas.width, 25);

        //Crew Votes
        ctx.font = '80px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText(this.scoreText, 
            canvas.width/2 - 120, 
            canvas.height/2 - 360);

        //Votes per second
        ctx.font = '30px AmongUsFont';
        if(doubleAuto) ctx.fillStyle = "red";
        else ctx.fillStyle = "#e0e0e0";
        ctx.fillText('Votes per second: ' + Math.floor(autoclicker.clicksPerSecond*10)/10,
            canvas.width/2 - 55,
            canvas.height/2 - 325);

        //Upgrade Cost
        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + electricalCost,
        ElectricalRoom.posX+buttonSize, ElectricalRoom.posY +290);

        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + medBayCost,
        MedbayRoom.posX+buttonSize, MedbayRoom.posY +260);

        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + adminCost,
        AdminRoom.posX+buttonSize, AdminRoom.posY +290);
        
        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + shieldsCost,
        Shields.posX+buttonSize, Shields.posY +320);

        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + Math.floor(autoClickerCost),
        canvas.width/2- 60, canvas.height -35);

        //Shop Cost

        //Gladiator
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Gladiator: " + hatCost,
        GladiatorShopButton.posX + 10, GladiatorShopButton.posY + 77);
        if(!GladiatorUnloked) ctx.drawImage(lockImage, GladiatorShopButton.posX + 45, GladiatorShopButton.posY + 40, 20, 20);
        //Hat
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Hat: " + hatCost,
        HatShopButton.posX + 20, HatShopButton.posY + 77);
        if(!HatUnloked) ctx.drawImage(lockImage, HatShopButton.posX + 45, HatShopButton.posY + 40, 20, 20);
        //Demon
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Demon: " + hatCost,
        DemonShopButton.posX + 10, DemonShopButton.posY + 77);
        if(!DemonUnloked) ctx.drawImage(lockImage, DemonShopButton.posX + 45, DemonShopButton.posY + 40, 20, 20);

        //Archeologist
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Archeologist: " + costumeCost,
        ArcheologistShopButton.posX - 20, ArcheologistShopButton.posY + 77);
        if(!ArcheologistUnloked) ctx.drawImage(lockImage, ArcheologistShopButton.posX + 40, ArcheologistShopButton.posY + 40, 20, 20);
        //Suit
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Suit: " + costumeCost,
        SuitShopButton.posX +5, SuitShopButton.posY + 77);
        if(!SuitUnloked) ctx.drawImage(lockImage, SuitShopButton.posX + 40, SuitShopButton.posY + 40, 20, 20);
        //Robot
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Robot: " + costumeCost,
        RobotShopButton.posX+5, RobotShopButton.posY + 77);
        if(!RobotUnloked) ctx.drawImage(lockImage, RobotShopButton.posX + 40, RobotShopButton.posY + 40, 20, 20);

        //Pets
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("All pets: " + petCost,
        ClankShopButton.posX -20, ClankShopButton.posY + 60);

        if(!CubeUnloked) ctx.drawImage(lockImage, CubeShopButton.posX + 15, CubeShopButton.posY + 20, 15, 15);
        if(!ClankUnloked) ctx.drawImage(lockImage, ClankShopButton.posX + 15, ClankShopButton.posY + 20, 15, 15);
        if(!SparkUnloked) ctx.drawImage(lockImage, SparkShopButton.posX + 15, SparkShopButton.posY + 20, 15, 15);

        //Shop Unlocks


        // Special Score
        ctx.font = '60px AmongUsFont';
        ctx.fillStyle = "grey";
        ctx.save(); // Save the current state
            ctx.translate(canvas.width/2 + 180, canvas.height/2 - 300); 
            ctx.rotate(-15 * Math.PI / 180); 
            ctx.fillText(this.specialScore, 0, 0); 
            ctx.restore(); 

        //Combo
        if(combo > 9){
             
            ctx.font = this.randomSizeCombo + 'px AmongUsFont';
            ctx.fillStyle = "rgba(255, 0, 0, 0.7)";
            ctx.save(); // Save the current state
            ctx.translate(canvas.width/2, canvas.height/2 + 175 ); 
            ctx.rotate(this.randomAngleCombo * Math.PI / 180); 
            ctx.fillText('Combo x' + combo + '!', -50, 0); 
            ctx.restore(); 
        }          

        //Movable Texts
        for (var i = 0; i < this.movableTexts.length ; i++) {
            this.movableTexts[i].render();
        }

        //Image at the top right
        ctx.drawImage(this.imgCrewAnnounce, canvas.width - 30, - 5, 40, 40);

        
        // Anti Cease and desist
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = 'grey';
        ctx.fillText('Sprites property of @. Only for class project porpuses and sus amogus.', 10, canvas.height - 10);

    }
    
    newMovableTextFromFile() {
        setInterval(() => {
            this.createMovableText(textPrompt[getRandomInt(0, textPrompt.length)], "grey", -75);
        }, 17500);

    }
        

    createMovableText(text, color, speed) {
        var movableText = new MovableText(text, color, speed);
        this.movableTexts.push(movableText);
    }

}

class MovableText{
    constructor(text, color, speed) {
        this.text = "Default Text"
        
        this.font = '30px AmongUsFont';
        this.speed = 0;
        
        this.text = text;
        this.color = color;
        this.speed = speed;

        this.y = 25;

        if(this.speed <= 0){
            this.x = canvas.width;
        }
        else{
            this.x = -400;
        }
    }

    update(dt) {
        this.x += this.speed * dt;
    }

    render() {
        ctx.font = this.font;
        ctx.fillStyle = this.color;
        ctx.fillText(this.text, this.x, this.y);
    }
}



2024-05-08T18:02:53.635382900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 2565
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class CustomSus {
    constructor() {
        this.posX = 60;
        this.posY = 50;
        this.width = 250/5;
        this.height = 300/5;
        this.color = "red";
        this.image = new Image();
        this.image.src = "./images/" + this.color + "/Body.png";
        this.costume = new CustomCostume(this.posX, this.posY);
        this.hat = new CustomHat(this.posX, this.posY);
        this.pet = new CustomPet(this.posX, this.posY);

    }

    render() {
        if(!this.hat.inFront)
        this.hat.render();
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        this.costume.render();
        if(this.hat.inFront)
        this.hat.render();

        this.pet.render();
    }

};

function ChangeHat(hat){
    customSus.hat.hat = hat;
    customSus.hat.image.src = "./images/miniCustom/" + customSus.hat.hat + ".png";
}

function ChangeCostume(costume){
    customSus.costume.costume = costume;
    customSus.costume.image.src = "./images/miniCustom/" + customSus.costume.costume + ".png";
}

function ChangePet(pet){
    customSus.pet.pet = pet;
    customSus.pet.image.src = "./images/miniCustom/" + customSus.pet.pet + ".png";
}


class CustomCostume {
    constructor(posX, posY) {
        this.posX = posX;
        this.posY = posY;
        this.width = 250/5;
        this.height = 300/5;
        this.image = new Image();
        this.costume = "noneCostume";
        
    }

    render() {
        this.image.src = "./images/miniCustom/" + this.costume + ".png";
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
};

class CustomHat {
    constructor(posX, posY) {
        this.posX = posX - 15;
        this.posY = posY-45;
        this.width = 120/1.5;
        this.height = 120/1.5;
        this.image = new Image();
        this.hat = "noneHat";
        this.inFront = true;
    }

    render() {
        this.image.src = "./images/miniCustom/" + this.hat + ".png";
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
};

class CustomPet {
    constructor(posX, posY) {
        this.posX = posX - 40;
        this.posY = posY+15 ;
        this.width = 120/3;
        this.height = 141/3;
        this.image = new Image();
        this.pet = "nonePet";
    }

    render() {
        this.image.src = "./images/miniCustom/" + this.pet + ".png";
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}


2024-05-08T18:02:53.635382900-Client connected from /127.0.0.1:46593
2024-05-08T18:02:53.639387600-Client connected from /127.0.0.1:46594
2024-05-08T18:02:53.640391100-Client connected from /127.0.0.1:46595
2024-05-08T18:02:53.673381100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 22545
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900



class CrewMiniMedic { //canvas.width - spaceFromBorder - 364/1.7, 140
    constructor(color) {
        this.width = 40;
        this.height = 40;
        this.Taskscore = 50;
        this.posX =             canvas.width - 160 - 364/1.7;
        this.posY = 100         + 140;
        this.going = true;
        this.image = new Image();
        this.image.src = "./images/" + color + "/step/step00.png";
        this.imageIterator = 0;
        this.timer = false;
        this.directionchange = false;
        this.color = color;
        
        this.intervalstep = setInterval(() => {
            if (this.imageIterator < 10) {
                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else if (this.imageIterator <= 11) {
                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else {
                this.imageIterator = 1;
                this.image.src = "./images/" + this.color + "/step/step00.png";
            }
        } , 100);
        
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }

    update(dt) {
        if (this.going){
            if(this.posX < canvas.width + 10 - 364/1.7)
            this.posX += 1;
            else {
                if (!this.timer){
                    this.timer = true;
                    clearInterval(this.intervalstep);
                    this.image.src = "./images/" + this.color + "/Body.png";
                    this.width = 30;
                    this.height = 30;
                    this.posX += 5;
                    this.posY += 5;
                    setTimeout(() => {
                        this.posX-= 5;
                        this.posY-= 5;
                        this.width = 40;
                        this.height = 40;
                        this.imageIterator = 12; 
                        this.intervalstep = setInterval(() => {
                            if (this.imageIterator <= 23) {
                                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else {
                                this.imageIterator = 13;
                                this.image.src = "./images/" + this.color + "/step/step12.png";
                            }
                        } , 100);
                        this.timer = false;
                        score += this.Taskscore;
                        this.going = false;
                    }, 1000);
                }
            }
        }
        else{
            if(this.posX > canvas.width - 160 - 364/1.7)
            this.posX -= 1;
            else{
                
                clearInterval(this.intervalstep);
                 //Erase this from the array
                 this.posX =             canvas.width - 160 - 364/1.7;
                 this.posY = 100         + 140;
                 this.going = true;
                 this.timer = false;
                 this.imageIterator = 0;
                 this.directionchange = false;
                 this.image.src = "./images/" + this.color + "/step/step00.png";

                 this.intervalstep = setInterval(() => {
                    if (this.imageIterator < 10) {
                        this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else if (this.imageIterator <= 11) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 1;
                        this.image.src = "./images/" + this.color + "/step/step00.png";
                    }
                } , 100);
            }
        }
        
    }
}

class CrewMiniShields {  //canvas.width - spaceFromBorder - 437/2, canvas.height - 180 - 477/2
    constructor(color) {
        this.width = 40;
        this.height = 40;
        this.Taskscore = 100;
        this.posX =             canvas.width - 160 - 437/2;
        this.posY = 90 +       canvas.height - 180 - 477/2;
        this.going = true;
        this.image = new Image();
        this.image.src = "./images/" + color + "/step/step00.png";
        this.imageIterator = 0;
        this.timer = false;
        this.directionchange = true;
        this.color = color;
        
        this.intervalstep = setInterval(() => {
            if (this.imageIterator < 10) {
                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else if (this.imageIterator <= 11) {
                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else {
                this.imageIterator = 1;
                this.image.src = "./images/" + this.color + "/step/step00.png";
            }
        } , 100);
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
    update(dt) {
        if (this.going){
        if(this.posX < canvas.width - 40 - 437/2  && this.posY == canvas.height - 90 - 477/2)
        this.posX += 50*dt;
        else if(this.posY < canvas.height + 0 - 477/2)
        this.posY += 50*dt;
        else if (this.posX > canvas.width -120 - 437/2){
            this.posX -= 50*dt;
            if (this.directionchange){
                this.directionchange = false;
                this.imageIterator = 12;
                clearInterval(this.intervalstep);
                this.intervalstep = setInterval(() => {
                    if (this.imageIterator <= 23) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 13;
                        this.image.src = "./images/" + this.color + "/step/step12.png";
                    }
                } , 100);
            }
        }
        
        else {
            if (!this.timer){
                this.timer = true;
                clearInterval(this.intervalstep);
                    this.image.src = "./images/" + this.color + "/Body.png";
                    this.width = 30;
                    this.height = 30;
                    this.posX += 5;
                    this.posY += 5;
                    setTimeout(() => {
                        this.posX-= 5;
                        this.posY-= 5;
                        this.width = 40;
                        this.height = 40;
                        this.imageIterator = 12; 
                        this.intervalstep = setInterval(() => {
                            if (this.imageIterator < 10) {
                                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else if (this.imageIterator <= 11) {
                                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else {
                                this.imageIterator = 1;
                                this.image.src = "./images/" + this.color + "/step/step00.png";
                            }
                        } , 100);
                        this.timer = false;
                        score += this.Taskscore;
                        this.going = false;
                    }, 1000);
            }
            
        }
        }
        else{
            
        //inversed path
        if (this.posX < canvas.width - 40 - 437/2 && this.posY >= canvas.height + 0 - 477/2){
            this.posX += 50*dt;
            this.directionchange = true;
        }
        
        else if (this.posY > canvas.height - 90 - 477/2)
        this.posY -= 50*dt;
        else if (this.posX > canvas.width -160 - 437/2){
            this.posX -= 50*dt;
            if (this.directionchange){
                this.directionchange = false;
                this.imageIterator = 12;
                clearInterval(this.intervalstep);
                this.intervalstep = setInterval(() => {
                    if (this.imageIterator <= 23) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 13;
                        this.image.src = "./images/" + this.color + "/step/step12.png";
                    }
                } , 100);
            }
        }

        
        else{
            //Erase this from the array
            clearInterval(this.intervalstep);

            this.posX =             canvas.width - 160 - 437/2;
            this.posY = 90 +       canvas.height - 180 - 477/2;
            this.going = true;
            this.image.src = "./images/" + this.color + "/step/step00.png";
            this.imageIterator = 0;
            this.timer = false;
            this.directionchange = true;
            
            this.intervalstep = setInterval(() => {
                if (this.imageIterator < 10) {
                    this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                    this.imageIterator += 1;
                }
                else if (this.imageIterator <= 11) {
                    this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                    this.imageIterator += 1;
                }
                else {
                    this.imageIterator = 1;
                    this.image.src = "./images/" + this.color + "/step/step00.png";
                }
            } , 100);           
            
        }
        
        }
    }
}

class CrewMiniElectro { //spaceFromBorder, 150
    constructor(color) {
        this.width = 40;
        this.height = 40;
        this.Taskscore = 75;
        this.posX = 160 +       160;
        this.posY = 150 +       150;
        this.going = true;
        this.image = new Image();
        this.image.src = "./images/" + color + "/step/step00.png";
        this.timer = false;   
        this.imageIterator = 12;
        this.timer = false;
        this.directionchange = false;
        this.color = color;
        
        this.intervalstep = setInterval(() => {
            if (this.imageIterator <= 23) {
                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else {
                this.imageIterator = 13;
                this.image.src = "./images/" + this.color + "/step/step12.png";
            }
        } , 100);
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        }

    update(dt) {
         if (this.going){
             if(this.posY > 240)
             this.posY -= 50 * dt;
             else if(this.posX > 165){
                this.posX -= 50 * dt;
                this.posY -= 20 * dt;
             }
             else {
                if (!this.timer){
                    this.timer = true;
                    clearInterval(this.intervalstep);
                    this.image.src = "./images/" + this.color + "/Body.png";
                    this.width = 30;
                    this.height = 30;
                    this.posX += 5;
                    this.posY += 5;
                    setTimeout(() => {
                        this.posX-= 5;
                        this.posY-= 5;
                        this.width = 40;
                        this.height = 40;
                        this.imageIterator = 12; 
                        this.intervalstep = setInterval(() => {
                            if (this.imageIterator < 10) {
                                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else if (this.imageIterator <= 11) {
                                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else {
                                this.imageIterator = 1;
                                this.image.src = "./images/" + this.color + "/step/step00.png";
                            }
                        } , 100);
                        this.timer = false;
                        score += this.Taskscore;
                        this.going = false;
                    }, 1000);
                }
             }
         }
         else{
             if(this.posX < 320){
                this.posX += 50 * dt;
                this.posY += 20 * dt;
             }
            else if(this.posY < 300){
                this.posY += 50 * dt;
            }
            else{
                //Erase this from the array
                clearInterval(this.intervalstep);

                this.posX = 160 +       160;
                this.posY = 150 +       150;
                this.going = true;
                this.image.src = "./images/" + this.color + "/step/step00.png";
                this.timer = false;   
                this.imageIterator = 12;
                this.timer = false;
                this.directionchange = false;
                
                this.intervalstep = setInterval(() => {
                    if (this.imageIterator <= 23) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 13;
                        this.image.src = "./images/" + this.color + "/step/step12.png";
                    }
                } , 100);         
                
            }

         }
        
    }
}

class CrewMiniAdmin {   //spaceFromBorder, canvas.height - 180 - 1445/7
    constructor(color) {
        this.width = 40;
        this.height = 40;
        this.Taskscore = 25;
        this.posX = - 20        +160;
        this.posY = 45          + canvas.height - 180 - 1445/7;
        this.going = true;
        this.image = new Image();
        this.image.src = "./images/" + color + "/step/step00.png";
        this.timer = false;   
        this.imageIterator = 0;
        this.timer = false;
        this.directionchange = false;
        this.color = color;
        
        this.intervalstep = setInterval(() => {
            if (this.imageIterator < 10) {
                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else if (this.imageIterator <= 11) {
                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else {
                this.imageIterator = 1;
                this.image.src = "./images/" + this.color + "/step/step00.png";
            }
        } , 100);
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        }
    update(dt) {
        if (this.going){
            if(this.posX < 370 && this.posY == 45 + canvas.height - 180 - 1445/7)
            this.posX += 50 * dt;
            else if(this.posY < 110 + canvas.height - 180 - 1445/7) {
                this.posY += 50 * dt;
            }
            else {
                if (!this.timer){
                    this.timer = true;
                    clearInterval(this.intervalstep);
                    this.image.src = "./images/" + this.color + "/Body.png";
                    this.width = 30;
                    this.height = 30;
                    this.posX += 5;
                    this.posY += 5;
                    setTimeout(() => {
                        this.posX-= 5;
                        this.posY-= 5;
                        this.width = 40;
                        this.height = 40;
                        this.imageIterator = 12; 
                        this.intervalstep = setInterval(() => {
                            if (this.imageIterator < 10) {
                                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else if (this.imageIterator <= 11) {
                                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else {
                                this.imageIterator = 1;
                                this.image.src = "./images/" + this.color + "/step/step00.png";
                            }
                        } , 100);
                        this.timer = false;
                        score += this.Taskscore;
                        this.going = false;
                    }, 1000);
                }
            }
        }
        else{
            if(this.posX < 430)
            this.posX += 50 * dt;
            else{
                //Erase this from the array
                clearInterval(this.intervalstep);

                this.posX = - 20        +160;
                this.posY = 45          + canvas.height - 180 - 1445/7;
                this.going = true;
                this.image.src = "./images/" + this.color + "/step/step00.png";
                this.timer = false;   
                this.imageIterator = 0;
                this.timer = false;
                this.directionchange = false;

                this.intervalstep = setInterval(() => {
                    if (this.imageIterator < 10) {
                        this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else if (this.imageIterator <= 11) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 1;
                        this.image.src = "./images/" + this.color + "/step/step00.png";
                    }
                } , 100);
                
            }
        }        
    }
}

class CrewBodyDeath { 
    constructor(color, posX, posY) {
        this.width = 40;
        this.height = 40;
        this.posX = posX;
        this.posY = posY;
        this.image = new Image();
        this.color = "red";
        this.color = color;
        
        this.image.src = "images/" + this.color +"/CuerpoMuerto.png";
        
        
        this.active = true;

        setTimeout(() => {
            this.active = false;
            deathAnimation.push(new CrewDeath(this.color, this.posX, this.posY));
        }, 200);
    }

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

class CrewDeath { 
    constructor(color, posX, posY) {
        this.width = 40;
        this.height = 30;
        this.posX = posX+10;
        this.posY = posY+15;
        this.image = new Image();
        this.color = "red";
        this.color = color;
        
        this.image.src = "images/"+ this.color +"/Death.png";
               
        this.active = true;

        setTimeout(() => {
            this.active = false;
        }, 400);
    }

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}



function SpawnCrewAdmin(){
	switch (getRandomInt(0, 4)){
		case 0:
			crewAdminArray.push(new CrewMiniAdmin("red"));
			break;
		case 1:
			crewAdminArray.push(new CrewMiniAdmin("white"));
			break;
		case 2:
			crewAdminArray.push(new CrewMiniAdmin("black"));
			break;
	}
};

function SpawnCrewElectric(){
	switch (getRandomInt(0, 4)){
		case 0:
			crewElectricArray.push(new CrewMiniElectro("red"));
			break;
		case 1:
			crewElectricArray.push(new CrewMiniElectro("white"));
			break;
		case 2:
			crewElectricArray.push(new CrewMiniElectro("black"));
			break;
	}
};

function SpawnCrewMedBay(){
	switch (getRandomInt(0, 4)){
		case 0:
			crewMedBayArray.push(new CrewMiniMedic("red"));
			break;
		case 1:
			crewMedBayArray.push(new CrewMiniMedic("white"));
			break;
		case 2:
			crewMedBayArray.push(new CrewMiniMedic("black"));
			break;
	}
};

function SpawnCrewShields(){
	switch (getRandomInt(0, 4)){
		case 0:
			crewShieldsArray.push(new CrewMiniShields("red"));
			break;
		case 1:
			crewShieldsArray.push(new CrewMiniShields("white"));
			break;
		case 2:
			crewShieldsArray.push(new CrewMiniShields("black"));
			break;
	}
};


2024-05-08T18:02:53.673381100-Client connected from /127.0.0.1:46596
2024-05-08T18:02:53.678381900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 2691
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

function setCookie(key, value) {
    var expires = new Date();

    //Expires in 1 year
    expires.setTime(expires.getTime() + (365 * 24 * 60 * 60 * 1000));
    document.cookie = key + '=' + value + ';expires=' + expires.toUTCString();
}

function getCookie(key) {
    var keyValue = document.cookie.match('(^|;) ?' + key + '=([^;]*)(;|$)');

    return keyValue ? keyValue[2] : null;
}

function deleteAllCookies() {
    var cookies = document.cookie.split(";");

    for (var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i];
        var eqPos = cookie.indexOf("=");
        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
        document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
    }
}

function saveAllCookies() {
    setCookie('score', score);
    setCookie('autoclicker', autoclicker.clicksPerSecondBase);
    setCookie('gladiatorUnloked', BoolToInt(GladiatorUnloked));
    setCookie('hatUnloked', BoolToInt(HatUnloked));
    setCookie('demonUnloked',  BoolToInt(DemonUnloked));
    setCookie('archeologistUnloked',  BoolToInt(ArcheologistUnloked));
    setCookie('suitUnloked',  BoolToInt(SuitUnloked));
    setCookie('robotUnloked',  BoolToInt(RobotUnloked));
    setCookie('cubeUnloked',  BoolToInt(CubeUnloked));
    setCookie('clankUnloked',  BoolToInt(ClankUnloked));
    setCookie('sparkUnloked',  BoolToInt(SparkUnloked));
}

function loadAllCookies() {
    if (getCookie('score') != null) score = Number(getCookie('score'));
    if(getCookie('autoclicker') != null) autoclicker.clicksPerSecondBase = Number(getCookie('autoclicker'));
    if(getCookie('gladiatorUnloked') != null) GladiatorUnloked = IntToBool(getCookie('gladiatorUnloked'));
    if(getCookie('hatUnloked') != null) HatUnloked = IntToBool(getCookie('hatUnloked'));
    if(getCookie('demonUnloked') != null) DemonUnloked = IntToBool(getCookie('demonUnloked'));
    if(getCookie('archeologistUnloked') != null) ArcheologistUnloked = IntToBool(getCookie('archeologistUnloked'));
    if(getCookie('suitUnloked') != null) SuitUnloked = IntToBool(getCookie('suitUnloked'));
    if(getCookie('robotUnloked') != null) RobotUnloked = IntToBool(getCookie('robotUnloked'));
    if(getCookie('cubeUnloked') != null) CubeUnloked = IntToBool(getCookie('cubeUnloked'));
    if(getCookie('clankUnloked') != null) ClankUnloked = IntToBool(getCookie('clankUnloked'));
    if(getCookie('sparkUnloked') != null) SparkUnloked = IntToBool(getCookie('sparkUnloked'));
}

function BoolToInt(bool) {
    if (bool) return 1;
    else return 0;
}

function IntToBool(int) {
    if (int == 1) return true;
    else return false;
}

2024-05-08T18:02:53.685388700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 3832
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class Vent {
    constructor( posX, posY) {
        this.width = 165/4;
        this.height = 211/4;
        this.posX = posX;
        this.posY = posY;
        this.ventOpen = false;
        this.going = true;
        this.image = new Image();
        this.image.src = "images/vent/ventClosed.png";
        setTimeout(() => {
            var timerOuter = getRandomInt(2000, 5000);
            exclamations.push(new Exclamation(this.posX, this.posY, timerOuter));
            setTimeout(() => {
                switch (getRandomInt(0, 3)) {
                    case 0:
                        this.image.src = "images/vent/ventBLACK.png";
                        break;
                    case 1:
                        this.image.src = "images/vent/ventWHITE.png";
                        break;
                    case 2:
                        this.image.src = "images/vent/ventRED.png";
                        break;
                }
                this.ventOpen = true;
            }   , timerOuter);
        }   , getRandomInt(30000, 90000));
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }

    update(dt) {
    }

    MouseOverVent(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    OverVent(){
        
    }

    ClickingVent(x, y){
        if(x > this.posX  && x < this.posX + this.width &&
         y > this.posY && y < this.posY + this.height && this.ventOpen){
            this.VentReset();
        }
    };

    VentReset(){
        if(this.ventOpen){
            this.ventOpen = false;
            this.image.src = "images/vent/ventClosed.png";
            setTimeout(() => {
                var timerOuter = getRandomInt(2000, 5000);
                exclamations.push(new Exclamation(this.posX, this.posY, timerOuter));
                setTimeout(() => {
                    switch (getRandomInt(0, 3)) {
                        case 0:
                            this.image.src = "images/vent/ventBLACK.png";
                            break;
                        case 1:
                            this.image.src = "images/vent/ventWHITE.png";
                            break;
                        case 2:
                            this.image.src = "images/vent/ventRED.png";
                            break;
                    }
                    this.ventOpen = true;
                }   , timerOuter);
            }   , getRandomInt(30000, 90000));
        }
    }

};

class Exclamation {
    constructor(posX, posY, timerOuter) {
        this.width = 20;
        this.height = 30;
        this.posX = posX+10;
        this.posY = posY;
        this.going = true;
        this.active = true;
        this.image = new Image();
        this.image.src = "images/interface/Exclamation.png";
        setTimeout(() => {
            clearInterval(interval);
            this.active = false;
        }, timerOuter);

        var interval = setInterval(() => {
            if (this.width < 35 && this.going){
                this.width += 1;
                this.height += 1;

                this.posX -= 0.5;
                this.posY -= 1;
            }
            else if (this.width >25){
                this.going = false;
                this.width -= 1;
                this.height -= 1;

                this.posX += 0.5;
                this.posY += 1;
            }
            else{
                this.going = true;
            }
            
        }, 10);
    }

    

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

2024-05-08T18:02:53.692387500-Client connected from /127.0.0.1:46597
2024-05-08T18:02:53.712155900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 13231
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

var canvas = document.createElement("canvas");
var ctx = canvas.getContext("2d");
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;
canvas.style.position = "absolute";
document.body.appendChild(canvas);

// This is the background, don't get scared
var bgPattern;
var tileReady = false;
var tileImage = new Image();
tileImage.onload = function () {
	tileReady = true;
	bgPattern = ctx.createPattern(tileImage,"repeat");
};
tileImage.src = "./images/bgPattern.png";

// ----------------------------------------------------------------------------------------------------> Game start
var start = function () {
	StartNewGame();
};

var StartNewGame = function(){
	SpawnImpostor();

}

// ----------------------------------------------------------------------------------------------------> Useful Small Functions
ResetClick = function(){
	isClick = false;
}

ResetCombo = function(){
	combo = 0;
}

SpawnImpostor = function(){
	var random = Math.floor(Math.random() * 4);
	switch(random){
		case 0:
			impostor = new ImpostorRed();
			break;
		case 1:
			impostor = new ImpostorBlack();
			break;
		case 2:
			impostor = new ImpostorWhite();
			break;
		case 3:
			impostor = new ImpostorBlack();
			break;
	}
	impostorSpawned = true;
};

function getRandomInt(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive
}

// ----------------------------------------------------------------------------------------------------> Event Listeners
var keysDown = {};

addEventListener("keydown", function(e) {
	keysDown[e.keyCode] = true;
}, false);

addEventListener("keyup", function(e) {
	delete keysDown[e.keyCode];
}, false);

addEventListener("click", function(e) {
	x = e.offsetX;
	y = e.offsetY;
	isClick = true;

	sndBackground.play();

	setTimeout(ResetClick, 100);

	this.clearTimeout(setTimeoutCombo);
	setTimeoutCombo = setTimeout(() => {
		combo = 0;
	}, 2000);
	
	ventAdmin.ClickingVent(x, y);
	ventElectric.ClickingVent(x, y);
	ventMedBay.ClickingVent(x, y);
	ventShields.ClickingVent(x, y);

	ClickingImpostor(x, y);

	AdminButton.ClickingButton( adminCost, "admin");
	ElectricButton.ClickingButton( electricalCost, "electrical");
	MedbayButton.ClickingButton( medBayCost, "medbay");
	ShieldsButton.ClickingButton( shieldsCost, "shields");
	AutoClickerButton.ClickingButton( "autoclicker");

	HowToPlayButton.ClickingButton( "howtoplay");
	EraseButton.ClickingButton( "erase");
	SaveButton.ClickingButton( "save");

	GladiatorShopButton.ClickingButton( "gladiator");
	HatShopButton.ClickingButton( "hat");
	DemonShopButton.ClickingButton( "demon");

	ArcheologistShopButton.ClickingButton( "archeologist");
	SuitShopButton.ClickingButton( "suit");
	RobotShopButton.ClickingButton( "robot");

	CubeShopButton.ClickingButton( "cube");
	ClankShopButton.ClickingButton( "clank");
	SparkShopButton.ClickingButton( "spark");
	
}, false);

addEventListener('mousemove', (e) => {
	mouseX = e.clientX;
	mouseY = e.clientY;
});


//-----------------------------------------------------------------------------------------------------> UPDATE
var update = function (dt) {
	if(impostorSpawned){
		impostor.update(dt);
	}
	UI.update(dt);

	for(var i = 0; i < phalaxArray.length; i++){
		phalaxArray[i].update(dt);
	}

	autoclicker.update(dt);

	//update all crewAdminArray objects
	for(var i = 0; i < crewAdminArray.length; i++){
		
		crewAdminArray[i].update(dt);
	}
	//update all crewElectricArray objects
	for(var i = 0; i < crewElectricArray.length; i++){
		crewElectricArray[i].update(dt);
	}
	//update all crewMedbayArray objects
	for(var i = 0; i < crewMedBayArray.length; i++){
		crewMedBayArray[i].update(dt);
	}
	//update all crewShieldsArray objects
	for(var i = 0; i < crewShieldsArray.length; i++){
		crewShieldsArray[i].update(dt);
	}
	var amonguscount = crewAdminArray.length + crewElectricArray.length + crewMedBayArray.length + crewShieldsArray.length;
	barometer.update(dt, amonguscount);

	ventElectric.update(dt);
	ventMedBay.update(dt);
	ventShields.update(dt);
	ventAdmin.update(dt);

	doubleAutoPwrUp.update(dt);


	//Update collisions
	checkCollisionBetweenCrewArrayAndVent(crewAdminArray, ventAdmin);
	checkCollisionBetweenCrewArrayAndVent(crewElectricArray, ventElectric);
	checkCollisionBetweenCrewArrayAndVent(crewMedBayArray, ventMedBay);
	checkCollisionBetweenCrewArrayAndVent(crewShieldsArray, ventShields);
};



//-----------------------------------------------------------------------------------------------------> RENDER
var render = function () {
	
	
	if (tileReady) {
		ctx.fillStyle = bgPattern;
		ctx.fillRect(0,0,canvas.width,canvas.height);
	}

	//paralax render
	if (phalaxArray.length > 0 && impostorSpawned){
		for (var i = 0; i < phalaxArray.length; i++) {
			phalaxArray[i].render();
		}
	}
	
	if (impostorSpawned) {
		impostor.render();
	}

	renderPlaces();

	AdminButton.render();
	ElectricButton.render();
	MedbayButton.render();
	ShieldsButton.render();

	AutoClickerButton.render();
	HowToPlayButton.render();

	EraseButton.render();
	SaveButton.render();

	GladiatorShopButton.render();
	HatShopButton.render();
	DemonShopButton.render();
	
	ArcheologistShopButton.render();
	SuitShopButton.render();
	RobotShopButton.render();

	CubeShopButton.render();
	ClankShopButton.render();
	SparkShopButton.render();

	barometer.render();

	//render all crewAdminArray objects
	if (crewAdminArray.length > 0)
	for(var i = crewAdminArray.length-1; i >= 0; i--){
		
		crewAdminArray[i].render();
	}

	if (crewElectricArray.length > 0)
	//render all crewElectricArray objects
	for(var i = crewElectricArray.length-1; i >= 0 ; i--){
		crewElectricArray[i].render();
	}

	if (crewMedBayArray.length > 0)
	//render all crewMedbayArray objects
	for(var i = crewMedBayArray.length-1; i >= 0 ; i--){
		crewMedBayArray[i].render();
	}

	if (crewShieldsArray.length > 0)
	//render all crewShieldsArray objects
	for(var i = crewShieldsArray.length-1; i >= 0; i--){
		crewShieldsArray[i].render();
	}

	if (deathAnimation.length > 0)
	//render all deathAnimation objects
	for(var i = deathAnimation.length-1; i >= 0; i--){
		deathAnimation[i].render();
	}

	for(var i = 0; i < exclamations.length; i++){
		exclamations[i].render();
	}

	customSus.render();

	if(UI)	UI.render();

	doubleAutoPwrUp.render();
	
};

//-----------------------------------------------------------------------------------------------------> MAIN
var main = function () {
	var now = Date.now();
	var delta = now - then;

	update(delta / 1000);
	render();

	then = now;

	// Request to do this again ASAP
	requestAnimationFrame(main);
};

// Cross-browser support for requestAnimationFrame
var w = window;
requestAnimationFrame = w.requestAnimationFrame ||
 w.webkitRequestAnimationFrame || w.msRequestAnimationFrame 
 || w.mozRequestAnimationFrame;



 //-----------------------------------------------------------------------------------------------------> Game variables and objects
 var impostorSpawned = false;
 var impostor = new ImpostorRed();
 var deathAnimation = [];
 var score = 0;
 var UI = new HUD();
 var miniCrews = [];
 var customSus = new CustomSus();

 //Paralax
 var phalaxArray = [];
 phalaxArray.push(new paralax("./images/interface/phalax1.png", canvas.width/2 -300, canvas.height/2 -300, 1));
 phalaxArray.push(new paralax("./images/interface/phalax2.png", canvas.width/2 -300, canvas.height/2 -300, -1.5));
 phalaxArray.push(new paralax("./images/interface/phalax3.png", canvas.width/2 -300, canvas.height/2 -300, 1.5));

 //Autoclicker
 var autoclicker = new AutoClkrSimple();

 //Combo
 var setTimeoutCombo = 0;
 var combo = 0;

 //Mouse variables
 var isClick = false;
 var mouseX = 0;
 var mouseY = 0;

//Rooms objects
var spaceFromBorder = 150;
var AdminRoom = new bg_room("Admin", "./images/Admin.png", spaceFromBorder, canvas.height - 180 - 1445/7,  2160/7, 1445/7 );
var ElectricalRoom = new bg_room("Electrical", "./images/Electrics.png", spaceFromBorder, 150,  1523/5, 913/5 );
var MedbayRoom = new bg_room("Medbay", "./images/MedBay.png", canvas.width - spaceFromBorder - 364/1.7, 140,  364/1.5, 318/1.7 );
var Shields = new bg_room("Shields", "./images/Shields.png", canvas.width - spaceFromBorder - 437/2, canvas.height - 180 - 477/2,  437/2, 477/2 );

//Cams on rooms
var AdminCam = new bg_room("AdminCam", "./images/AdminCam.png", spaceFromBorder - 20, canvas.height - 160 - 1676/7,  2340/7, 1676/7 );
var ElectricalCam = new bg_room("ElectricalCam", "./images/ElectricsCam.png", spaceFromBorder-15, 135,  1688/5, 1071/5 );
var MedbayCam = new bg_room("MedbayCam", "./images/MedBayCam.png", canvas.width - spaceFromBorder + 18 - 416/1.7, 140 - 10,  416/1.55, 357/1.75 );
var ShieldsCam = new bg_room("ShieldsCam", "./images/ShieldsCam.png", canvas.width - spaceFromBorder + 10 - 485/2, canvas.height - 180 + 10 - 524/2,  485/2, 524/2 );

//Supports
var AdminSupport = new bg_room("AdminSupport", "./images/interface/CameraSupport.png", 0, AdminRoom.posY + 80,  150, 50 );
var ElectricalSupport = new bg_room("ElectricSupport", "./images/interface/CameraSupport.png", 0, ElectricalRoom.posY + 70, 150, 50 );
var MedbaySupport = new bg_room("MedbaySupport", "./images/interface/CameraSupport.png", MedbayRoom.posX + 220, MedbayRoom.posY + 60,  150, 50 );
var ShieldsSupport = new bg_room("ShieldsSupport", "./images/interface/CameraSupport.png", Shields.posX + 220, Shields.posY + 90,  150, 50 );

//Upgrade buttons
var buttonSize = 100;
var AdminButton = new upgradeButton("ButtonAdmin", "./images/interface/Button.png", AdminRoom.posX, AdminRoom.posY +210, buttonSize, buttonSize );
var ElectricButton = new upgradeButton("ButtonElectric", "./images/interface/Button.png", ElectricalRoom.posX, ElectricalRoom.posY+210, buttonSize, buttonSize );
var MedbayButton = new upgradeButton("ButtonMedbay", "./images/interface/Button.png", MedbayRoom.posX, MedbayRoom.posY+190, buttonSize, buttonSize );
var ShieldsButton = new upgradeButton("ButtonShields", "./images/interface/Button.png", Shields.posX, Shields.posY+250, buttonSize, buttonSize );

//Other buttons
var AutoClickerButton = new simpleButton("ButtonAutoclicker", "./images/icons/Report.png", canvas.width/2 - 30, canvas.height - 200, buttonSize*1.25, buttonSize*1.25);
var HowToPlayButton = new simpleButton("ButtonHowtoPlay", "./images/interface/HowToPlay.png", canvas.width - 155, canvas.height - 50, 150, 40);
var EraseButton = new simpleButton("ButtonErase", "./images/interface/Erase.png", canvas.width - 80, canvas.height - 95, 75, 40);
var SaveButton = new simpleButton("ButtonSave", "./images/interface/Save.png", canvas.width - 235, canvas.height - 50, 75, 40);

//Shop Hat Buttons
var GladiatorShopButton = new simpleButton("ButtonGladiator", "./images/miniCustom/Gladiator.png", 130, 0, 120/1.5, 120/1.5);
var HatShopButton = new simpleButton("ButtonHat", "./images/miniCustom/Hat.png", 230, 0, 120/1.5, 120/1.5);
var DemonShopButton = new simpleButton("ButtonDemon", "./images/miniCustom/Demon.png", 330, 0, 120/1.5, 120/1.5);

//Shop Costume Button
var ArcheologistShopButton = new simpleButton("ButtonArcheologist", "./images/miniCustom/Archeologist.png", 180, 55, 165/3, 211/3);
var SuitShopButton = new simpleButton("ButtonSuit", "./images/miniCustom/Suit.png", 280, 55, 165/3, 211/3);
var RobotShopButton = new simpleButton("ButtonRobot", "./images/miniCustom/Robot.png", 380, 55, 165/3, 211/3);

//Shop Pet Button
var CubeShopButton = new simpleButton("ButtonCube", "./images/miniCustom/Cube.png", 20, 145, 120/4, 141/4);
var ClankShopButton = new simpleButton("ButtonClank", "./images/miniCustom/ClankPet.png", 60, 145, 120/4, 141/4);
var SparkShopButton = new simpleButton("ButtonSpark", "./images/miniCustom/343GuiltySpark.png", 100, 145, 120/4, 141/4);

//Crewmates
var crewAdminArray = [];
var crewElectricArray = [];
var crewMedBayArray = [];
var crewShieldsArray = [];

var AdminSpawn = 0;
var ElectricSpawn = 0;
var MedbaySpawn = 0;
var ShieldsSpawn = 0;

//Vents
var ventElectric = new Vent(20+spaceFromBorder,45 + 150);
var ventMedBay = new Vent(60 + canvas.width - spaceFromBorder - 364/1.7, 110 + 140);
var ventShields = new Vent(80 + canvas.width - spaceFromBorder - 437/2,95 + canvas.height - 180 - 477/2);
var ventAdmin = new Vent(150 + spaceFromBorder, 50+ canvas.height - 180 - 1445/7);

var doubleAutoPwrUp = new DoubleAutoPowerUp(-100,-100, 75, 75, "./images/icons/PowerUPx2.png");

var exclamations = [];

var barometer = new Barometer(canvas.width - spaceFromBorder - 150, 100);

// -----------------------------------------------------------------------------------------------------> Let's play this game!!


// Load the cookies
loadAllCookies();

// Set interval of cookie save
setInterval(saveAllCookies, 60000);

var then = Date.now();
start();
main();


2024-05-08T18:02:53.715156800-Client connected from /127.0.0.1:46598
2024-05-08T18:02:53.715156800-Client connected from /127.0.0.1:46599
2024-05-08T18:02:53.723162600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1120
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class bg_room {
    constructor(name, sprite, posX, posY, width, height) {
        
        //Custom values
        this.name = name;
        this.image = new Image();
        this.image.src = sprite;
        this.posX = posX;
        this.posY = posY;
        this.width = width;
        this.height = height;
        
      }
    
      update(dt){
      }
      
      render(){
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
      }
    
}

function renderPlaces(){
  if(AdminSupport) AdminSupport.render();
	if(ElectricalSupport) ElectricalSupport.render();
	if(MedbaySupport) MedbaySupport.render();
	if(ShieldsSupport) ShieldsSupport.render();
	
	if(AdminRoom) AdminRoom.render();
	if(ElectricalRoom) ElectricalRoom.render();
	if(MedbayRoom) MedbayRoom.render();
	if(Shields) Shields.render();

	if(AdminCam) AdminCam.render();
	if(ElectricalCam) ElectricalCam.render();
	if(MedbayCam) MedbayCam.render();
	if(ShieldsCam) ShieldsCam.render();

	ventElectric.render();
	ventMedBay.render();
	ventShields.render();
	ventAdmin.render();
}

2024-05-08T18:02:53.723162600-Client connected from /127.0.0.1:46600
2024-05-08T18:02:53.728163200-Response: 
HTTP/1.1 500 Internal Server Error
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 21
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

Internal server error

2024-05-08T18:02:53.729168200-Client connected from /127.0.0.1:46601
2024-05-08T18:02:53.733162500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 396
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

const textPrompt = [
    "Blue was an impostor",
    "Red is sus, vote him out",
    "Green was with brown",
    "Yellow was in electrical",
    "Purple called the meeting",
    "Orange vented",
    "Pink vote for Red",
    "Black is \'doing\' tasks",
    "White is sus",
    "Brown was with green",
    "Cyan finished his tasks",
    "Lime have lag",
    "Maroon is crewmate",

];

2024-05-08T18:02:53.733162500-Client connected from /127.0.0.1:46602
2024-05-08T18:02:53.739169100-Client connected from /127.0.0.1:46603
2024-05-08T18:02:53.748164100-Client connected from /127.0.0.1:46604
2024-05-08T18:02:53.750162400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 205
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class ImpostorWhite extends Impostor {
    constructor() {
      var lifePoints = 15;
      var name = 'White Impostor';
      var color = 'white';
      super(color, lifePoints, name,10);
    }
  }

2024-05-08T18:02:53.751161300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 38066
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:53.755161300-Client connected from /127.0.0.1:46605
2024-05-08T18:02:53.757165500-Client connected from /127.0.0.1:46606
2024-05-08T18:02:53.762182700-Client connected from /127.0.0.1:46607
2024-05-08T18:02:53.780158900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 4709
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900



class Impostor {
    constructor(color, lifePoints, name, score) {
      
      this.width = 250;
      this.height = 300;
      this.posX = canvas.width / 2 -this.width / 2;
      this.posY = canvas.height / 2 - this.height / 2;
      this.image = new Image();
      this.forceDamage = 1;

      //Default values
      this.color = 'red';
      this.name = 'Impostor';
      
      this.lifePoints = 5;
      this.score = 1;

      //Custom values
      this.color = color;
      this.name = name;
      this.sprite = "images/" + this.color + "/Body.png";  
      this.lifePoints = lifePoints;
      this.score = score;
      this.image.src = this.sprite;

      
    }
  
    update(dt){
        this.OverImpostor();
    }
    
    render(){
        if (this.isImpostorAlive()) {
            ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        }
    }
    
    isImpostorAlive(){
        return this.lifePoints > 0;
    }
    
    DamageImpostor(){
        this.lifePoints -= Math.floor(clickPower * (this.forceDamage + (combo/500)));
    } 

    MouseOverImpostor(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    OverImpostor(){
        if(this.MouseOverImpostor()){
            if(!isClick){
                //Make the image bigger
                this.width = 350;
                this.height = 400;
                this.posX = canvas.width / 2 -this.width / 2;
                this.posY = canvas.height / 2 - this.height / 2;
            } 
            else {
                //Make the image bit smaller
                this.width = 325;
                this.height = 375;
                this.posX = canvas.width / 2 -this.width / 2;
                this.posY = canvas.height / 2 - this.height / 2;        
            }
        } else {
                //Make the image smaller
                this.width = 250;
                this.height = 300;
                this.posX = canvas.width / 2 -this.width / 2;
                this.posY = canvas.height / 2 - this.height / 2;
            }
        }
  }

  //To damage the impostor
  function ClickingImpostor(x,y){
	if(x > canvas.width / 2 - impostor.width / 2 && x < canvas.width / 2 + impostor.width / 2 &&
	 y > canvas.height / 2 - impostor.height / 2 && y < canvas.height / 2 + impostor.height / 2){
		
		if (impostor.isImpostorAlive()) {
		    combo++;
		    UI.randomAngleCombo = getRandomInt(-25, 25);
		    UI.randomSizeCombo = getRandomInt(45, 65);
            DamageImpostor();
		}
	}
};

  DamageImpostor = function(){
    score += Math.floor(clickPower*(1 + (combo/500)));
	impostor.DamageImpostor();

	//Kill the impostor
	if(!impostor.isImpostorAlive()){
        sndKilled.pause();
        sndKilled.currentTime = 0;
		sndKilled.play();

        UI.specialScore = "+" + impostor.score;
        setTimeout(() => {
            UI.specialScore = "";
        }, 1000);

		score += impostor.score;
		impostorSpawned = false;
		setTimeout(SpawnImpostor, 1000);

        //Spawn death animation
        console.log("Spawn death animation: " + impostor.color);
        deathAnimation.push(new ImpostorBodyDeath(impostor.color));
	}
};

class ImpostorBodyDeath { 
    constructor(color){
        this.width = 350;
        this.height = 400;
        this.posX = canvas.width / 2 -this.width / 2;
        this.posY = canvas.height / 2 - this.height / 2;
        this.image = new Image();
        this.color = color;
       
        this.image.src = "images/" + this.color + "/CuerpoMuerto.png";
                
        
        this.active = true;

        setTimeout(() => {
            this.active = false;
            deathAnimation.push(new ImpostorDeath(impostor.color));
        }, 200);
    }

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

class ImpostorDeath { 
    constructor(color){
        this.width = 350;
        this.height = 400;
        this.posX = canvas.width / 2 -this.width / 2 + 100;
        this.posY = canvas.height / 2 - this.height / 2 + 100;
        this.image = new Image();
        this.color = color;
        
        this.image.src = "images/" + this.color + "/Death.png";
                
        
        this.active = true;

        setTimeout(() => {
            this.active = false;
        }, 200);
    }

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

2024-05-08T18:02:53.789233200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 206
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class ImpostorBlack extends Impostor {
    constructor() {
      var lifePoints = 25;
      var name = 'Black Impostor';
      var color = 'black';
      super(color, lifePoints, name, 15);
    }
  }

2024-05-08T18:02:53.790234800-Response: 
HTTP/1.1 500 Internal Server Error
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 21
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

Internal server error

2024-05-08T18:02:53.791273200-Client connected from /127.0.0.1:46608
2024-05-08T18:02:53.809815700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 2691
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

function setCookie(key, value) {
    var expires = new Date();

    //Expires in 1 year
    expires.setTime(expires.getTime() + (365 * 24 * 60 * 60 * 1000));
    document.cookie = key + '=' + value + ';expires=' + expires.toUTCString();
}

function getCookie(key) {
    var keyValue = document.cookie.match('(^|;) ?' + key + '=([^;]*)(;|$)');

    return keyValue ? keyValue[2] : null;
}

function deleteAllCookies() {
    var cookies = document.cookie.split(";");

    for (var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i];
        var eqPos = cookie.indexOf("=");
        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
        document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
    }
}

function saveAllCookies() {
    setCookie('score', score);
    setCookie('autoclicker', autoclicker.clicksPerSecondBase);
    setCookie('gladiatorUnloked', BoolToInt(GladiatorUnloked));
    setCookie('hatUnloked', BoolToInt(HatUnloked));
    setCookie('demonUnloked',  BoolToInt(DemonUnloked));
    setCookie('archeologistUnloked',  BoolToInt(ArcheologistUnloked));
    setCookie('suitUnloked',  BoolToInt(SuitUnloked));
    setCookie('robotUnloked',  BoolToInt(RobotUnloked));
    setCookie('cubeUnloked',  BoolToInt(CubeUnloked));
    setCookie('clankUnloked',  BoolToInt(ClankUnloked));
    setCookie('sparkUnloked',  BoolToInt(SparkUnloked));
}

function loadAllCookies() {
    if (getCookie('score') != null) score = Number(getCookie('score'));
    if(getCookie('autoclicker') != null) autoclicker.clicksPerSecondBase = Number(getCookie('autoclicker'));
    if(getCookie('gladiatorUnloked') != null) GladiatorUnloked = IntToBool(getCookie('gladiatorUnloked'));
    if(getCookie('hatUnloked') != null) HatUnloked = IntToBool(getCookie('hatUnloked'));
    if(getCookie('demonUnloked') != null) DemonUnloked = IntToBool(getCookie('demonUnloked'));
    if(getCookie('archeologistUnloked') != null) ArcheologistUnloked = IntToBool(getCookie('archeologistUnloked'));
    if(getCookie('suitUnloked') != null) SuitUnloked = IntToBool(getCookie('suitUnloked'));
    if(getCookie('robotUnloked') != null) RobotUnloked = IntToBool(getCookie('robotUnloked'));
    if(getCookie('cubeUnloked') != null) CubeUnloked = IntToBool(getCookie('cubeUnloked'));
    if(getCookie('clankUnloked') != null) ClankUnloked = IntToBool(getCookie('clankUnloked'));
    if(getCookie('sparkUnloked') != null) SparkUnloked = IntToBool(getCookie('sparkUnloked'));
}

function BoolToInt(bool) {
    if (bool) return 1;
    else return 0;
}

function IntToBool(int) {
    if (int == 1) return true;
    else return false;
}

2024-05-08T18:02:53.811811-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 200
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

class ImpostorRed extends Impostor {
    constructor() {
      var lifePoints = 40;
      var name = 'Red Impostor';
      var color = 'red';
      super(color, lifePoints, name, 25);
    }
  }

2024-05-08T18:02:53.823817-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1114
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

function collision(first, second) {
    return !(first.posX > second.posX + second.width ||
        first.posX + first.width < second.posX ||
        first.posY > second.posY + second.height ||
        first.posY + first.height < second.posY);
}

class ventCollision {
    constructor(posX, posY, width, height) {
        this.posX = posX + 40;
        this.posY = posY;
        this.width = width - 80;
        this.height = height;
    }
}

function checkCollisionBetweenCrewArrayAndVent(crewArray, vent) {
    var arraylength = 0;
    var ventColl = new ventCollision(vent.posX, vent.posY, vent.width, vent.height);
    arraylength = crewArray.length;
    if (arraylength > 0) {
        for (let i = 0; i < arraylength; i++) {
            if (collision(crewArray[i], ventColl) && vent.ventOpen) {
                deathAnimation.push(new CrewBodyDeath(crewArray[i].color, crewArray[i].posX, crewArray[i].posY));
                crewArray.splice(i, 1); 
                setTimeout(function(){ vent.VentReset(); }, 1500);
                break;
            }
        }
    }
    
}


2024-05-08T18:02:53.873807200-Client connected from /127.0.0.1:46609
2024-05-08T18:02:53.874807900-Client connected from /127.0.0.1:46610
2024-05-08T18:02:53.875807700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 13231
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

var canvas = document.createElement("canvas");
var ctx = canvas.getContext("2d");
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;
canvas.style.position = "absolute";
document.body.appendChild(canvas);

// This is the background, don't get scared
var bgPattern;
var tileReady = false;
var tileImage = new Image();
tileImage.onload = function () {
	tileReady = true;
	bgPattern = ctx.createPattern(tileImage,"repeat");
};
tileImage.src = "./images/bgPattern.png";

// ----------------------------------------------------------------------------------------------------> Game start
var start = function () {
	StartNewGame();
};

var StartNewGame = function(){
	SpawnImpostor();

}

// ----------------------------------------------------------------------------------------------------> Useful Small Functions
ResetClick = function(){
	isClick = false;
}

ResetCombo = function(){
	combo = 0;
}

SpawnImpostor = function(){
	var random = Math.floor(Math.random() * 4);
	switch(random){
		case 0:
			impostor = new ImpostorRed();
			break;
		case 1:
			impostor = new ImpostorBlack();
			break;
		case 2:
			impostor = new ImpostorWhite();
			break;
		case 3:
			impostor = new ImpostorBlack();
			break;
	}
	impostorSpawned = true;
};

function getRandomInt(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive
}

// ----------------------------------------------------------------------------------------------------> Event Listeners
var keysDown = {};

addEventListener("keydown", function(e) {
	keysDown[e.keyCode] = true;
}, false);

addEventListener("keyup", function(e) {
	delete keysDown[e.keyCode];
}, false);

addEventListener("click", function(e) {
	x = e.offsetX;
	y = e.offsetY;
	isClick = true;

	sndBackground.play();

	setTimeout(ResetClick, 100);

	this.clearTimeout(setTimeoutCombo);
	setTimeoutCombo = setTimeout(() => {
		combo = 0;
	}, 2000);
	
	ventAdmin.ClickingVent(x, y);
	ventElectric.ClickingVent(x, y);
	ventMedBay.ClickingVent(x, y);
	ventShields.ClickingVent(x, y);

	ClickingImpostor(x, y);

	AdminButton.ClickingButton( adminCost, "admin");
	ElectricButton.ClickingButton( electricalCost, "electrical");
	MedbayButton.ClickingButton( medBayCost, "medbay");
	ShieldsButton.ClickingButton( shieldsCost, "shields");
	AutoClickerButton.ClickingButton( "autoclicker");

	HowToPlayButton.ClickingButton( "howtoplay");
	EraseButton.ClickingButton( "erase");
	SaveButton.ClickingButton( "save");

	GladiatorShopButton.ClickingButton( "gladiator");
	HatShopButton.ClickingButton( "hat");
	DemonShopButton.ClickingButton( "demon");

	ArcheologistShopButton.ClickingButton( "archeologist");
	SuitShopButton.ClickingButton( "suit");
	RobotShopButton.ClickingButton( "robot");

	CubeShopButton.ClickingButton( "cube");
	ClankShopButton.ClickingButton( "clank");
	SparkShopButton.ClickingButton( "spark");
	
}, false);

addEventListener('mousemove', (e) => {
	mouseX = e.clientX;
	mouseY = e.clientY;
});


//-----------------------------------------------------------------------------------------------------> UPDATE
var update = function (dt) {
	if(impostorSpawned){
		impostor.update(dt);
	}
	UI.update(dt);

	for(var i = 0; i < phalaxArray.length; i++){
		phalaxArray[i].update(dt);
	}

	autoclicker.update(dt);

	//update all crewAdminArray objects
	for(var i = 0; i < crewAdminArray.length; i++){
		
		crewAdminArray[i].update(dt);
	}
	//update all crewElectricArray objects
	for(var i = 0; i < crewElectricArray.length; i++){
		crewElectricArray[i].update(dt);
	}
	//update all crewMedbayArray objects
	for(var i = 0; i < crewMedBayArray.length; i++){
		crewMedBayArray[i].update(dt);
	}
	//update all crewShieldsArray objects
	for(var i = 0; i < crewShieldsArray.length; i++){
		crewShieldsArray[i].update(dt);
	}
	var amonguscount = crewAdminArray.length + crewElectricArray.length + crewMedBayArray.length + crewShieldsArray.length;
	barometer.update(dt, amonguscount);

	ventElectric.update(dt);
	ventMedBay.update(dt);
	ventShields.update(dt);
	ventAdmin.update(dt);

	doubleAutoPwrUp.update(dt);


	//Update collisions
	checkCollisionBetweenCrewArrayAndVent(crewAdminArray, ventAdmin);
	checkCollisionBetweenCrewArrayAndVent(crewElectricArray, ventElectric);
	checkCollisionBetweenCrewArrayAndVent(crewMedBayArray, ventMedBay);
	checkCollisionBetweenCrewArrayAndVent(crewShieldsArray, ventShields);
};



//-----------------------------------------------------------------------------------------------------> RENDER
var render = function () {
	
	
	if (tileReady) {
		ctx.fillStyle = bgPattern;
		ctx.fillRect(0,0,canvas.width,canvas.height);
	}

	//paralax render
	if (phalaxArray.length > 0 && impostorSpawned){
		for (var i = 0; i < phalaxArray.length; i++) {
			phalaxArray[i].render();
		}
	}
	
	if (impostorSpawned) {
		impostor.render();
	}

	renderPlaces();

	AdminButton.render();
	ElectricButton.render();
	MedbayButton.render();
	ShieldsButton.render();

	AutoClickerButton.render();
	HowToPlayButton.render();

	EraseButton.render();
	SaveButton.render();

	GladiatorShopButton.render();
	HatShopButton.render();
	DemonShopButton.render();
	
	ArcheologistShopButton.render();
	SuitShopButton.render();
	RobotShopButton.render();

	CubeShopButton.render();
	ClankShopButton.render();
	SparkShopButton.render();

	barometer.render();

	//render all crewAdminArray objects
	if (crewAdminArray.length > 0)
	for(var i = crewAdminArray.length-1; i >= 0; i--){
		
		crewAdminArray[i].render();
	}

	if (crewElectricArray.length > 0)
	//render all crewElectricArray objects
	for(var i = crewElectricArray.length-1; i >= 0 ; i--){
		crewElectricArray[i].render();
	}

	if (crewMedBayArray.length > 0)
	//render all crewMedbayArray objects
	for(var i = crewMedBayArray.length-1; i >= 0 ; i--){
		crewMedBayArray[i].render();
	}

	if (crewShieldsArray.length > 0)
	//render all crewShieldsArray objects
	for(var i = crewShieldsArray.length-1; i >= 0; i--){
		crewShieldsArray[i].render();
	}

	if (deathAnimation.length > 0)
	//render all deathAnimation objects
	for(var i = deathAnimation.length-1; i >= 0; i--){
		deathAnimation[i].render();
	}

	for(var i = 0; i < exclamations.length; i++){
		exclamations[i].render();
	}

	customSus.render();

	if(UI)	UI.render();

	doubleAutoPwrUp.render();
	
};

//-----------------------------------------------------------------------------------------------------> MAIN
var main = function () {
	var now = Date.now();
	var delta = now - then;

	update(delta / 1000);
	render();

	then = now;

	// Request to do this again ASAP
	requestAnimationFrame(main);
};

// Cross-browser support for requestAnimationFrame
var w = window;
requestAnimationFrame = w.requestAnimationFrame ||
 w.webkitRequestAnimationFrame || w.msRequestAnimationFrame 
 || w.mozRequestAnimationFrame;



 //-----------------------------------------------------------------------------------------------------> Game variables and objects
 var impostorSpawned = false;
 var impostor = new ImpostorRed();
 var deathAnimation = [];
 var score = 0;
 var UI = new HUD();
 var miniCrews = [];
 var customSus = new CustomSus();

 //Paralax
 var phalaxArray = [];
 phalaxArray.push(new paralax("./images/interface/phalax1.png", canvas.width/2 -300, canvas.height/2 -300, 1));
 phalaxArray.push(new paralax("./images/interface/phalax2.png", canvas.width/2 -300, canvas.height/2 -300, -1.5));
 phalaxArray.push(new paralax("./images/interface/phalax3.png", canvas.width/2 -300, canvas.height/2 -300, 1.5));

 //Autoclicker
 var autoclicker = new AutoClkrSimple();

 //Combo
 var setTimeoutCombo = 0;
 var combo = 0;

 //Mouse variables
 var isClick = false;
 var mouseX = 0;
 var mouseY = 0;

//Rooms objects
var spaceFromBorder = 150;
var AdminRoom = new bg_room("Admin", "./images/Admin.png", spaceFromBorder, canvas.height - 180 - 1445/7,  2160/7, 1445/7 );
var ElectricalRoom = new bg_room("Electrical", "./images/Electrics.png", spaceFromBorder, 150,  1523/5, 913/5 );
var MedbayRoom = new bg_room("Medbay", "./images/MedBay.png", canvas.width - spaceFromBorder - 364/1.7, 140,  364/1.5, 318/1.7 );
var Shields = new bg_room("Shields", "./images/Shields.png", canvas.width - spaceFromBorder - 437/2, canvas.height - 180 - 477/2,  437/2, 477/2 );

//Cams on rooms
var AdminCam = new bg_room("AdminCam", "./images/AdminCam.png", spaceFromBorder - 20, canvas.height - 160 - 1676/7,  2340/7, 1676/7 );
var ElectricalCam = new bg_room("ElectricalCam", "./images/ElectricsCam.png", spaceFromBorder-15, 135,  1688/5, 1071/5 );
var MedbayCam = new bg_room("MedbayCam", "./images/MedBayCam.png", canvas.width - spaceFromBorder + 18 - 416/1.7, 140 - 10,  416/1.55, 357/1.75 );
var ShieldsCam = new bg_room("ShieldsCam", "./images/ShieldsCam.png", canvas.width - spaceFromBorder + 10 - 485/2, canvas.height - 180 + 10 - 524/2,  485/2, 524/2 );

//Supports
var AdminSupport = new bg_room("AdminSupport", "./images/interface/CameraSupport.png", 0, AdminRoom.posY + 80,  150, 50 );
var ElectricalSupport = new bg_room("ElectricSupport", "./images/interface/CameraSupport.png", 0, ElectricalRoom.posY + 70, 150, 50 );
var MedbaySupport = new bg_room("MedbaySupport", "./images/interface/CameraSupport.png", MedbayRoom.posX + 220, MedbayRoom.posY + 60,  150, 50 );
var ShieldsSupport = new bg_room("ShieldsSupport", "./images/interface/CameraSupport.png", Shields.posX + 220, Shields.posY + 90,  150, 50 );

//Upgrade buttons
var buttonSize = 100;
var AdminButton = new upgradeButton("ButtonAdmin", "./images/interface/Button.png", AdminRoom.posX, AdminRoom.posY +210, buttonSize, buttonSize );
var ElectricButton = new upgradeButton("ButtonElectric", "./images/interface/Button.png", ElectricalRoom.posX, ElectricalRoom.posY+210, buttonSize, buttonSize );
var MedbayButton = new upgradeButton("ButtonMedbay", "./images/interface/Button.png", MedbayRoom.posX, MedbayRoom.posY+190, buttonSize, buttonSize );
var ShieldsButton = new upgradeButton("ButtonShields", "./images/interface/Button.png", Shields.posX, Shields.posY+250, buttonSize, buttonSize );

//Other buttons
var AutoClickerButton = new simpleButton("ButtonAutoclicker", "./images/icons/Report.png", canvas.width/2 - 30, canvas.height - 200, buttonSize*1.25, buttonSize*1.25);
var HowToPlayButton = new simpleButton("ButtonHowtoPlay", "./images/interface/HowToPlay.png", canvas.width - 155, canvas.height - 50, 150, 40);
var EraseButton = new simpleButton("ButtonErase", "./images/interface/Erase.png", canvas.width - 80, canvas.height - 95, 75, 40);
var SaveButton = new simpleButton("ButtonSave", "./images/interface/Save.png", canvas.width - 235, canvas.height - 50, 75, 40);

//Shop Hat Buttons
var GladiatorShopButton = new simpleButton("ButtonGladiator", "./images/miniCustom/Gladiator.png", 130, 0, 120/1.5, 120/1.5);
var HatShopButton = new simpleButton("ButtonHat", "./images/miniCustom/Hat.png", 230, 0, 120/1.5, 120/1.5);
var DemonShopButton = new simpleButton("ButtonDemon", "./images/miniCustom/Demon.png", 330, 0, 120/1.5, 120/1.5);

//Shop Costume Button
var ArcheologistShopButton = new simpleButton("ButtonArcheologist", "./images/miniCustom/Archeologist.png", 180, 55, 165/3, 211/3);
var SuitShopButton = new simpleButton("ButtonSuit", "./images/miniCustom/Suit.png", 280, 55, 165/3, 211/3);
var RobotShopButton = new simpleButton("ButtonRobot", "./images/miniCustom/Robot.png", 380, 55, 165/3, 211/3);

//Shop Pet Button
var CubeShopButton = new simpleButton("ButtonCube", "./images/miniCustom/Cube.png", 20, 145, 120/4, 141/4);
var ClankShopButton = new simpleButton("ButtonClank", "./images/miniCustom/ClankPet.png", 60, 145, 120/4, 141/4);
var SparkShopButton = new simpleButton("ButtonSpark", "./images/miniCustom/343GuiltySpark.png", 100, 145, 120/4, 141/4);

//Crewmates
var crewAdminArray = [];
var crewElectricArray = [];
var crewMedBayArray = [];
var crewShieldsArray = [];

var AdminSpawn = 0;
var ElectricSpawn = 0;
var MedbaySpawn = 0;
var ShieldsSpawn = 0;

//Vents
var ventElectric = new Vent(20+spaceFromBorder,45 + 150);
var ventMedBay = new Vent(60 + canvas.width - spaceFromBorder - 364/1.7, 110 + 140);
var ventShields = new Vent(80 + canvas.width - spaceFromBorder - 437/2,95 + canvas.height - 180 - 477/2);
var ventAdmin = new Vent(150 + spaceFromBorder, 50+ canvas.height - 180 - 1445/7);

var doubleAutoPwrUp = new DoubleAutoPowerUp(-100,-100, 75, 75, "./images/icons/PowerUPx2.png");

var exclamations = [];

var barometer = new Barometer(canvas.width - spaceFromBorder - 150, 100);

// -----------------------------------------------------------------------------------------------------> Let's play this game!!


// Load the cookies
loadAllCookies();

// Set interval of cookie save
setInterval(saveAllCookies, 60000);

var then = Date.now();
start();
main();


2024-05-08T18:02:53.875807700-Client connected from /127.0.0.1:46611
2024-05-08T18:02:53.877821-Client connected from /127.0.0.1:46612
2024-05-08T18:02:53.878814-Client connected from /127.0.0.1:46613
2024-05-08T18:02:53.888890200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 5537
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:53.920440800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 5261
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:53.923391500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 17254
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:53.924381800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 106695
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:53.925382700-Client connected from /127.0.0.1:46614
2024-05-08T18:02:53.926382100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 46574
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:53.926382100-Client connected from /127.0.0.1:46615
2024-05-08T18:02:53.935381300-Client connected from /127.0.0.1:46616
2024-05-08T18:02:53.939416600-Client connected from /127.0.0.1:46617
2024-05-08T18:02:53.940387600-Client connected from /127.0.0.1:46618
2024-05-08T18:02:53.946382300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 182092
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:53.962381800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 49742
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:53.962381800-Client connected from /127.0.0.1:46619
2024-05-08T18:02:53.966388700-Client connected from /127.0.0.1:46620
2024-05-08T18:02:53.967385800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 1333773
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:53.992402700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 951415
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:53.994400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 173774
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:53.998952400-Client connected from /127.0.0.1:46621
2024-05-08T18:02:53.998952400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:53 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 37228
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.003958400-Client connected from /127.0.0.1:46622
2024-05-08T18:02:54.006950500-Response: 
HTTP/1.1 500 Internal Server Error
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 21
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

Internal server error

2024-05-08T18:02:54.011950400-Client connected from /127.0.0.1:46623
2024-05-08T18:02:54.012952300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 28010
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.014949400-Response: 
HTTP/1.1 500 Internal Server Error
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 21
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900

Internal server error

2024-05-08T18:02:54.014949400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 13135
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.018951200-Client connected from /127.0.0.1:46624
2024-05-08T18:02:54.019957400-Client connected from /127.0.0.1:46625
2024-05-08T18:02:54.029948100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 13706
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.029948100-Client connected from /127.0.0.1:46626
2024-05-08T18:02:54.029948100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 24200
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.030948400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 6254
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.030948400-Client connected from /127.0.0.1:46627
2024-05-08T18:02:54.034950900-Client connected from /127.0.0.1:46628
2024-05-08T18:02:54.035952400-Client connected from /127.0.0.1:46629
2024-05-08T18:02:54.040960-Client connected from /127.0.0.1:46630
2024-05-08T18:02:54.040960-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 16576
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.046950500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3780
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.050952100-Client connected from /127.0.0.1:46631
2024-05-08T18:02:54.064950500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 4534
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.068955500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 4386
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.068955500-Client connected from /127.0.0.1:46632
2024-05-08T18:02:54.069977-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7742
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.071002200-Client connected from /127.0.0.1:46633
2024-05-08T18:02:54.076960400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 4544
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.076960400-Client connected from /127.0.0.1:46634
2024-05-08T18:02:54.080948400-Client connected from /127.0.0.1:46635
2024-05-08T18:02:54.081949-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 4257
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.081949-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 12652
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.086985500-Client connected from /127.0.0.1:46636
2024-05-08T18:02:54.093958-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 9161
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.093958-Client connected from /127.0.0.1:46637
2024-05-08T18:02:54.096958900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10679
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.096958900-Client connected from /127.0.0.1:46638
2024-05-08T18:02:54.101033500-Client connected from /127.0.0.1:46639
2024-05-08T18:02:54.102038700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7975
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.106035400-Client connected from /127.0.0.1:46640
2024-05-08T18:02:54.110035200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7544
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.114030900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 9064
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.114030900-Client connected from /127.0.0.1:46641
2024-05-08T18:02:54.115032800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 18887
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.116034200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 16157
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.120034500-Client connected from /127.0.0.1:46642
2024-05-08T18:02:54.121030300-Client connected from /127.0.0.1:46643
2024-05-08T18:02:54.127029-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 24709
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.127029-Client connected from /127.0.0.1:46644
2024-05-08T18:02:54.128032100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 278293
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.128032100-Client connected from /127.0.0.1:46645
2024-05-08T18:02:54.129033300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 17131
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.132030600-Client connected from /127.0.0.1:46646
2024-05-08T18:02:54.135035200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.139032-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.140035300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.257116700-Client connected from /127.0.0.1:46647
2024-05-08T18:02:54.258115300-Client connected from /127.0.0.1:46648
2024-05-08T18:02:54.259117300-Client connected from /127.0.0.1:46649
2024-05-08T18:02:54.271116400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.272118900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.273118100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.415778900-Client connected from /127.0.0.1:46650
2024-05-08T18:02:54.416781200-Client connected from /127.0.0.1:46651
2024-05-08T18:02:54.416781200-Client connected from /127.0.0.1:46652
2024-05-08T18:02:54.440824100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.442796900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.448790500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.451795-Client connected from /127.0.0.1:46653
2024-05-08T18:02:54.456801500-Client connected from /127.0.0.1:46654
2024-05-08T18:02:54.459785900-Client connected from /127.0.0.1:46655
2024-05-08T18:02:54.479793500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.489911700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.497405-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.533418-Client connected from /127.0.0.1:46656
2024-05-08T18:02:54.535428600-Client connected from /127.0.0.1:46657
2024-05-08T18:02:54.536420800-Client connected from /127.0.0.1:46658
2024-05-08T18:02:54.557416100-Client connected from /127.0.0.1:46659
2024-05-08T18:02:54.560458300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.563452-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.566426700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.566426700-Client connected from /127.0.0.1:46660
2024-05-08T18:02:54.578436-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.599641300-Client connected from /127.0.0.1:46661
2024-05-08T18:02:54.600636800-Client connected from /127.0.0.1:46662
2024-05-08T18:02:54.601642900-Client connected from /127.0.0.1:46663
2024-05-08T18:02:54.624649200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.626715800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.629715100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.650633700-Client connected from /127.0.0.1:46664
2024-05-08T18:02:54.651638900-Client connected from /127.0.0.1:46665
2024-05-08T18:02:54.653673300-Client connected from /127.0.0.1:46666
2024-05-08T18:02:54.670663-Client connected from /127.0.0.1:46667
2024-05-08T18:02:54.673660500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.676643400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.676643400-Client connected from /127.0.0.1:46668
2024-05-08T18:02:54.678645900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.678645900-Client connected from /127.0.0.1:46669
2024-05-08T18:02:54.700270500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.701267700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.705274600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.723264400-Client connected from /127.0.0.1:46670
2024-05-08T18:02:54.728314500-Client connected from /127.0.0.1:46671
2024-05-08T18:02:54.746297600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.750270900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.756282100-Client connected from /127.0.0.1:46672
2024-05-08T18:02:54.760277400-Client connected from /127.0.0.1:46673
2024-05-08T18:02:54.765298700-Client connected from /127.0.0.1:46674
2024-05-08T18:02:54.781289600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.816873100-Client connected from /127.0.0.1:46675
2024-05-08T18:02:54.817866100-Client connected from /127.0.0.1:46676
2024-05-08T18:02:54.818877900-Client connected from /127.0.0.1:46677
2024-05-08T18:02:54.831864700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.836878700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.841906900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.849863800-Client connected from /127.0.0.1:46678
2024-05-08T18:02:54.850864500-Client connected from /127.0.0.1:46679
2024-05-08T18:02:54.851878300-Client connected from /127.0.0.1:46680
2024-05-08T18:02:54.865869900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.873880200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.874881200-Client connected from /127.0.0.1:46682
2024-05-08T18:02:54.880935500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.881920200-Client connected from /127.0.0.1:46683
2024-05-08T18:02:54.894917200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.932457800-Client connected from /127.0.0.1:46684
2024-05-08T18:02:54.933456700-Client connected from /127.0.0.1:46685
2024-05-08T18:02:54.933456700-Client connected from /127.0.0.1:46686
2024-05-08T18:02:54.951457500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.965472100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.966522900-Client connected from /127.0.0.1:46687
2024-05-08T18:02:54.969463900-Client connected from /127.0.0.1:46688
2024-05-08T18:02:54.969463900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:54.973509800-Client connected from /127.0.0.1:46689
2024-05-08T18:02:54.994559800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.003139500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.034189600-Client connected from /127.0.0.1:46690
2024-05-08T18:02:55.035198400-Client connected from /127.0.0.1:46691
2024-05-08T18:02:55.037222700-Client connected from /127.0.0.1:46692
2024-05-08T18:02:55.060216100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.065220400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.066198200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.082190-Client connected from /127.0.0.1:46693
2024-05-08T18:02:55.083190500-Client connected from /127.0.0.1:46694
2024-05-08T18:02:55.083190500-Client connected from /127.0.0.1:46695
2024-05-08T18:02:55.107768500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.114783100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.116760-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.233282400-Client connected from /127.0.0.1:46696
2024-05-08T18:02:55.234274900-Client connected from /127.0.0.1:46697
2024-05-08T18:02:55.234274900-Client connected from /127.0.0.1:46698
2024-05-08T18:02:55.256302100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.258318900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.264278700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.402393800-Client connected from /127.0.0.1:46699
2024-05-08T18:02:55.405418700-Client connected from /127.0.0.1:46700
2024-05-08T18:02:55.410436100-Client connected from /127.0.0.1:46701
2024-05-08T18:02:55.421407100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.430394600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:55.432387300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:55 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:56.347242300-Client connected from /127.0.0.1:46702
2024-05-08T18:02:56.348245600-Client connected from /127.0.0.1:46703
2024-05-08T18:02:56.349248700-Client connected from /127.0.0.1:46704
2024-05-08T18:02:56.359246600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:56 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:56.359246600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:56 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:02:56.360246100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:02:56 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie8=ma373xrz; Max-Age=33; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie9=ma374xrz; Max-Age=26; HttpOnly; Date=2024-05-08T18:02:39.812957900
Set-Cookie: cookie10=ma375xrz; Max-Age=44; HttpOnly; Date=2024-05-08T18:02:39.812957900


2024-05-08T18:03:29.164658100-Client connected from /127.0.0.1:46706
2024-05-08T18:03:29.179772-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:29 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 12509
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:29.379166200-Client connected from /127.0.0.1:46707
2024-05-08T18:03:29.392228700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:29 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 19029
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:30.170346100-Client connected from /127.0.0.1:46708
2024-05-08T18:03:30.170346100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:30 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10810
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:33.256708100-Client connected from /127.0.0.1:46709
2024-05-08T18:03:33.256708100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:33 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 12918
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:33.303905800-Client connected from /127.0.0.1:46710
2024-05-08T18:03:33.307255700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:33 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 11133
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:33.498649400-Client connected from /127.0.0.1:46711
2024-05-08T18:03:33.507197600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:33 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 17214
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:37.179057900-Client connected from /127.0.0.1:46712
2024-05-08T18:03:37.184573800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:37 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 23940
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:39.215821700-Client connected from /127.0.0.1:46713
2024-05-08T18:03:39.225837200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:39 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 11896
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:39.428555600-Client connected from /127.0.0.1:46714
2024-05-08T18:03:39.428555600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:39 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 17954
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:44.693561500-Client connected from /127.0.0.1:46715
2024-05-08T18:03:44.699529600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:44 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 21842
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:44.847986900-Client connected from /127.0.0.1:46716
2024-05-08T18:03:44.863645100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:44 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3158
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.020721600-Client connected from /127.0.0.1:46717
2024-05-08T18:03:45.027040800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3163
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.058323500-Client connected from /127.0.0.1:46718
2024-05-08T18:03:45.073937400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3286
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.168306200-Client connected from /127.0.0.1:46719
2024-05-08T18:03:45.188808500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3210
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.231571400-Client connected from /127.0.0.1:46720
2024-05-08T18:03:45.247248800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3292
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.278479500-Client connected from /127.0.0.1:46721
2024-05-08T18:03:45.294569800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3322
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.349596200-Client connected from /127.0.0.1:46722
2024-05-08T18:03:45.356189700-Client connected from /127.0.0.1:46723
2024-05-08T18:03:45.371710800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3197
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.371710800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3214
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.403418900-Client connected from /127.0.0.1:46724
2024-05-08T18:03:45.419158400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3016
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.450417100-Client connected from /127.0.0.1:46725
2024-05-08T18:03:45.466047700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3330
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.497698700-Client connected from /127.0.0.1:46726
2024-05-08T18:03:45.513421500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3078
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.560294700-Client connected from /127.0.0.1:46727
2024-05-08T18:03:45.560294700-Client connected from /127.0.0.1:46728
2024-05-08T18:03:45.575930500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3336
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.575930500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3017
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.623311600-Client connected from /127.0.0.1:46729
2024-05-08T18:03:45.638932400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3217
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.670214-Client connected from /127.0.0.1:46730
2024-05-08T18:03:45.690329800-Client connected from /127.0.0.1:46731
2024-05-08T18:03:45.690329800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3247
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.717506200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3083
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.748765900-Client connected from /127.0.0.1:46732
2024-05-08T18:03:45.764388800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3241
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.780037200-Client connected from /127.0.0.1:46733
2024-05-08T18:03:45.780037200-Client connected from /127.0.0.1:46734
2024-05-08T18:03:45.796213800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3357
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.811896-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3221
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.827512900-Client connected from /127.0.0.1:46735
2024-05-08T18:03:45.843151-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3248
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.890545700-Client connected from /127.0.0.1:46736
2024-05-08T18:03:45.890545700-Client connected from /127.0.0.1:46737
2024-05-08T18:03:45.906084-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3048
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.906084-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3245
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:45.937355600-Client connected from /127.0.0.1:46738
2024-05-08T18:03:45.952979-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:45 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3161
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.000374-Client connected from /127.0.0.1:46739
2024-05-08T18:03:46.000374-Client connected from /127.0.0.1:46740
2024-05-08T18:03:46.016053800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3099
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.031724500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3251
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.047275800-Client connected from /127.0.0.1:46741
2024-05-08T18:03:46.062905500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 2974
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.125986600-Client connected from /127.0.0.1:46742
2024-05-08T18:03:46.125986600-Client connected from /127.0.0.1:46743
2024-05-08T18:03:46.141634500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3310
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.141634500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3159
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.157212900-Client connected from /127.0.0.1:46744
2024-05-08T18:03:46.172831700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 2965
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.236171600-Client connected from /127.0.0.1:46745
2024-05-08T18:03:46.236171600-Client connected from /127.0.0.1:46746
2024-05-08T18:03:46.251832500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 2974
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.251832500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3263
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.330498200-Client connected from /127.0.0.1:46747
2024-05-08T18:03:46.330498200-Client connected from /127.0.0.1:46748
2024-05-08T18:03:46.346024800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3274
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.346024800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 2964
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.455860100-Client connected from /127.0.0.1:46749
2024-05-08T18:03:46.455860100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3204
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.550107700-Client connected from /127.0.0.1:46750
2024-05-08T18:03:46.565748500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3044
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:46.682621200-Client connected from /127.0.0.1:46751
2024-05-08T18:03:46.687603800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:46 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3024
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:48.706074100-Client connected from /127.0.0.1:46752
2024-05-08T18:03:48.715150900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3141
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:48.809414600-Client connected from /127.0.0.1:46753
2024-05-08T18:03:48.809414600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3245
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:48.887550100-Client connected from /127.0.0.1:46754
2024-05-08T18:03:48.903606300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3146
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:48.919295900-Client connected from /127.0.0.1:46755
2024-05-08T18:03:48.934865-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3206
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.012084-Client connected from /127.0.0.1:46756
2024-05-08T18:03:49.027735400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3250
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.043427-Client connected from /127.0.0.1:46757
2024-05-08T18:03:49.058980300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3329
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.106312500-Client connected from /127.0.0.1:46758
2024-05-08T18:03:49.121978500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3210
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.137599400-Client connected from /127.0.0.1:46759
2024-05-08T18:03:49.153259600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3036
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.184517400-Client connected from /127.0.0.1:46760
2024-05-08T18:03:49.200110-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3143
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.231395500-Client connected from /127.0.0.1:46761
2024-05-08T18:03:49.231395500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3338
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.247057100-Client connected from /127.0.0.1:46762
2024-05-08T18:03:49.262666800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3095
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.300470400-Client connected from /127.0.0.1:46763
2024-05-08T18:03:49.310519500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3223
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.353476600-Client connected from /127.0.0.1:46764
2024-05-08T18:03:49.355622700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3037
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.386878300-Client connected from /127.0.0.1:46765
2024-05-08T18:03:49.402910200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3142
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.434208-Client connected from /127.0.0.1:46766
2024-05-08T18:03:49.449803500-Client connected from /127.0.0.1:46767
2024-05-08T18:03:49.465477700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3240
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.481093700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3100
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.528433-Client connected from /127.0.0.1:46768
2024-05-08T18:03:49.528433-Client connected from /127.0.0.1:46769
2024-05-08T18:03:49.544050500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3202
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.544050500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3332
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.559705600-Client connected from /127.0.0.1:46770
2024-05-08T18:03:49.575351-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3146
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.622680200-Client connected from /127.0.0.1:46771
2024-05-08T18:03:49.622680200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3245
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.622680200-Client connected from /127.0.0.1:46772
2024-05-08T18:03:49.638301800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3052
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.653936600-Client connected from /127.0.0.1:46773
2024-05-08T18:03:49.679182400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3206
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.701080500-Client connected from /127.0.0.1:46774
2024-05-08T18:03:49.715117-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3153
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.730808-Client connected from /127.0.0.1:46775
2024-05-08T18:03:49.746404300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3101
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.762042500-Client connected from /127.0.0.1:46776
2024-05-08T18:03:49.777657800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3248
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.809367800-Client connected from /127.0.0.1:46777
2024-05-08T18:03:49.825054-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3030
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.871918200-Client connected from /127.0.0.1:46779
2024-05-08T18:03:49.901649200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3153
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.918844300-Client connected from /127.0.0.1:46780
2024-05-08T18:03:49.934538300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3014
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:49.950118400-Client connected from /127.0.0.1:46781
2024-05-08T18:03:49.981380800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3213
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:50.003229300-Client connected from /127.0.0.1:46782
2024-05-08T18:03:50.018860300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:50 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3030
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:50.065772300-Client connected from /127.0.0.1:46783
2024-05-08T18:03:50.081388800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:50 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3263
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:50.096989800-Client connected from /127.0.0.1:46784
2024-05-08T18:03:50.102011200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:50 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3020
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:50.175617300-Client connected from /127.0.0.1:46785
2024-05-08T18:03:50.191238100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:50 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3212
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:50.285428-Client connected from /127.0.0.1:46786
2024-05-08T18:03:50.285428-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:50 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3030
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:50.387085800-Client connected from /127.0.0.1:46787
2024-05-08T18:03:50.402593200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:50 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3036
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:50.705815500-Client connected from /127.0.0.1:46788
2024-05-08T18:03:50.721448500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:50 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3240
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:03:51.144442-Client connected from /127.0.0.1:46789
2024-05-08T18:03:51.144442-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:03:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3215
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie12=ma377xrz; Max-Age=24; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie13=ma378xrz; Max-Age=32; HttpOnly; Date=2024-05-08T18:03:29.178685700


2024-05-08T18:04:08.915650600-Client connected from /127.0.0.1:46791
2024-05-08T18:04:08.915650600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:08 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 22506
Set-Cookie: cookie11=ma376xrz; Max-Age=50; HttpOnly; Date=2024-05-08T18:03:29.178685700
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600


2024-05-08T18:04:24.707327100-Client connected from /127.0.0.1:46792
2024-05-08T18:04:24.723013700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:24 GMT
Server: DJGI/1.0.0
Content-Type: text/html
Content-Length: 767
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600

<!DOCTYPE html>
<html>  
<head>
  <title>How to Play</title>
  <link rel="stylesheet" type="text/css" href="css/styleHowTo.css">
</html>
<body id="amongusFont">
  <h1>How to Play</h1>
  <nav class="center">

    
    <p>1.	Click the big impostor to gain votes and kill him.</p>
    <p>2. Click on the report button to rise the votes per second.</p>
    <p>3. Click on the upgrades of the rooms to call a crewmate to help you to get votes. 
      If a crewmate dies lowers the price.</p>
    <p>4. Click on the vents to kick the impostors out of the room and save your crewmates</p>
    <p>5. Click on the store button to buy some objects to your companion.</p>

    <a href="index.html" class="bn62" >
      Play Game
    </a>
  </nav>
</body>


2024-05-08T18:04:24.817107200-Client connected from /127.0.0.1:46793
2024-05-08T18:04:24.817107200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:24 GMT
Server: DJGI/1.0.0
Content-Type: text/css
Content-Length: 974
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

@font-face {
    font-family: AmongUsFont; 
    src: url('../fonts/amongus_vector.ttf');
 } 
 
 .bn62 {
     color: #e9e1e1;
     background-color: #881212;
     border-radius: 40px;
     display: flex;
     justify-content: center;
     align-items: center;
     height: 2em;
     width: 6em;
     font-size: 2.5em;
     margin: auto;
     }
 
 .center {
     margin: auto;
     width: 75%;
     padding: 15px;
     }


body {
    font-family: AmongUsFont;
    text-align: center;
    background-image: url('../images/bgPattern.png');
    background-repeat: repeat;
    background-size: 50%;
    background-attachment: cover;
    background-position: center;    
}


h1 {
    color: aliceblue;
    font-size: 8em;
    margin-bottom: 2%;
    }

p {
    color: aliceblue;
    font-size: 1.6em;
    margin-bottom: 2%;
    margin-top: 0%;
    }

    
:root{
    
    cursor: url('../images/icons/mouseCursor.ico'), auto;
}


2024-05-08T18:04:24.832732700-Client connected from /127.0.0.1:46794
2024-05-08T18:04:24.848357900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:24 GMT
Server: DJGI/1.0.0
Content-Type: text/css
Content-Length: 974
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

@font-face {
    font-family: AmongUsFont; 
    src: url('../fonts/amongus_vector.ttf');
 } 
 
 .bn62 {
     color: #e9e1e1;
     background-color: #881212;
     border-radius: 40px;
     display: flex;
     justify-content: center;
     align-items: center;
     height: 2em;
     width: 6em;
     font-size: 2.5em;
     margin: auto;
     }
 
 .center {
     margin: auto;
     width: 75%;
     padding: 15px;
     }


body {
    font-family: AmongUsFont;
    text-align: center;
    background-image: url('../images/bgPattern.png');
    background-repeat: repeat;
    background-size: 50%;
    background-attachment: cover;
    background-position: center;    
}


h1 {
    color: aliceblue;
    font-size: 8em;
    margin-bottom: 2%;
    }

p {
    color: aliceblue;
    font-size: 1.6em;
    margin-bottom: 2%;
    margin-top: 0%;
    }

    
:root{
    
    cursor: url('../images/icons/mouseCursor.ico'), auto;
}


2024-05-08T18:04:24.876005800-Client connected from /127.0.0.1:46795
2024-05-08T18:04:24.876005800-Client connected from /127.0.0.1:46796
2024-05-08T18:04:24.880022300-Client connected from /127.0.0.1:46797
2024-05-08T18:04:24.880022300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:24 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 5537
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:24.880022300-Response: 
HTTP/1.1 500 Internal Server Error
Connection: close
Date: Wed, 08 May 2024 16:04:24 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 21
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

Internal server error

2024-05-08T18:04:24.895662100-Response: 
HTTP/1.1 500 Internal Server Error
Connection: close
Date: Wed, 08 May 2024 16:04:24 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 21
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

Internal server error

2024-05-08T18:04:25.814150800-Client connected from /127.0.0.1:46798
2024-05-08T18:04:25.821149800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: text/html
Content-Length: 1186
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>ImpostOut</title>
		<link rel="stylesheet" href="css/style.css">
	</head>
	<body style="margin:0px">

		<!--PowerUp-->
		<script src="js/powerup.js"></script>

		<!--AutoClicker-->
		<script src="js/autoclicker.js"></script>

		<!--Sound-->
		<script src="js/sound.js"></script>

		<!--HUD-->
		<script src="js/barometer.js"></script>
		<script src="js/paralax.js"></script>
		<script src="js/HUD.js"></script>
		<script src="js/Buttons.js"></script>

		<!--Impostor Variables-->
		<script src="js/CustomSus.js"></script>
		<script src="js/vent.js"></script>
		<script src="js/crewMini.js"></script>
		<script src="js/bg_room.js"></script>
		<script src="js/TextValues.js"></script>
		<script src="js/impostor.js"></script>
		<script src="js/imposWHITE.js"></script>
		<script src="js/imposBLACK.js"></script>
		<script src="js/imposRED.js"></script>

		<!--Collisions Variables-->
		<script src="js/collisions.js"></script>

		<!--Cookies-->
		<script src="js/cookies.js"></script>


		<!--Game Variables-->
		<script src="js/game.js"></script>


	</body>
</html>

2024-05-08T18:04:25.877151800-Client connected from /127.0.0.1:46799
2024-05-08T18:04:25.877151800-Client connected from /127.0.0.1:46800
2024-05-08T18:04:25.877151800-Client connected from /127.0.0.1:46801
2024-05-08T18:04:25.877151800-Client connected from /127.0.0.1:46802
2024-05-08T18:04:25.888025700-Client connected from /127.0.0.1:46803
2024-05-08T18:04:25.893015400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 204
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

// Sound effects
var sndKilled = new Audio("sound/killed.mp3");
sndKilled.volume = 0.1;

var sndBackground = new Audio("sound/NormalTask.wav");
sndBackground.volume = 0.1;
sndBackground.loop = true;

2024-05-08T18:04:25.893015400-Client connected from /127.0.0.1:46804
2024-05-08T18:04:25.899023100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1810
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

class PowerUp {
    constructor(posX, posY, width, height, sprite) {
        this.posX = posX;
        this.posY = posY;
        this.width = width;
        this.height = height;
        this.image = new Image();
        this.image.src = sprite;
    }
    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

var doubleAuto = false;

class DoubleAutoPowerUp extends PowerUp {
    constructor(posX, posY, width, height, sprite) {
        super(posX, posY, width, height, sprite);
        this.active = false;

        setInterval(() => {
            if (this.active == false) {
                this.active = true;
                this.posX = getRandomInt(100, canvas.width - 100);
            }
        }, getRandomInt(60000, 120000));
    }
    render() {
        if (this.active)
            super.render();
    }

    update(dt) {
        if(this.posY > canvas.height) this.active = false; 

        if (this.active) {

            //move down making a sinusoidal movement
            this.posX += 100 * Math.sin(this.posY / 10) * dt;
            this.posY += 20 * dt;

            //Check if pressed
            this.OverPowerAction();
        }
        else {
            this.posX = -this.width;
            this.posY = -this.height;
        }
        
        
    }

    MouseOverButton() {
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    OverPowerAction() {
        if (this.MouseOverButton() && this.active && isClick ) {
            this.active = false;
            doubleAuto = true;
            setTimeout(() => {
                doubleAuto = false;
            }, 10000);
        }
    }
}

2024-05-08T18:04:25.908015600-Client connected from /127.0.0.1:46805
2024-05-08T18:04:25.914020-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 2049
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

var clickPower = 1;

var adminCost = 2; //5
var adminCostBase = 2;
var adminPow = 0.6;
var adminPowTotal = 1.0;

var medBayCost = 3; //10
var medBayCostBase = 3;
var medBayPow = 0.4;
var medBayPowTotal = 1.0;

var electricalCost = 5; //15
var electricalCostBase = 5;
var electricalPow = 0.6;
var electricalPowTotal = 1.0;

var shieldsCost = 10; //20
var shieldsCostBase = 10;
var shieldsPow = 0.3;
var shieldsPowTotal = 1.0;

var autoClickerCost = 10;
var votesIncrement = 0.1;

class AutoClicker{
    constructor(){
        this.active = false;
        this.clicksPerSecond = 0.0;
        this.clicksPerSecondBase = 0.0;
    } 

}

class AutoClkrSimple extends AutoClicker{
    
    constructor(){
        super();
    }

    update(dt){
        
        //Upgrade costs
        adminCost = Math.floor(Math.pow(adminCostBase, adminPowTotal + adminPow * crewAdminArray.length));
        medBayCost = Math.floor(Math.pow(medBayCostBase, medBayPowTotal + medBayPow * crewMedBayArray.length));
        electricalCost = Math.floor(Math.pow(electricalCostBase, electricalPowTotal + electricalPow * crewElectricArray.length));
        shieldsCost = Math.floor(Math.pow(shieldsCostBase, shieldsPowTotal + shieldsPow * crewShieldsArray.length));
        autoClickerCost = doubleAuto ? this.clicksPerSecond * 50 : this.clicksPerSecond * 100;
        
        this.clicksPerSecond = doubleAuto ? this.clicksPerSecondBase *2  : this.clicksPerSecondBase; 

        if(!this.active && this.clicksPerSecond >= 0.1){
            this.active = true;
            setTimeout(() => {
                if(impostor.isImpostorAlive()){
                    if(doubleAuto){
                        DamageImpostor();
                        DamageImpostor();
                    }
                    else{
                        DamageImpostor();
                    }
                    
                }
                this.active = false;
            }, 1000/this.clicksPerSecond);
        }
    }
}

2024-05-08T18:04:25.939014400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 7839
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

var hatCost = 1000;
var costumeCost = 10000;
var petCost = 50000; 

var GladiatorUnloked = false;
var HatUnloked = false;
var DemonUnloked = false;

var ArcheologistUnloked = false;
var SuitUnloked = false;
var RobotUnloked = false;

var CubeUnloked = false;
var ClankUnloked = false;
var SparkUnloked = false;

var lockImage = new Image();
lockImage.src = "./images/icons/Lock.png";


class HUD{

    constructor() {
        this.scoreText = "Score: 0";
        this.movableTexts = [];

        this.imgCrewAnnounce = new Image();
        this.imgCrewAnnounce.src = "./images/icons/Announce.png";

        this.specialScore = "";

        this.randomAngleCombo = 0;
        this.randomSizeCombo = 50;

        this.createMovableText("Welcome to the ImpostOut Web Game", "grey", -75);
        this.newMovableTextFromFile();

    }

    update(dt) {
        this.scoreText = 'Crew Votes: ' + Math.floor(score);

        //Movable Texts
        for (var i = 0; i < this.movableTexts.length ; i++) {
            this.movableTexts[i].update(dt);

            //Remove if out of screen
            if(this.movableTexts[i].x > canvas.width+1 || this.movableTexts[i].x < -401){
                this.movableTexts.splice(i, 1);
            }
        }
    }

    render() {
        //Black line at the top
        ctx.fillStyle = 'black';
        ctx.fillRect(0, 0, canvas.width, 25);

        //Crew Votes
        ctx.font = '80px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText(this.scoreText, 
            canvas.width/2 - 120, 
            canvas.height/2 - 360);

        //Votes per second
        ctx.font = '30px AmongUsFont';
        if(doubleAuto) ctx.fillStyle = "red";
        else ctx.fillStyle = "#e0e0e0";
        ctx.fillText('Votes per second: ' + Math.floor(autoclicker.clicksPerSecond*10)/10,
            canvas.width/2 - 55,
            canvas.height/2 - 325);

        //Upgrade Cost
        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + electricalCost,
        ElectricalRoom.posX+buttonSize, ElectricalRoom.posY +290);

        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + medBayCost,
        MedbayRoom.posX+buttonSize, MedbayRoom.posY +260);

        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + adminCost,
        AdminRoom.posX+buttonSize, AdminRoom.posY +290);
        
        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + shieldsCost,
        Shields.posX+buttonSize, Shields.posY +320);

        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + Math.floor(autoClickerCost),
        canvas.width/2- 60, canvas.height -35);

        //Shop Cost

        //Gladiator
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Gladiator: " + hatCost,
        GladiatorShopButton.posX + 10, GladiatorShopButton.posY + 77);
        if(!GladiatorUnloked) ctx.drawImage(lockImage, GladiatorShopButton.posX + 45, GladiatorShopButton.posY + 40, 20, 20);
        //Hat
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Hat: " + hatCost,
        HatShopButton.posX + 20, HatShopButton.posY + 77);
        if(!HatUnloked) ctx.drawImage(lockImage, HatShopButton.posX + 45, HatShopButton.posY + 40, 20, 20);
        //Demon
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Demon: " + hatCost,
        DemonShopButton.posX + 10, DemonShopButton.posY + 77);
        if(!DemonUnloked) ctx.drawImage(lockImage, DemonShopButton.posX + 45, DemonShopButton.posY + 40, 20, 20);

        //Archeologist
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Archeologist: " + costumeCost,
        ArcheologistShopButton.posX - 20, ArcheologistShopButton.posY + 77);
        if(!ArcheologistUnloked) ctx.drawImage(lockImage, ArcheologistShopButton.posX + 40, ArcheologistShopButton.posY + 40, 20, 20);
        //Suit
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Suit: " + costumeCost,
        SuitShopButton.posX +5, SuitShopButton.posY + 77);
        if(!SuitUnloked) ctx.drawImage(lockImage, SuitShopButton.posX + 40, SuitShopButton.posY + 40, 20, 20);
        //Robot
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Robot: " + costumeCost,
        RobotShopButton.posX+5, RobotShopButton.posY + 77);
        if(!RobotUnloked) ctx.drawImage(lockImage, RobotShopButton.posX + 40, RobotShopButton.posY + 40, 20, 20);

        //Pets
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("All pets: " + petCost,
        ClankShopButton.posX -20, ClankShopButton.posY + 60);

        if(!CubeUnloked) ctx.drawImage(lockImage, CubeShopButton.posX + 15, CubeShopButton.posY + 20, 15, 15);
        if(!ClankUnloked) ctx.drawImage(lockImage, ClankShopButton.posX + 15, ClankShopButton.posY + 20, 15, 15);
        if(!SparkUnloked) ctx.drawImage(lockImage, SparkShopButton.posX + 15, SparkShopButton.posY + 20, 15, 15);

        //Shop Unlocks


        // Special Score
        ctx.font = '60px AmongUsFont';
        ctx.fillStyle = "grey";
        ctx.save(); // Save the current state
            ctx.translate(canvas.width/2 + 180, canvas.height/2 - 300); 
            ctx.rotate(-15 * Math.PI / 180); 
            ctx.fillText(this.specialScore, 0, 0); 
            ctx.restore(); 

        //Combo
        if(combo > 9){
             
            ctx.font = this.randomSizeCombo + 'px AmongUsFont';
            ctx.fillStyle = "rgba(255, 0, 0, 0.7)";
            ctx.save(); // Save the current state
            ctx.translate(canvas.width/2, canvas.height/2 + 175 ); 
            ctx.rotate(this.randomAngleCombo * Math.PI / 180); 
            ctx.fillText('Combo x' + combo + '!', -50, 0); 
            ctx.restore(); 
        }          

        //Movable Texts
        for (var i = 0; i < this.movableTexts.length ; i++) {
            this.movableTexts[i].render();
        }

        //Image at the top right
        ctx.drawImage(this.imgCrewAnnounce, canvas.width - 30, - 5, 40, 40);

        
        // Anti Cease and desist
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = 'grey';
        ctx.fillText('Sprites property of @. Only for class project porpuses and sus amogus.', 10, canvas.height - 10);

    }
    
    newMovableTextFromFile() {
        setInterval(() => {
            this.createMovableText(textPrompt[getRandomInt(0, textPrompt.length)], "grey", -75);
        }, 17500);

    }
        

    createMovableText(text, color, speed) {
        var movableText = new MovableText(text, color, speed);
        this.movableTexts.push(movableText);
    }

}

class MovableText{
    constructor(text, color, speed) {
        this.text = "Default Text"
        
        this.font = '30px AmongUsFont';
        this.speed = 0;
        
        this.text = text;
        this.color = color;
        this.speed = speed;

        this.y = 25;

        if(this.speed <= 0){
            this.x = canvas.width;
        }
        else{
            this.x = -400;
        }
    }

    update(dt) {
        this.x += this.speed * dt;
    }

    render() {
        ctx.font = this.font;
        ctx.fillStyle = this.color;
        ctx.fillText(this.text, this.x, this.y);
    }
}



2024-05-08T18:04:25.939014400-Client connected from /127.0.0.1:46806
2024-05-08T18:04:25.944015900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1935
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

class Barometer{
        constructor(posX, posY){
        this.posX = posX;
        this.posY = posY;
        this.width = 1490/12;
        this.height = 158/12;
        this.limit = 30;
        this.image = new Image();
        this.image.src = "images/interface/Needle.png";
        this.baroBody = new BaroBody(this.posX - 1920/24 + this.width/2, this.posY-1344/24 + this.height/2 - 25);
    }

    render(){
        this.baroBody.render();
        ctx.save();
        //rotate the image from the center
        ctx.translate(this.posX + this.width / 2, this.posY + this.height / 2);
        ctx.rotate(this.angle);
        ctx.translate(-(this.posX + this.width / 2), -(this.posY + this.height / 2));
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        ctx.restore();
    }

    update(dt, CrewsActive){
        //rotate the needle based on the quantity of crew members
        this.angle = (CrewsActive/this.limit) * Math.PI/2;

        //limit the rotation
        if(this.angle > Math.PI){
            this.angle = Math.PI;
        }
        if(this.angle < 0){
            this.angle = 0;
        }

        if (this.angle < Math.PI/2){
            impostor.forceDamage = 1;
        }

        if (this.angle > Math.PI/2){
            impostor.forceDamage = 2;
        }

        if (this.angle > Math.PI/2 + Math.PI/4){
            impostor.forceDamage = 3;
        }

        if (this.angle > Math.PI){
            impostor.forceDamage = 4;
        }
    }
};

class BaroBody {
    constructor(posX, posY){
        this.posX = posX;
        this.posY = posY;
        this.width = 1920/12;
        this.height = 1344/12;
        this.image = new Image();
        this.image.src = "images/interface/Counter.png";
    }

    render(){
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

2024-05-08T18:04:25.944015900-Client connected from /127.0.0.1:46807
2024-05-08T18:04:25.956014100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 6319
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700




class Button {
    constructor(name, sprite, posX, posY, width, height) {
        //Custom values
        this.name = name;
        this.image = new Image();
        this.image.src = sprite;
        this.posX = posX;
        this.posY = posY;
        this.width = width;
        this.height = height;
    }

    render(){
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }

   
}

class simpleButton extends Button{
    constructor(name, sprite, posX, posY, width, height) {
        super(name, sprite, posX, posY, width, height);
        
    }
    
    update(dt){
    
    }
      
    render(){
        super.render();
    }

    
    MouseOverButton(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    ClickingButton(type){

        if(this.MouseOverButton() && isClick){
            switch(type){
                case "autoclicker":
                    if(score - autoClickerCost >= 0){
                        score -= autoClickerCost;
                        autoclicker.clicksPerSecondBase += votesIncrement;
                    }
                        break;
                    case "howtoplay":
                        // Go to the How to Play html
                        saveAllCookies();
                        window.location.href = "howtoplay.html";
                        break;
                    case "erase":
                        // Erase the game
                        deleteAllCookies();
                        break;
                    case "save":
                        // Save the game
                        saveAllCookies();
                        break;
                    case "gladiator":
                        if(score - hatCost >= 0 && !GladiatorUnloked){
                            score -= hatCost;
                            GladiatorUnloked = true;
                        }
                        if(GladiatorUnloked) ChangeHat("Gladiator");
                        break;
                    case "hat":
                        if(score - hatCost >= 0 && !HatUnloked){
                            score -= hatCost;
                            HatUnloked = true;
                        }
                        if(HatUnloked) ChangeHat("Hat");
                    break;
                    case "demon":
                        if(score - hatCost >= 0 && !DemonUnloked){
                            score -= hatCost;
                            DemonUnloked = true;
                        }
                        if(DemonUnloked) ChangeHat("Demon");
                    break;
                    case "archeologist":
                        if(score - costumeCost >= 0 && !ArcheologistUnloked){
                            score -= costumeCost
                            ArcheologistUnloked = true;
                        }
                        if(ArcheologistUnloked) ChangeCostume("Archeologist");
                    break;
                    case "suit":
                        if(score - costumeCost >= 0 && !SuitUnloked){
                            score -= costumeCost
                            SuitUnloked = true;
                        }
                        if(SuitUnloked) ChangeCostume("Suit");
                    break;
                    case "robot":
                        if(score - costumeCost >= 0 && !RobotUnloked){
                            score -= costumeCost
                            RobotUnloked = true;
                        }
                        if(RobotUnloked) ChangeCostume("Robot");
                    break;
                    case "cube":
                        if(score - petCost >= 0 && !CubeUnloked){
                            score -= petCost;
                            CubeUnloked = true;
                        }
                        if(CubeUnloked) ChangePet("Cube");
                    break;
                    case "clank":
                        if(score - petCost >= 0 && !ClankUnloked){
                            score -= petCost;
                            ClankUnloked = true;
                        }
                        if(ClankUnloked) ChangePet("ClankPet");
                    break;
                    case "spark":
                        if(score - petCost >= 0 && !SparkUnloked){
                            score -= petCost;
                            SparkUnloked = true;
                        }
                        if(SparkUnloked) ChangePet("343GuiltySpark");
                    break;

                        
            }
        }
    }
}

class upgradeButton extends Button{
    constructor(name, sprite, posX, posY, width, height) {
        super(name, sprite, posX, posY, width, height);
        
    }
    
    update(dt){
    
    }
      
    render(){
        super.render();
    }

    
    MouseOverButton(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }


    ClickingButton(cost, type){
        if(this.MouseOverButton() && isClick){
            if(score-cost >= 0){
                score -= cost;
                this.image.src = "images/interface/ButtonPressed.png";
                
                switch(type){
                    case "admin":
                        SpawnCrewAdmin();
                        break;
                    case "medbay":
                        SpawnCrewMedBay();
                        break;
                    case "electrical":
                        SpawnCrewElectric();
                        break;
                    case "shields":
                        SpawnCrewShields();
                        break;
                }

                var self = this;
                setTimeout(function(){
                    console.log("Button pressed");
                    clickPower += 0.001;
                    self.image.src = "images/interface/Button.png";
                }, 200);
                return true;
            }
        }
    };

    
    
}

2024-05-08T18:04:25.959014200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 733
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

class paralax {
  constructor(image, posX, posY, speed) {
    this.posX = posX;
    this.posY = posY;
    this.width = 600;
    this.height = 600;
    this.image = new Image();
    this.image.src = image;
    this.angle = 0;
    this.speed = speed;
  }
  render() {
    
    ctx.save();
    //rotate the image from the center
    ctx.translate(this.posX + this.width / 2, this.posY + this.height / 2);
    ctx.rotate(this.angle);
    ctx.translate(-(this.posX + this.width / 2), -(this.posY + this.height / 2));



    ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    ctx.restore();
  }

    update(dt) {
        //rotate the image
        this.angle +=this.speed*dt;
    }
}

2024-05-08T18:04:25.966032400-Client connected from /127.0.0.1:46808
2024-05-08T18:04:25.974034400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 3832
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

class Vent {
    constructor( posX, posY) {
        this.width = 165/4;
        this.height = 211/4;
        this.posX = posX;
        this.posY = posY;
        this.ventOpen = false;
        this.going = true;
        this.image = new Image();
        this.image.src = "images/vent/ventClosed.png";
        setTimeout(() => {
            var timerOuter = getRandomInt(2000, 5000);
            exclamations.push(new Exclamation(this.posX, this.posY, timerOuter));
            setTimeout(() => {
                switch (getRandomInt(0, 3)) {
                    case 0:
                        this.image.src = "images/vent/ventBLACK.png";
                        break;
                    case 1:
                        this.image.src = "images/vent/ventWHITE.png";
                        break;
                    case 2:
                        this.image.src = "images/vent/ventRED.png";
                        break;
                }
                this.ventOpen = true;
            }   , timerOuter);
        }   , getRandomInt(30000, 90000));
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }

    update(dt) {
    }

    MouseOverVent(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    OverVent(){
        
    }

    ClickingVent(x, y){
        if(x > this.posX  && x < this.posX + this.width &&
         y > this.posY && y < this.posY + this.height && this.ventOpen){
            this.VentReset();
        }
    };

    VentReset(){
        if(this.ventOpen){
            this.ventOpen = false;
            this.image.src = "images/vent/ventClosed.png";
            setTimeout(() => {
                var timerOuter = getRandomInt(2000, 5000);
                exclamations.push(new Exclamation(this.posX, this.posY, timerOuter));
                setTimeout(() => {
                    switch (getRandomInt(0, 3)) {
                        case 0:
                            this.image.src = "images/vent/ventBLACK.png";
                            break;
                        case 1:
                            this.image.src = "images/vent/ventWHITE.png";
                            break;
                        case 2:
                            this.image.src = "images/vent/ventRED.png";
                            break;
                    }
                    this.ventOpen = true;
                }   , timerOuter);
            }   , getRandomInt(30000, 90000));
        }
    }

};

class Exclamation {
    constructor(posX, posY, timerOuter) {
        this.width = 20;
        this.height = 30;
        this.posX = posX+10;
        this.posY = posY;
        this.going = true;
        this.active = true;
        this.image = new Image();
        this.image.src = "images/interface/Exclamation.png";
        setTimeout(() => {
            clearInterval(interval);
            this.active = false;
        }, timerOuter);

        var interval = setInterval(() => {
            if (this.width < 35 && this.going){
                this.width += 1;
                this.height += 1;

                this.posX -= 0.5;
                this.posY -= 1;
            }
            else if (this.width >25){
                this.going = false;
                this.width -= 1;
                this.height -= 1;

                this.posX += 0.5;
                this.posY += 1;
            }
            else{
                this.going = true;
            }
            
        }, 10);
    }

    

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

2024-05-08T18:04:25.978111200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 2565
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

class CustomSus {
    constructor() {
        this.posX = 60;
        this.posY = 50;
        this.width = 250/5;
        this.height = 300/5;
        this.color = "red";
        this.image = new Image();
        this.image.src = "./images/" + this.color + "/Body.png";
        this.costume = new CustomCostume(this.posX, this.posY);
        this.hat = new CustomHat(this.posX, this.posY);
        this.pet = new CustomPet(this.posX, this.posY);

    }

    render() {
        if(!this.hat.inFront)
        this.hat.render();
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        this.costume.render();
        if(this.hat.inFront)
        this.hat.render();

        this.pet.render();
    }

};

function ChangeHat(hat){
    customSus.hat.hat = hat;
    customSus.hat.image.src = "./images/miniCustom/" + customSus.hat.hat + ".png";
}

function ChangeCostume(costume){
    customSus.costume.costume = costume;
    customSus.costume.image.src = "./images/miniCustom/" + customSus.costume.costume + ".png";
}

function ChangePet(pet){
    customSus.pet.pet = pet;
    customSus.pet.image.src = "./images/miniCustom/" + customSus.pet.pet + ".png";
}


class CustomCostume {
    constructor(posX, posY) {
        this.posX = posX;
        this.posY = posY;
        this.width = 250/5;
        this.height = 300/5;
        this.image = new Image();
        this.costume = "noneCostume";
        
    }

    render() {
        this.image.src = "./images/miniCustom/" + this.costume + ".png";
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
};

class CustomHat {
    constructor(posX, posY) {
        this.posX = posX - 15;
        this.posY = posY-45;
        this.width = 120/1.5;
        this.height = 120/1.5;
        this.image = new Image();
        this.hat = "noneHat";
        this.inFront = true;
    }

    render() {
        this.image.src = "./images/miniCustom/" + this.hat + ".png";
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
};

class CustomPet {
    constructor(posX, posY) {
        this.posX = posX - 40;
        this.posY = posY+15 ;
        this.width = 120/3;
        this.height = 141/3;
        this.image = new Image();
        this.pet = "nonePet";
    }

    render() {
        this.image.src = "./images/miniCustom/" + this.pet + ".png";
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}


2024-05-08T18:04:25.979111200-Client connected from /127.0.0.1:46809
2024-05-08T18:04:25.983111400-Client connected from /127.0.0.1:46810
2024-05-08T18:04:25.983111400-Client connected from /127.0.0.1:46811
2024-05-08T18:04:25.987113100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 204
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

// Sound effects
var sndKilled = new Audio("sound/killed.mp3");
sndKilled.volume = 0.1;

var sndBackground = new Audio("sound/NormalTask.wav");
sndBackground.volume = 0.1;
sndBackground.loop = true;

2024-05-08T18:04:25.987113100-Client connected from /127.0.0.1:46812
2024-05-08T18:04:25.994111600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1810
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

class PowerUp {
    constructor(posX, posY, width, height, sprite) {
        this.posX = posX;
        this.posY = posY;
        this.width = width;
        this.height = height;
        this.image = new Image();
        this.image.src = sprite;
    }
    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

var doubleAuto = false;

class DoubleAutoPowerUp extends PowerUp {
    constructor(posX, posY, width, height, sprite) {
        super(posX, posY, width, height, sprite);
        this.active = false;

        setInterval(() => {
            if (this.active == false) {
                this.active = true;
                this.posX = getRandomInt(100, canvas.width - 100);
            }
        }, getRandomInt(60000, 120000));
    }
    render() {
        if (this.active)
            super.render();
    }

    update(dt) {
        if(this.posY > canvas.height) this.active = false; 

        if (this.active) {

            //move down making a sinusoidal movement
            this.posX += 100 * Math.sin(this.posY / 10) * dt;
            this.posY += 20 * dt;

            //Check if pressed
            this.OverPowerAction();
        }
        else {
            this.posX = -this.width;
            this.posY = -this.height;
        }
        
        
    }

    MouseOverButton() {
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    OverPowerAction() {
        if (this.MouseOverButton() && this.active && isClick ) {
            this.active = false;
            doubleAuto = true;
            setTimeout(() => {
                doubleAuto = false;
            }, 10000);
        }
    }
}

2024-05-08T18:04:25.994111600-Client connected from /127.0.0.1:46813
2024-05-08T18:04:25.997111700-Client connected from /127.0.0.1:46814
2024-05-08T18:04:26.002112200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 2049
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

var clickPower = 1;

var adminCost = 2; //5
var adminCostBase = 2;
var adminPow = 0.6;
var adminPowTotal = 1.0;

var medBayCost = 3; //10
var medBayCostBase = 3;
var medBayPow = 0.4;
var medBayPowTotal = 1.0;

var electricalCost = 5; //15
var electricalCostBase = 5;
var electricalPow = 0.6;
var electricalPowTotal = 1.0;

var shieldsCost = 10; //20
var shieldsCostBase = 10;
var shieldsPow = 0.3;
var shieldsPowTotal = 1.0;

var autoClickerCost = 10;
var votesIncrement = 0.1;

class AutoClicker{
    constructor(){
        this.active = false;
        this.clicksPerSecond = 0.0;
        this.clicksPerSecondBase = 0.0;
    } 

}

class AutoClkrSimple extends AutoClicker{
    
    constructor(){
        super();
    }

    update(dt){
        
        //Upgrade costs
        adminCost = Math.floor(Math.pow(adminCostBase, adminPowTotal + adminPow * crewAdminArray.length));
        medBayCost = Math.floor(Math.pow(medBayCostBase, medBayPowTotal + medBayPow * crewMedBayArray.length));
        electricalCost = Math.floor(Math.pow(electricalCostBase, electricalPowTotal + electricalPow * crewElectricArray.length));
        shieldsCost = Math.floor(Math.pow(shieldsCostBase, shieldsPowTotal + shieldsPow * crewShieldsArray.length));
        autoClickerCost = doubleAuto ? this.clicksPerSecond * 50 : this.clicksPerSecond * 100;
        
        this.clicksPerSecond = doubleAuto ? this.clicksPerSecondBase *2  : this.clicksPerSecondBase; 

        if(!this.active && this.clicksPerSecond >= 0.1){
            this.active = true;
            setTimeout(() => {
                if(impostor.isImpostorAlive()){
                    if(doubleAuto){
                        DamageImpostor();
                        DamageImpostor();
                    }
                    else{
                        DamageImpostor();
                    }
                    
                }
                this.active = false;
            }, 1000/this.clicksPerSecond);
        }
    }
}

2024-05-08T18:04:26.039110500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:25 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 22545
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700



class CrewMiniMedic { //canvas.width - spaceFromBorder - 364/1.7, 140
    constructor(color) {
        this.width = 40;
        this.height = 40;
        this.Taskscore = 50;
        this.posX =             canvas.width - 160 - 364/1.7;
        this.posY = 100         + 140;
        this.going = true;
        this.image = new Image();
        this.image.src = "./images/" + color + "/step/step00.png";
        this.imageIterator = 0;
        this.timer = false;
        this.directionchange = false;
        this.color = color;
        
        this.intervalstep = setInterval(() => {
            if (this.imageIterator < 10) {
                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else if (this.imageIterator <= 11) {
                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else {
                this.imageIterator = 1;
                this.image.src = "./images/" + this.color + "/step/step00.png";
            }
        } , 100);
        
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }

    update(dt) {
        if (this.going){
            if(this.posX < canvas.width + 10 - 364/1.7)
            this.posX += 1;
            else {
                if (!this.timer){
                    this.timer = true;
                    clearInterval(this.intervalstep);
                    this.image.src = "./images/" + this.color + "/Body.png";
                    this.width = 30;
                    this.height = 30;
                    this.posX += 5;
                    this.posY += 5;
                    setTimeout(() => {
                        this.posX-= 5;
                        this.posY-= 5;
                        this.width = 40;
                        this.height = 40;
                        this.imageIterator = 12; 
                        this.intervalstep = setInterval(() => {
                            if (this.imageIterator <= 23) {
                                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else {
                                this.imageIterator = 13;
                                this.image.src = "./images/" + this.color + "/step/step12.png";
                            }
                        } , 100);
                        this.timer = false;
                        score += this.Taskscore;
                        this.going = false;
                    }, 1000);
                }
            }
        }
        else{
            if(this.posX > canvas.width - 160 - 364/1.7)
            this.posX -= 1;
            else{
                
                clearInterval(this.intervalstep);
                 //Erase this from the array
                 this.posX =             canvas.width - 160 - 364/1.7;
                 this.posY = 100         + 140;
                 this.going = true;
                 this.timer = false;
                 this.imageIterator = 0;
                 this.directionchange = false;
                 this.image.src = "./images/" + this.color + "/step/step00.png";

                 this.intervalstep = setInterval(() => {
                    if (this.imageIterator < 10) {
                        this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else if (this.imageIterator <= 11) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 1;
                        this.image.src = "./images/" + this.color + "/step/step00.png";
                    }
                } , 100);
            }
        }
        
    }
}

class CrewMiniShields {  //canvas.width - spaceFromBorder - 437/2, canvas.height - 180 - 477/2
    constructor(color) {
        this.width = 40;
        this.height = 40;
        this.Taskscore = 100;
        this.posX =             canvas.width - 160 - 437/2;
        this.posY = 90 +       canvas.height - 180 - 477/2;
        this.going = true;
        this.image = new Image();
        this.image.src = "./images/" + color + "/step/step00.png";
        this.imageIterator = 0;
        this.timer = false;
        this.directionchange = true;
        this.color = color;
        
        this.intervalstep = setInterval(() => {
            if (this.imageIterator < 10) {
                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else if (this.imageIterator <= 11) {
                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else {
                this.imageIterator = 1;
                this.image.src = "./images/" + this.color + "/step/step00.png";
            }
        } , 100);
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
    update(dt) {
        if (this.going){
        if(this.posX < canvas.width - 40 - 437/2  && this.posY == canvas.height - 90 - 477/2)
        this.posX += 50*dt;
        else if(this.posY < canvas.height + 0 - 477/2)
        this.posY += 50*dt;
        else if (this.posX > canvas.width -120 - 437/2){
            this.posX -= 50*dt;
            if (this.directionchange){
                this.directionchange = false;
                this.imageIterator = 12;
                clearInterval(this.intervalstep);
                this.intervalstep = setInterval(() => {
                    if (this.imageIterator <= 23) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 13;
                        this.image.src = "./images/" + this.color + "/step/step12.png";
                    }
                } , 100);
            }
        }
        
        else {
            if (!this.timer){
                this.timer = true;
                clearInterval(this.intervalstep);
                    this.image.src = "./images/" + this.color + "/Body.png";
                    this.width = 30;
                    this.height = 30;
                    this.posX += 5;
                    this.posY += 5;
                    setTimeout(() => {
                        this.posX-= 5;
                        this.posY-= 5;
                        this.width = 40;
                        this.height = 40;
                        this.imageIterator = 12; 
                        this.intervalstep = setInterval(() => {
                            if (this.imageIterator < 10) {
                                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else if (this.imageIterator <= 11) {
                                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else {
                                this.imageIterator = 1;
                                this.image.src = "./images/" + this.color + "/step/step00.png";
                            }
                        } , 100);
                        this.timer = false;
                        score += this.Taskscore;
                        this.going = false;
                    }, 1000);
            }
            
        }
        }
        else{
            
        //inversed path
        if (this.posX < canvas.width - 40 - 437/2 && this.posY >= canvas.height + 0 - 477/2){
            this.posX += 50*dt;
            this.directionchange = true;
        }
        
        else if (this.posY > canvas.height - 90 - 477/2)
        this.posY -= 50*dt;
        else if (this.posX > canvas.width -160 - 437/2){
            this.posX -= 50*dt;
            if (this.directionchange){
                this.directionchange = false;
                this.imageIterator = 12;
                clearInterval(this.intervalstep);
                this.intervalstep = setInterval(() => {
                    if (this.imageIterator <= 23) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 13;
                        this.image.src = "./images/" + this.color + "/step/step12.png";
                    }
                } , 100);
            }
        }

        
        else{
            //Erase this from the array
            clearInterval(this.intervalstep);

            this.posX =             canvas.width - 160 - 437/2;
            this.posY = 90 +       canvas.height - 180 - 477/2;
            this.going = true;
            this.image.src = "./images/" + this.color + "/step/step00.png";
            this.imageIterator = 0;
            this.timer = false;
            this.directionchange = true;
            
            this.intervalstep = setInterval(() => {
                if (this.imageIterator < 10) {
                    this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                    this.imageIterator += 1;
                }
                else if (this.imageIterator <= 11) {
                    this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                    this.imageIterator += 1;
                }
                else {
                    this.imageIterator = 1;
                    this.image.src = "./images/" + this.color + "/step/step00.png";
                }
            } , 100);           
            
        }
        
        }
    }
}

class CrewMiniElectro { //spaceFromBorder, 150
    constructor(color) {
        this.width = 40;
        this.height = 40;
        this.Taskscore = 75;
        this.posX = 160 +       160;
        this.posY = 150 +       150;
        this.going = true;
        this.image = new Image();
        this.image.src = "./images/" + color + "/step/step00.png";
        this.timer = false;   
        this.imageIterator = 12;
        this.timer = false;
        this.directionchange = false;
        this.color = color;
        
        this.intervalstep = setInterval(() => {
            if (this.imageIterator <= 23) {
                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else {
                this.imageIterator = 13;
                this.image.src = "./images/" + this.color + "/step/step12.png";
            }
        } , 100);
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        }

    update(dt) {
         if (this.going){
             if(this.posY > 240)
             this.posY -= 50 * dt;
             else if(this.posX > 165){
                this.posX -= 50 * dt;
                this.posY -= 20 * dt;
             }
             else {
                if (!this.timer){
                    this.timer = true;
                    clearInterval(this.intervalstep);
                    this.image.src = "./images/" + this.color + "/Body.png";
                    this.width = 30;
                    this.height = 30;
                    this.posX += 5;
                    this.posY += 5;
                    setTimeout(() => {
                        this.posX-= 5;
                        this.posY-= 5;
                        this.width = 40;
                        this.height = 40;
                        this.imageIterator = 12; 
                        this.intervalstep = setInterval(() => {
                            if (this.imageIterator < 10) {
                                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else if (this.imageIterator <= 11) {
                                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else {
                                this.imageIterator = 1;
                                this.image.src = "./images/" + this.color + "/step/step00.png";
                            }
                        } , 100);
                        this.timer = false;
                        score += this.Taskscore;
                        this.going = false;
                    }, 1000);
                }
             }
         }
         else{
             if(this.posX < 320){
                this.posX += 50 * dt;
                this.posY += 20 * dt;
             }
            else if(this.posY < 300){
                this.posY += 50 * dt;
            }
            else{
                //Erase this from the array
                clearInterval(this.intervalstep);

                this.posX = 160 +       160;
                this.posY = 150 +       150;
                this.going = true;
                this.image.src = "./images/" + this.color + "/step/step00.png";
                this.timer = false;   
                this.imageIterator = 12;
                this.timer = false;
                this.directionchange = false;
                
                this.intervalstep = setInterval(() => {
                    if (this.imageIterator <= 23) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 13;
                        this.image.src = "./images/" + this.color + "/step/step12.png";
                    }
                } , 100);         
                
            }

         }
        
    }
}

class CrewMiniAdmin {   //spaceFromBorder, canvas.height - 180 - 1445/7
    constructor(color) {
        this.width = 40;
        this.height = 40;
        this.Taskscore = 25;
        this.posX = - 20        +160;
        this.posY = 45          + canvas.height - 180 - 1445/7;
        this.going = true;
        this.image = new Image();
        this.image.src = "./images/" + color + "/step/step00.png";
        this.timer = false;   
        this.imageIterator = 0;
        this.timer = false;
        this.directionchange = false;
        this.color = color;
        
        this.intervalstep = setInterval(() => {
            if (this.imageIterator < 10) {
                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else if (this.imageIterator <= 11) {
                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                this.imageIterator += 1;
            }
            else {
                this.imageIterator = 1;
                this.image.src = "./images/" + this.color + "/step/step00.png";
            }
        } , 100);
    }

    render() {
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        }
    update(dt) {
        if (this.going){
            if(this.posX < 370 && this.posY == 45 + canvas.height - 180 - 1445/7)
            this.posX += 50 * dt;
            else if(this.posY < 110 + canvas.height - 180 - 1445/7) {
                this.posY += 50 * dt;
            }
            else {
                if (!this.timer){
                    this.timer = true;
                    clearInterval(this.intervalstep);
                    this.image.src = "./images/" + this.color + "/Body.png";
                    this.width = 30;
                    this.height = 30;
                    this.posX += 5;
                    this.posY += 5;
                    setTimeout(() => {
                        this.posX-= 5;
                        this.posY-= 5;
                        this.width = 40;
                        this.height = 40;
                        this.imageIterator = 12; 
                        this.intervalstep = setInterval(() => {
                            if (this.imageIterator < 10) {
                                this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else if (this.imageIterator <= 11) {
                                this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                                this.imageIterator += 1;
                            }
                            else {
                                this.imageIterator = 1;
                                this.image.src = "./images/" + this.color + "/step/step00.png";
                            }
                        } , 100);
                        this.timer = false;
                        score += this.Taskscore;
                        this.going = false;
                    }, 1000);
                }
            }
        }
        else{
            if(this.posX < 430)
            this.posX += 50 * dt;
            else{
                //Erase this from the array
                clearInterval(this.intervalstep);

                this.posX = - 20        +160;
                this.posY = 45          + canvas.height - 180 - 1445/7;
                this.going = true;
                this.image.src = "./images/" + this.color + "/step/step00.png";
                this.timer = false;   
                this.imageIterator = 0;
                this.timer = false;
                this.directionchange = false;

                this.intervalstep = setInterval(() => {
                    if (this.imageIterator < 10) {
                        this.image.src = "./images/" + this.color + "/step/step0" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else if (this.imageIterator <= 11) {
                        this.image.src = "./images/" + this.color + "/step/step" + this.imageIterator + ".png";
                        this.imageIterator += 1;
                    }
                    else {
                        this.imageIterator = 1;
                        this.image.src = "./images/" + this.color + "/step/step00.png";
                    }
                } , 100);
                
            }
        }        
    }
}

class CrewBodyDeath { 
    constructor(color, posX, posY) {
        this.width = 40;
        this.height = 40;
        this.posX = posX;
        this.posY = posY;
        this.image = new Image();
        this.color = "red";
        this.color = color;
        
        this.image.src = "images/" + this.color +"/CuerpoMuerto.png";
        
        
        this.active = true;

        setTimeout(() => {
            this.active = false;
            deathAnimation.push(new CrewDeath(this.color, this.posX, this.posY));
        }, 200);
    }

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

class CrewDeath { 
    constructor(color, posX, posY) {
        this.width = 40;
        this.height = 30;
        this.posX = posX+10;
        this.posY = posY+15;
        this.image = new Image();
        this.color = "red";
        this.color = color;
        
        this.image.src = "images/"+ this.color +"/Death.png";
               
        this.active = true;

        setTimeout(() => {
            this.active = false;
        }, 400);
    }

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}



function SpawnCrewAdmin(){
	switch (getRandomInt(0, 4)){
		case 0:
			crewAdminArray.push(new CrewMiniAdmin("red"));
			break;
		case 1:
			crewAdminArray.push(new CrewMiniAdmin("white"));
			break;
		case 2:
			crewAdminArray.push(new CrewMiniAdmin("black"));
			break;
	}
};

function SpawnCrewElectric(){
	switch (getRandomInt(0, 4)){
		case 0:
			crewElectricArray.push(new CrewMiniElectro("red"));
			break;
		case 1:
			crewElectricArray.push(new CrewMiniElectro("white"));
			break;
		case 2:
			crewElectricArray.push(new CrewMiniElectro("black"));
			break;
	}
};

function SpawnCrewMedBay(){
	switch (getRandomInt(0, 4)){
		case 0:
			crewMedBayArray.push(new CrewMiniMedic("red"));
			break;
		case 1:
			crewMedBayArray.push(new CrewMiniMedic("white"));
			break;
		case 2:
			crewMedBayArray.push(new CrewMiniMedic("black"));
			break;
	}
};

function SpawnCrewShields(){
	switch (getRandomInt(0, 4)){
		case 0:
			crewShieldsArray.push(new CrewMiniShields("red"));
			break;
		case 1:
			crewShieldsArray.push(new CrewMiniShields("white"));
			break;
		case 2:
			crewShieldsArray.push(new CrewMiniShields("black"));
			break;
	}
};


2024-05-08T18:04:26.039110500-Client connected from /127.0.0.1:46815
2024-05-08T18:04:26.042113800-Client connected from /127.0.0.1:46816
2024-05-08T18:04:26.054108400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 4709
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700



class Impostor {
    constructor(color, lifePoints, name, score) {
      
      this.width = 250;
      this.height = 300;
      this.posX = canvas.width / 2 -this.width / 2;
      this.posY = canvas.height / 2 - this.height / 2;
      this.image = new Image();
      this.forceDamage = 1;

      //Default values
      this.color = 'red';
      this.name = 'Impostor';
      
      this.lifePoints = 5;
      this.score = 1;

      //Custom values
      this.color = color;
      this.name = name;
      this.sprite = "images/" + this.color + "/Body.png";  
      this.lifePoints = lifePoints;
      this.score = score;
      this.image.src = this.sprite;

      
    }
  
    update(dt){
        this.OverImpostor();
    }
    
    render(){
        if (this.isImpostorAlive()) {
            ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        }
    }
    
    isImpostorAlive(){
        return this.lifePoints > 0;
    }
    
    DamageImpostor(){
        this.lifePoints -= Math.floor(clickPower * (this.forceDamage + (combo/500)));
    } 

    MouseOverImpostor(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    OverImpostor(){
        if(this.MouseOverImpostor()){
            if(!isClick){
                //Make the image bigger
                this.width = 350;
                this.height = 400;
                this.posX = canvas.width / 2 -this.width / 2;
                this.posY = canvas.height / 2 - this.height / 2;
            } 
            else {
                //Make the image bit smaller
                this.width = 325;
                this.height = 375;
                this.posX = canvas.width / 2 -this.width / 2;
                this.posY = canvas.height / 2 - this.height / 2;        
            }
        } else {
                //Make the image smaller
                this.width = 250;
                this.height = 300;
                this.posX = canvas.width / 2 -this.width / 2;
                this.posY = canvas.height / 2 - this.height / 2;
            }
        }
  }

  //To damage the impostor
  function ClickingImpostor(x,y){
	if(x > canvas.width / 2 - impostor.width / 2 && x < canvas.width / 2 + impostor.width / 2 &&
	 y > canvas.height / 2 - impostor.height / 2 && y < canvas.height / 2 + impostor.height / 2){
		
		if (impostor.isImpostorAlive()) {
		    combo++;
		    UI.randomAngleCombo = getRandomInt(-25, 25);
		    UI.randomSizeCombo = getRandomInt(45, 65);
            DamageImpostor();
		}
	}
};

  DamageImpostor = function(){
    score += Math.floor(clickPower*(1 + (combo/500)));
	impostor.DamageImpostor();

	//Kill the impostor
	if(!impostor.isImpostorAlive()){
        sndKilled.pause();
        sndKilled.currentTime = 0;
		sndKilled.play();

        UI.specialScore = "+" + impostor.score;
        setTimeout(() => {
            UI.specialScore = "";
        }, 1000);

		score += impostor.score;
		impostorSpawned = false;
		setTimeout(SpawnImpostor, 1000);

        //Spawn death animation
        console.log("Spawn death animation: " + impostor.color);
        deathAnimation.push(new ImpostorBodyDeath(impostor.color));
	}
};

class ImpostorBodyDeath { 
    constructor(color){
        this.width = 350;
        this.height = 400;
        this.posX = canvas.width / 2 -this.width / 2;
        this.posY = canvas.height / 2 - this.height / 2;
        this.image = new Image();
        this.color = color;
       
        this.image.src = "images/" + this.color + "/CuerpoMuerto.png";
                
        
        this.active = true;

        setTimeout(() => {
            this.active = false;
            deathAnimation.push(new ImpostorDeath(impostor.color));
        }, 200);
    }

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

class ImpostorDeath { 
    constructor(color){
        this.width = 350;
        this.height = 400;
        this.posX = canvas.width / 2 -this.width / 2 + 100;
        this.posY = canvas.height / 2 - this.height / 2 + 100;
        this.image = new Image();
        this.color = color;
        
        this.image.src = "images/" + this.color + "/Death.png";
                
        
        this.active = true;

        setTimeout(() => {
            this.active = false;
        }, 200);
    }

    render(){
        if(this.active)
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

2024-05-08T18:04:26.058110700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1120
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

class bg_room {
    constructor(name, sprite, posX, posY, width, height) {
        
        //Custom values
        this.name = name;
        this.image = new Image();
        this.image.src = sprite;
        this.posX = posX;
        this.posY = posY;
        this.width = width;
        this.height = height;
        
      }
    
      update(dt){
      }
      
      render(){
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
      }
    
}

function renderPlaces(){
  if(AdminSupport) AdminSupport.render();
	if(ElectricalSupport) ElectricalSupport.render();
	if(MedbaySupport) MedbaySupport.render();
	if(ShieldsSupport) ShieldsSupport.render();
	
	if(AdminRoom) AdminRoom.render();
	if(ElectricalRoom) ElectricalRoom.render();
	if(MedbayRoom) MedbayRoom.render();
	if(Shields) Shields.render();

	if(AdminCam) AdminCam.render();
	if(ElectricalCam) ElectricalCam.render();
	if(MedbayCam) MedbayCam.render();
	if(ShieldsCam) ShieldsCam.render();

	ventElectric.render();
	ventMedBay.render();
	ventShields.render();
	ventAdmin.render();
}

2024-05-08T18:04:26.063119300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 396
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

const textPrompt = [
    "Blue was an impostor",
    "Red is sus, vote him out",
    "Green was with brown",
    "Yellow was in electrical",
    "Purple called the meeting",
    "Orange vented",
    "Pink vote for Red",
    "Black is \'doing\' tasks",
    "White is sus",
    "Brown was with green",
    "Cyan finished his tasks",
    "Lime have lag",
    "Maroon is crewmate",

];

2024-05-08T18:04:26.066118300-Client connected from /127.0.0.1:46817
2024-05-08T18:04:26.067119300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 206
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

class ImpostorBlack extends Impostor {
    constructor() {
      var lifePoints = 25;
      var name = 'Black Impostor';
      var color = 'black';
      super(color, lifePoints, name, 15);
    }
  }

2024-05-08T18:04:26.068117400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 205
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

class ImpostorWhite extends Impostor {
    constructor() {
      var lifePoints = 15;
      var name = 'White Impostor';
      var color = 'white';
      super(color, lifePoints, name,10);
    }
  }

2024-05-08T18:04:26.068117400-Client connected from /127.0.0.1:46818
2024-05-08T18:04:26.071117900-Client connected from /127.0.0.1:46819
2024-05-08T18:04:26.072119600-Client connected from /127.0.0.1:46820
2024-05-08T18:04:26.083242500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 7839
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

var hatCost = 1000;
var costumeCost = 10000;
var petCost = 50000; 

var GladiatorUnloked = false;
var HatUnloked = false;
var DemonUnloked = false;

var ArcheologistUnloked = false;
var SuitUnloked = false;
var RobotUnloked = false;

var CubeUnloked = false;
var ClankUnloked = false;
var SparkUnloked = false;

var lockImage = new Image();
lockImage.src = "./images/icons/Lock.png";


class HUD{

    constructor() {
        this.scoreText = "Score: 0";
        this.movableTexts = [];

        this.imgCrewAnnounce = new Image();
        this.imgCrewAnnounce.src = "./images/icons/Announce.png";

        this.specialScore = "";

        this.randomAngleCombo = 0;
        this.randomSizeCombo = 50;

        this.createMovableText("Welcome to the ImpostOut Web Game", "grey", -75);
        this.newMovableTextFromFile();

    }

    update(dt) {
        this.scoreText = 'Crew Votes: ' + Math.floor(score);

        //Movable Texts
        for (var i = 0; i < this.movableTexts.length ; i++) {
            this.movableTexts[i].update(dt);

            //Remove if out of screen
            if(this.movableTexts[i].x > canvas.width+1 || this.movableTexts[i].x < -401){
                this.movableTexts.splice(i, 1);
            }
        }
    }

    render() {
        //Black line at the top
        ctx.fillStyle = 'black';
        ctx.fillRect(0, 0, canvas.width, 25);

        //Crew Votes
        ctx.font = '80px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText(this.scoreText, 
            canvas.width/2 - 120, 
            canvas.height/2 - 360);

        //Votes per second
        ctx.font = '30px AmongUsFont';
        if(doubleAuto) ctx.fillStyle = "red";
        else ctx.fillStyle = "#e0e0e0";
        ctx.fillText('Votes per second: ' + Math.floor(autoclicker.clicksPerSecond*10)/10,
            canvas.width/2 - 55,
            canvas.height/2 - 325);

        //Upgrade Cost
        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + electricalCost,
        ElectricalRoom.posX+buttonSize, ElectricalRoom.posY +290);

        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + medBayCost,
        MedbayRoom.posX+buttonSize, MedbayRoom.posY +260);

        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + adminCost,
        AdminRoom.posX+buttonSize, AdminRoom.posY +290);
        
        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + shieldsCost,
        Shields.posX+buttonSize, Shields.posY +320);

        ctx.font = '40px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText('Upgrade Cost: ' + Math.floor(autoClickerCost),
        canvas.width/2- 60, canvas.height -35);

        //Shop Cost

        //Gladiator
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Gladiator: " + hatCost,
        GladiatorShopButton.posX + 10, GladiatorShopButton.posY + 77);
        if(!GladiatorUnloked) ctx.drawImage(lockImage, GladiatorShopButton.posX + 45, GladiatorShopButton.posY + 40, 20, 20);
        //Hat
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Hat: " + hatCost,
        HatShopButton.posX + 20, HatShopButton.posY + 77);
        if(!HatUnloked) ctx.drawImage(lockImage, HatShopButton.posX + 45, HatShopButton.posY + 40, 20, 20);
        //Demon
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Demon: " + hatCost,
        DemonShopButton.posX + 10, DemonShopButton.posY + 77);
        if(!DemonUnloked) ctx.drawImage(lockImage, DemonShopButton.posX + 45, DemonShopButton.posY + 40, 20, 20);

        //Archeologist
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Archeologist: " + costumeCost,
        ArcheologistShopButton.posX - 20, ArcheologistShopButton.posY + 77);
        if(!ArcheologistUnloked) ctx.drawImage(lockImage, ArcheologistShopButton.posX + 40, ArcheologistShopButton.posY + 40, 20, 20);
        //Suit
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Suit: " + costumeCost,
        SuitShopButton.posX +5, SuitShopButton.posY + 77);
        if(!SuitUnloked) ctx.drawImage(lockImage, SuitShopButton.posX + 40, SuitShopButton.posY + 40, 20, 20);
        //Robot
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("Robot: " + costumeCost,
        RobotShopButton.posX+5, RobotShopButton.posY + 77);
        if(!RobotUnloked) ctx.drawImage(lockImage, RobotShopButton.posX + 40, RobotShopButton.posY + 40, 20, 20);

        //Pets
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = "white";
        ctx.fillText("All pets: " + petCost,
        ClankShopButton.posX -20, ClankShopButton.posY + 60);

        if(!CubeUnloked) ctx.drawImage(lockImage, CubeShopButton.posX + 15, CubeShopButton.posY + 20, 15, 15);
        if(!ClankUnloked) ctx.drawImage(lockImage, ClankShopButton.posX + 15, ClankShopButton.posY + 20, 15, 15);
        if(!SparkUnloked) ctx.drawImage(lockImage, SparkShopButton.posX + 15, SparkShopButton.posY + 20, 15, 15);

        //Shop Unlocks


        // Special Score
        ctx.font = '60px AmongUsFont';
        ctx.fillStyle = "grey";
        ctx.save(); // Save the current state
            ctx.translate(canvas.width/2 + 180, canvas.height/2 - 300); 
            ctx.rotate(-15 * Math.PI / 180); 
            ctx.fillText(this.specialScore, 0, 0); 
            ctx.restore(); 

        //Combo
        if(combo > 9){
             
            ctx.font = this.randomSizeCombo + 'px AmongUsFont';
            ctx.fillStyle = "rgba(255, 0, 0, 0.7)";
            ctx.save(); // Save the current state
            ctx.translate(canvas.width/2, canvas.height/2 + 175 ); 
            ctx.rotate(this.randomAngleCombo * Math.PI / 180); 
            ctx.fillText('Combo x' + combo + '!', -50, 0); 
            ctx.restore(); 
        }          

        //Movable Texts
        for (var i = 0; i < this.movableTexts.length ; i++) {
            this.movableTexts[i].render();
        }

        //Image at the top right
        ctx.drawImage(this.imgCrewAnnounce, canvas.width - 30, - 5, 40, 40);

        
        // Anti Cease and desist
        ctx.font = '20px AmongUsFont';
        ctx.fillStyle = 'grey';
        ctx.fillText('Sprites property of @. Only for class project porpuses and sus amogus.', 10, canvas.height - 10);

    }
    
    newMovableTextFromFile() {
        setInterval(() => {
            this.createMovableText(textPrompt[getRandomInt(0, textPrompt.length)], "grey", -75);
        }, 17500);

    }
        

    createMovableText(text, color, speed) {
        var movableText = new MovableText(text, color, speed);
        this.movableTexts.push(movableText);
    }

}

class MovableText{
    constructor(text, color, speed) {
        this.text = "Default Text"
        
        this.font = '30px AmongUsFont';
        this.speed = 0;
        
        this.text = text;
        this.color = color;
        this.speed = speed;

        this.y = 25;

        if(this.speed <= 0){
            this.x = canvas.width;
        }
        else{
            this.x = -400;
        }
    }

    update(dt) {
        this.x += this.speed * dt;
    }

    render() {
        ctx.font = this.font;
        ctx.fillStyle = this.color;
        ctx.fillText(this.text, this.x, this.y);
    }
}



2024-05-08T18:04:26.083242500-Client connected from /127.0.0.1:46821
2024-05-08T18:04:26.085242300-Client connected from /127.0.0.1:46822
2024-05-08T18:04:26.089242600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1935
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

class Barometer{
        constructor(posX, posY){
        this.posX = posX;
        this.posY = posY;
        this.width = 1490/12;
        this.height = 158/12;
        this.limit = 30;
        this.image = new Image();
        this.image.src = "images/interface/Needle.png";
        this.baroBody = new BaroBody(this.posX - 1920/24 + this.width/2, this.posY-1344/24 + this.height/2 - 25);
    }

    render(){
        this.baroBody.render();
        ctx.save();
        //rotate the image from the center
        ctx.translate(this.posX + this.width / 2, this.posY + this.height / 2);
        ctx.rotate(this.angle);
        ctx.translate(-(this.posX + this.width / 2), -(this.posY + this.height / 2));
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
        ctx.restore();
    }

    update(dt, CrewsActive){
        //rotate the needle based on the quantity of crew members
        this.angle = (CrewsActive/this.limit) * Math.PI/2;

        //limit the rotation
        if(this.angle > Math.PI){
            this.angle = Math.PI;
        }
        if(this.angle < 0){
            this.angle = 0;
        }

        if (this.angle < Math.PI/2){
            impostor.forceDamage = 1;
        }

        if (this.angle > Math.PI/2){
            impostor.forceDamage = 2;
        }

        if (this.angle > Math.PI/2 + Math.PI/4){
            impostor.forceDamage = 3;
        }

        if (this.angle > Math.PI){
            impostor.forceDamage = 4;
        }
    }
};

class BaroBody {
    constructor(posX, posY){
        this.posX = posX;
        this.posY = posY;
        this.width = 1920/12;
        this.height = 1344/12;
        this.image = new Image();
        this.image.src = "images/interface/Counter.png";
    }

    render(){
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }
}

2024-05-08T18:04:26.101244100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 6319
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700




class Button {
    constructor(name, sprite, posX, posY, width, height) {
        //Custom values
        this.name = name;
        this.image = new Image();
        this.image.src = sprite;
        this.posX = posX;
        this.posY = posY;
        this.width = width;
        this.height = height;
    }

    render(){
        ctx.drawImage(this.image, this.posX, this.posY, this.width, this.height);
    }

   
}

class simpleButton extends Button{
    constructor(name, sprite, posX, posY, width, height) {
        super(name, sprite, posX, posY, width, height);
        
    }
    
    update(dt){
    
    }
      
    render(){
        super.render();
    }

    
    MouseOverButton(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }

    ClickingButton(type){

        if(this.MouseOverButton() && isClick){
            switch(type){
                case "autoclicker":
                    if(score - autoClickerCost >= 0){
                        score -= autoClickerCost;
                        autoclicker.clicksPerSecondBase += votesIncrement;
                    }
                        break;
                    case "howtoplay":
                        // Go to the How to Play html
                        saveAllCookies();
                        window.location.href = "howtoplay.html";
                        break;
                    case "erase":
                        // Erase the game
                        deleteAllCookies();
                        break;
                    case "save":
                        // Save the game
                        saveAllCookies();
                        break;
                    case "gladiator":
                        if(score - hatCost >= 0 && !GladiatorUnloked){
                            score -= hatCost;
                            GladiatorUnloked = true;
                        }
                        if(GladiatorUnloked) ChangeHat("Gladiator");
                        break;
                    case "hat":
                        if(score - hatCost >= 0 && !HatUnloked){
                            score -= hatCost;
                            HatUnloked = true;
                        }
                        if(HatUnloked) ChangeHat("Hat");
                    break;
                    case "demon":
                        if(score - hatCost >= 0 && !DemonUnloked){
                            score -= hatCost;
                            DemonUnloked = true;
                        }
                        if(DemonUnloked) ChangeHat("Demon");
                    break;
                    case "archeologist":
                        if(score - costumeCost >= 0 && !ArcheologistUnloked){
                            score -= costumeCost
                            ArcheologistUnloked = true;
                        }
                        if(ArcheologistUnloked) ChangeCostume("Archeologist");
                    break;
                    case "suit":
                        if(score - costumeCost >= 0 && !SuitUnloked){
                            score -= costumeCost
                            SuitUnloked = true;
                        }
                        if(SuitUnloked) ChangeCostume("Suit");
                    break;
                    case "robot":
                        if(score - costumeCost >= 0 && !RobotUnloked){
                            score -= costumeCost
                            RobotUnloked = true;
                        }
                        if(RobotUnloked) ChangeCostume("Robot");
                    break;
                    case "cube":
                        if(score - petCost >= 0 && !CubeUnloked){
                            score -= petCost;
                            CubeUnloked = true;
                        }
                        if(CubeUnloked) ChangePet("Cube");
                    break;
                    case "clank":
                        if(score - petCost >= 0 && !ClankUnloked){
                            score -= petCost;
                            ClankUnloked = true;
                        }
                        if(ClankUnloked) ChangePet("ClankPet");
                    break;
                    case "spark":
                        if(score - petCost >= 0 && !SparkUnloked){
                            score -= petCost;
                            SparkUnloked = true;
                        }
                        if(SparkUnloked) ChangePet("343GuiltySpark");
                    break;

                        
            }
        }
    }
}

class upgradeButton extends Button{
    constructor(name, sprite, posX, posY, width, height) {
        super(name, sprite, posX, posY, width, height);
        
    }
    
    update(dt){
    
    }
      
    render(){
        super.render();
    }

    
    MouseOverButton(){
        return (mouseX > this.posX && mouseX < this.posX + this.width && mouseY > this.posY && mouseY < this.posY + this.height);
    }


    ClickingButton(cost, type){
        if(this.MouseOverButton() && isClick){
            if(score-cost >= 0){
                score -= cost;
                this.image.src = "images/interface/ButtonPressed.png";
                
                switch(type){
                    case "admin":
                        SpawnCrewAdmin();
                        break;
                    case "medbay":
                        SpawnCrewMedBay();
                        break;
                    case "electrical":
                        SpawnCrewElectric();
                        break;
                    case "shields":
                        SpawnCrewShields();
                        break;
                }

                var self = this;
                setTimeout(function(){
                    console.log("Button pressed");
                    clickPower += 0.001;
                    self.image.src = "images/interface/Button.png";
                }, 200);
                return true;
            }
        }
    };

    
    
}

2024-05-08T18:04:26.104245100-Client connected from /127.0.0.1:46823
2024-05-08T18:04:26.108241600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 2691
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

function setCookie(key, value) {
    var expires = new Date();

    //Expires in 1 year
    expires.setTime(expires.getTime() + (365 * 24 * 60 * 60 * 1000));
    document.cookie = key + '=' + value + ';expires=' + expires.toUTCString();
}

function getCookie(key) {
    var keyValue = document.cookie.match('(^|;) ?' + key + '=([^;]*)(;|$)');

    return keyValue ? keyValue[2] : null;
}

function deleteAllCookies() {
    var cookies = document.cookie.split(";");

    for (var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i];
        var eqPos = cookie.indexOf("=");
        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
        document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
    }
}

function saveAllCookies() {
    setCookie('score', score);
    setCookie('autoclicker', autoclicker.clicksPerSecondBase);
    setCookie('gladiatorUnloked', BoolToInt(GladiatorUnloked));
    setCookie('hatUnloked', BoolToInt(HatUnloked));
    setCookie('demonUnloked',  BoolToInt(DemonUnloked));
    setCookie('archeologistUnloked',  BoolToInt(ArcheologistUnloked));
    setCookie('suitUnloked',  BoolToInt(SuitUnloked));
    setCookie('robotUnloked',  BoolToInt(RobotUnloked));
    setCookie('cubeUnloked',  BoolToInt(CubeUnloked));
    setCookie('clankUnloked',  BoolToInt(ClankUnloked));
    setCookie('sparkUnloked',  BoolToInt(SparkUnloked));
}

function loadAllCookies() {
    if (getCookie('score') != null) score = Number(getCookie('score'));
    if(getCookie('autoclicker') != null) autoclicker.clicksPerSecondBase = Number(getCookie('autoclicker'));
    if(getCookie('gladiatorUnloked') != null) GladiatorUnloked = IntToBool(getCookie('gladiatorUnloked'));
    if(getCookie('hatUnloked') != null) HatUnloked = IntToBool(getCookie('hatUnloked'));
    if(getCookie('demonUnloked') != null) DemonUnloked = IntToBool(getCookie('demonUnloked'));
    if(getCookie('archeologistUnloked') != null) ArcheologistUnloked = IntToBool(getCookie('archeologistUnloked'));
    if(getCookie('suitUnloked') != null) SuitUnloked = IntToBool(getCookie('suitUnloked'));
    if(getCookie('robotUnloked') != null) RobotUnloked = IntToBool(getCookie('robotUnloked'));
    if(getCookie('cubeUnloked') != null) CubeUnloked = IntToBool(getCookie('cubeUnloked'));
    if(getCookie('clankUnloked') != null) ClankUnloked = IntToBool(getCookie('clankUnloked'));
    if(getCookie('sparkUnloked') != null) SparkUnloked = IntToBool(getCookie('sparkUnloked'));
}

function BoolToInt(bool) {
    if (bool) return 1;
    else return 0;
}

function IntToBool(int) {
    if (int == 1) return true;
    else return false;
}

2024-05-08T18:04:26.109245300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 200
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

class ImpostorRed extends Impostor {
    constructor() {
      var lifePoints = 40;
      var name = 'Red Impostor';
      var color = 'red';
      super(color, lifePoints, name, 25);
    }
  }

2024-05-08T18:04:26.115243500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 1114
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

function collision(first, second) {
    return !(first.posX > second.posX + second.width ||
        first.posX + first.width < second.posX ||
        first.posY > second.posY + second.height ||
        first.posY + first.height < second.posY);
}

class ventCollision {
    constructor(posX, posY, width, height) {
        this.posX = posX + 40;
        this.posY = posY;
        this.width = width - 80;
        this.height = height;
    }
}

function checkCollisionBetweenCrewArrayAndVent(crewArray, vent) {
    var arraylength = 0;
    var ventColl = new ventCollision(vent.posX, vent.posY, vent.width, vent.height);
    arraylength = crewArray.length;
    if (arraylength > 0) {
        for (let i = 0; i < arraylength; i++) {
            if (collision(crewArray[i], ventColl) && vent.ventOpen) {
                deathAnimation.push(new CrewBodyDeath(crewArray[i].color, crewArray[i].posX, crewArray[i].posY));
                crewArray.splice(i, 1); 
                setTimeout(function(){ vent.VentReset(); }, 1500);
                break;
            }
        }
    }
    
}


2024-05-08T18:04:26.115243500-Client connected from /127.0.0.1:46824
2024-05-08T18:04:26.134241500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: application/javascript
Content-Length: 13231
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

var canvas = document.createElement("canvas");
var ctx = canvas.getContext("2d");
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;
canvas.style.position = "absolute";
document.body.appendChild(canvas);

// This is the background, don't get scared
var bgPattern;
var tileReady = false;
var tileImage = new Image();
tileImage.onload = function () {
	tileReady = true;
	bgPattern = ctx.createPattern(tileImage,"repeat");
};
tileImage.src = "./images/bgPattern.png";

// ----------------------------------------------------------------------------------------------------> Game start
var start = function () {
	StartNewGame();
};

var StartNewGame = function(){
	SpawnImpostor();

}

// ----------------------------------------------------------------------------------------------------> Useful Small Functions
ResetClick = function(){
	isClick = false;
}

ResetCombo = function(){
	combo = 0;
}

SpawnImpostor = function(){
	var random = Math.floor(Math.random() * 4);
	switch(random){
		case 0:
			impostor = new ImpostorRed();
			break;
		case 1:
			impostor = new ImpostorBlack();
			break;
		case 2:
			impostor = new ImpostorWhite();
			break;
		case 3:
			impostor = new ImpostorBlack();
			break;
	}
	impostorSpawned = true;
};

function getRandomInt(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive
}

// ----------------------------------------------------------------------------------------------------> Event Listeners
var keysDown = {};

addEventListener("keydown", function(e) {
	keysDown[e.keyCode] = true;
}, false);

addEventListener("keyup", function(e) {
	delete keysDown[e.keyCode];
}, false);

addEventListener("click", function(e) {
	x = e.offsetX;
	y = e.offsetY;
	isClick = true;

	sndBackground.play();

	setTimeout(ResetClick, 100);

	this.clearTimeout(setTimeoutCombo);
	setTimeoutCombo = setTimeout(() => {
		combo = 0;
	}, 2000);
	
	ventAdmin.ClickingVent(x, y);
	ventElectric.ClickingVent(x, y);
	ventMedBay.ClickingVent(x, y);
	ventShields.ClickingVent(x, y);

	ClickingImpostor(x, y);

	AdminButton.ClickingButton( adminCost, "admin");
	ElectricButton.ClickingButton( electricalCost, "electrical");
	MedbayButton.ClickingButton( medBayCost, "medbay");
	ShieldsButton.ClickingButton( shieldsCost, "shields");
	AutoClickerButton.ClickingButton( "autoclicker");

	HowToPlayButton.ClickingButton( "howtoplay");
	EraseButton.ClickingButton( "erase");
	SaveButton.ClickingButton( "save");

	GladiatorShopButton.ClickingButton( "gladiator");
	HatShopButton.ClickingButton( "hat");
	DemonShopButton.ClickingButton( "demon");

	ArcheologistShopButton.ClickingButton( "archeologist");
	SuitShopButton.ClickingButton( "suit");
	RobotShopButton.ClickingButton( "robot");

	CubeShopButton.ClickingButton( "cube");
	ClankShopButton.ClickingButton( "clank");
	SparkShopButton.ClickingButton( "spark");
	
}, false);

addEventListener('mousemove', (e) => {
	mouseX = e.clientX;
	mouseY = e.clientY;
});


//-----------------------------------------------------------------------------------------------------> UPDATE
var update = function (dt) {
	if(impostorSpawned){
		impostor.update(dt);
	}
	UI.update(dt);

	for(var i = 0; i < phalaxArray.length; i++){
		phalaxArray[i].update(dt);
	}

	autoclicker.update(dt);

	//update all crewAdminArray objects
	for(var i = 0; i < crewAdminArray.length; i++){
		
		crewAdminArray[i].update(dt);
	}
	//update all crewElectricArray objects
	for(var i = 0; i < crewElectricArray.length; i++){
		crewElectricArray[i].update(dt);
	}
	//update all crewMedbayArray objects
	for(var i = 0; i < crewMedBayArray.length; i++){
		crewMedBayArray[i].update(dt);
	}
	//update all crewShieldsArray objects
	for(var i = 0; i < crewShieldsArray.length; i++){
		crewShieldsArray[i].update(dt);
	}
	var amonguscount = crewAdminArray.length + crewElectricArray.length + crewMedBayArray.length + crewShieldsArray.length;
	barometer.update(dt, amonguscount);

	ventElectric.update(dt);
	ventMedBay.update(dt);
	ventShields.update(dt);
	ventAdmin.update(dt);

	doubleAutoPwrUp.update(dt);


	//Update collisions
	checkCollisionBetweenCrewArrayAndVent(crewAdminArray, ventAdmin);
	checkCollisionBetweenCrewArrayAndVent(crewElectricArray, ventElectric);
	checkCollisionBetweenCrewArrayAndVent(crewMedBayArray, ventMedBay);
	checkCollisionBetweenCrewArrayAndVent(crewShieldsArray, ventShields);
};



//-----------------------------------------------------------------------------------------------------> RENDER
var render = function () {
	
	
	if (tileReady) {
		ctx.fillStyle = bgPattern;
		ctx.fillRect(0,0,canvas.width,canvas.height);
	}

	//paralax render
	if (phalaxArray.length > 0 && impostorSpawned){
		for (var i = 0; i < phalaxArray.length; i++) {
			phalaxArray[i].render();
		}
	}
	
	if (impostorSpawned) {
		impostor.render();
	}

	renderPlaces();

	AdminButton.render();
	ElectricButton.render();
	MedbayButton.render();
	ShieldsButton.render();

	AutoClickerButton.render();
	HowToPlayButton.render();

	EraseButton.render();
	SaveButton.render();

	GladiatorShopButton.render();
	HatShopButton.render();
	DemonShopButton.render();
	
	ArcheologistShopButton.render();
	SuitShopButton.render();
	RobotShopButton.render();

	CubeShopButton.render();
	ClankShopButton.render();
	SparkShopButton.render();

	barometer.render();

	//render all crewAdminArray objects
	if (crewAdminArray.length > 0)
	for(var i = crewAdminArray.length-1; i >= 0; i--){
		
		crewAdminArray[i].render();
	}

	if (crewElectricArray.length > 0)
	//render all crewElectricArray objects
	for(var i = crewElectricArray.length-1; i >= 0 ; i--){
		crewElectricArray[i].render();
	}

	if (crewMedBayArray.length > 0)
	//render all crewMedbayArray objects
	for(var i = crewMedBayArray.length-1; i >= 0 ; i--){
		crewMedBayArray[i].render();
	}

	if (crewShieldsArray.length > 0)
	//render all crewShieldsArray objects
	for(var i = crewShieldsArray.length-1; i >= 0; i--){
		crewShieldsArray[i].render();
	}

	if (deathAnimation.length > 0)
	//render all deathAnimation objects
	for(var i = deathAnimation.length-1; i >= 0; i--){
		deathAnimation[i].render();
	}

	for(var i = 0; i < exclamations.length; i++){
		exclamations[i].render();
	}

	customSus.render();

	if(UI)	UI.render();

	doubleAutoPwrUp.render();
	
};

//-----------------------------------------------------------------------------------------------------> MAIN
var main = function () {
	var now = Date.now();
	var delta = now - then;

	update(delta / 1000);
	render();

	then = now;

	// Request to do this again ASAP
	requestAnimationFrame(main);
};

// Cross-browser support for requestAnimationFrame
var w = window;
requestAnimationFrame = w.requestAnimationFrame ||
 w.webkitRequestAnimationFrame || w.msRequestAnimationFrame 
 || w.mozRequestAnimationFrame;



 //-----------------------------------------------------------------------------------------------------> Game variables and objects
 var impostorSpawned = false;
 var impostor = new ImpostorRed();
 var deathAnimation = [];
 var score = 0;
 var UI = new HUD();
 var miniCrews = [];
 var customSus = new CustomSus();

 //Paralax
 var phalaxArray = [];
 phalaxArray.push(new paralax("./images/interface/phalax1.png", canvas.width/2 -300, canvas.height/2 -300, 1));
 phalaxArray.push(new paralax("./images/interface/phalax2.png", canvas.width/2 -300, canvas.height/2 -300, -1.5));
 phalaxArray.push(new paralax("./images/interface/phalax3.png", canvas.width/2 -300, canvas.height/2 -300, 1.5));

 //Autoclicker
 var autoclicker = new AutoClkrSimple();

 //Combo
 var setTimeoutCombo = 0;
 var combo = 0;

 //Mouse variables
 var isClick = false;
 var mouseX = 0;
 var mouseY = 0;

//Rooms objects
var spaceFromBorder = 150;
var AdminRoom = new bg_room("Admin", "./images/Admin.png", spaceFromBorder, canvas.height - 180 - 1445/7,  2160/7, 1445/7 );
var ElectricalRoom = new bg_room("Electrical", "./images/Electrics.png", spaceFromBorder, 150,  1523/5, 913/5 );
var MedbayRoom = new bg_room("Medbay", "./images/MedBay.png", canvas.width - spaceFromBorder - 364/1.7, 140,  364/1.5, 318/1.7 );
var Shields = new bg_room("Shields", "./images/Shields.png", canvas.width - spaceFromBorder - 437/2, canvas.height - 180 - 477/2,  437/2, 477/2 );

//Cams on rooms
var AdminCam = new bg_room("AdminCam", "./images/AdminCam.png", spaceFromBorder - 20, canvas.height - 160 - 1676/7,  2340/7, 1676/7 );
var ElectricalCam = new bg_room("ElectricalCam", "./images/ElectricsCam.png", spaceFromBorder-15, 135,  1688/5, 1071/5 );
var MedbayCam = new bg_room("MedbayCam", "./images/MedBayCam.png", canvas.width - spaceFromBorder + 18 - 416/1.7, 140 - 10,  416/1.55, 357/1.75 );
var ShieldsCam = new bg_room("ShieldsCam", "./images/ShieldsCam.png", canvas.width - spaceFromBorder + 10 - 485/2, canvas.height - 180 + 10 - 524/2,  485/2, 524/2 );

//Supports
var AdminSupport = new bg_room("AdminSupport", "./images/interface/CameraSupport.png", 0, AdminRoom.posY + 80,  150, 50 );
var ElectricalSupport = new bg_room("ElectricSupport", "./images/interface/CameraSupport.png", 0, ElectricalRoom.posY + 70, 150, 50 );
var MedbaySupport = new bg_room("MedbaySupport", "./images/interface/CameraSupport.png", MedbayRoom.posX + 220, MedbayRoom.posY + 60,  150, 50 );
var ShieldsSupport = new bg_room("ShieldsSupport", "./images/interface/CameraSupport.png", Shields.posX + 220, Shields.posY + 90,  150, 50 );

//Upgrade buttons
var buttonSize = 100;
var AdminButton = new upgradeButton("ButtonAdmin", "./images/interface/Button.png", AdminRoom.posX, AdminRoom.posY +210, buttonSize, buttonSize );
var ElectricButton = new upgradeButton("ButtonElectric", "./images/interface/Button.png", ElectricalRoom.posX, ElectricalRoom.posY+210, buttonSize, buttonSize );
var MedbayButton = new upgradeButton("ButtonMedbay", "./images/interface/Button.png", MedbayRoom.posX, MedbayRoom.posY+190, buttonSize, buttonSize );
var ShieldsButton = new upgradeButton("ButtonShields", "./images/interface/Button.png", Shields.posX, Shields.posY+250, buttonSize, buttonSize );

//Other buttons
var AutoClickerButton = new simpleButton("ButtonAutoclicker", "./images/icons/Report.png", canvas.width/2 - 30, canvas.height - 200, buttonSize*1.25, buttonSize*1.25);
var HowToPlayButton = new simpleButton("ButtonHowtoPlay", "./images/interface/HowToPlay.png", canvas.width - 155, canvas.height - 50, 150, 40);
var EraseButton = new simpleButton("ButtonErase", "./images/interface/Erase.png", canvas.width - 80, canvas.height - 95, 75, 40);
var SaveButton = new simpleButton("ButtonSave", "./images/interface/Save.png", canvas.width - 235, canvas.height - 50, 75, 40);

//Shop Hat Buttons
var GladiatorShopButton = new simpleButton("ButtonGladiator", "./images/miniCustom/Gladiator.png", 130, 0, 120/1.5, 120/1.5);
var HatShopButton = new simpleButton("ButtonHat", "./images/miniCustom/Hat.png", 230, 0, 120/1.5, 120/1.5);
var DemonShopButton = new simpleButton("ButtonDemon", "./images/miniCustom/Demon.png", 330, 0, 120/1.5, 120/1.5);

//Shop Costume Button
var ArcheologistShopButton = new simpleButton("ButtonArcheologist", "./images/miniCustom/Archeologist.png", 180, 55, 165/3, 211/3);
var SuitShopButton = new simpleButton("ButtonSuit", "./images/miniCustom/Suit.png", 280, 55, 165/3, 211/3);
var RobotShopButton = new simpleButton("ButtonRobot", "./images/miniCustom/Robot.png", 380, 55, 165/3, 211/3);

//Shop Pet Button
var CubeShopButton = new simpleButton("ButtonCube", "./images/miniCustom/Cube.png", 20, 145, 120/4, 141/4);
var ClankShopButton = new simpleButton("ButtonClank", "./images/miniCustom/ClankPet.png", 60, 145, 120/4, 141/4);
var SparkShopButton = new simpleButton("ButtonSpark", "./images/miniCustom/343GuiltySpark.png", 100, 145, 120/4, 141/4);

//Crewmates
var crewAdminArray = [];
var crewElectricArray = [];
var crewMedBayArray = [];
var crewShieldsArray = [];

var AdminSpawn = 0;
var ElectricSpawn = 0;
var MedbaySpawn = 0;
var ShieldsSpawn = 0;

//Vents
var ventElectric = new Vent(20+spaceFromBorder,45 + 150);
var ventMedBay = new Vent(60 + canvas.width - spaceFromBorder - 364/1.7, 110 + 140);
var ventShields = new Vent(80 + canvas.width - spaceFromBorder - 437/2,95 + canvas.height - 180 - 477/2);
var ventAdmin = new Vent(150 + spaceFromBorder, 50+ canvas.height - 180 - 1445/7);

var doubleAutoPwrUp = new DoubleAutoPowerUp(-100,-100, 75, 75, "./images/icons/PowerUPx2.png");

var exclamations = [];

var barometer = new Barometer(canvas.width - spaceFromBorder - 150, 100);

// -----------------------------------------------------------------------------------------------------> Let's play this game!!


// Load the cookies
loadAllCookies();

// Set interval of cookie save
setInterval(saveAllCookies, 60000);

var then = Date.now();
start();
main();


2024-05-08T18:04:26.139252600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: text/css
Content-Length: 193
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

@font-face {
    font-family: AmongUsFont; 
    src: url('../fonts/amongus_vector.ttf');
 } 

body {
cursor: url('../images/icons/mouseCursor.ico'), auto;
background-color: black;
}



2024-05-08T18:04:26.153248400-Client connected from /127.0.0.1:46825
2024-05-08T18:04:26.167261-Client connected from /127.0.0.1:46826
2024-05-08T18:04:26.181355500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 38066
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.182370700-Response: 
HTTP/1.1 500 Internal Server Error
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 21
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

Internal server error

2024-05-08T18:04:26.211400200-Client connected from /127.0.0.1:46827
2024-05-08T18:04:26.221357700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 5537
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.237357400-Client connected from /127.0.0.1:46828
2024-05-08T18:04:26.245363-Client connected from /127.0.0.1:46829
2024-05-08T18:04:26.246355700-Client connected from /127.0.0.1:46830
2024-05-08T18:04:26.257367900-Client connected from /127.0.0.1:46831
2024-05-08T18:04:26.259386800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 17254
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.260367100-Client connected from /127.0.0.1:46832
2024-05-08T18:04:26.261356700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 5261
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.261356700-Client connected from /127.0.0.1:46833
2024-05-08T18:04:26.267364800-Client connected from /127.0.0.1:46834
2024-05-08T18:04:26.267364800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 46574
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.277403600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 106695
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.278733500-Client connected from /127.0.0.1:46835
2024-05-08T18:04:26.278733500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 182092
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.278733500-Client connected from /127.0.0.1:46836
2024-05-08T18:04:26.280738100-Response: 
HTTP/1.1 500 Internal Server Error
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 21
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

Internal server error

2024-05-08T18:04:26.286730600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 1333773
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.286730600-Client connected from /127.0.0.1:46837
2024-05-08T18:04:26.296730-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3780
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.296730-Client connected from /127.0.0.1:46838
2024-05-08T18:04:26.300734-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 4534
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.300734-Client connected from /127.0.0.1:46839
2024-05-08T18:04:26.307742700-Client connected from /127.0.0.1:46840
2024-05-08T18:04:26.310790700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 4386
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.310790700-Client connected from /127.0.0.1:46841
2024-05-08T18:04:26.317733600-Client connected from /127.0.0.1:46842
2024-05-08T18:04:26.318745-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7742
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.320732-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 4544
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.334764100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 49742
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.335739400-Client connected from /127.0.0.1:46843
2024-05-08T18:04:26.338735600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 4257
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.338735600-Client connected from /127.0.0.1:46844
2024-05-08T18:04:26.340777300-Client connected from /127.0.0.1:46845
2024-05-08T18:04:26.347730800-Client connected from /127.0.0.1:46846
2024-05-08T18:04:26.350727800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 951415
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.366748300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 173774
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.368740300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 12652
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.369743900-Response: 
HTTP/1.1 500 Internal Server Error
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 21
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

Internal server error

2024-05-08T18:04:26.369743900-Client connected from /127.0.0.1:46847
2024-05-08T18:04:26.372770900-Client connected from /127.0.0.1:46848
2024-05-08T18:04:26.378247600-Client connected from /127.0.0.1:46849
2024-05-08T18:04:26.394258-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10679
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.395259200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 9161
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.397261100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 37228
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.397261100-Client connected from /127.0.0.1:46850
2024-05-08T18:04:26.401272500-Client connected from /127.0.0.1:46851
2024-05-08T18:04:26.403264200-Client connected from /127.0.0.1:46852
2024-05-08T18:04:26.428263500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 28010
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.428263500-Client connected from /127.0.0.1:46853
2024-05-08T18:04:26.429257100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7975
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.430257500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 13135
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.430257500-Client connected from /127.0.0.1:46854
2024-05-08T18:04:26.435259400-Client connected from /127.0.0.1:46855
2024-05-08T18:04:26.443255500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7544
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.448255-Client connected from /127.0.0.1:46856
2024-05-08T18:04:26.449257300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 13706
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.449257300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 9064
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.449257300-Client connected from /127.0.0.1:46857
2024-05-08T18:04:26.450256100-Response: 
HTTP/1.1 500 Internal Server Error
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: text/plain
Content-Length: 21
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700

Internal server error

2024-05-08T18:04:26.451258700-Client connected from /127.0.0.1:46858
2024-05-08T18:04:26.459267200-Client connected from /127.0.0.1:46859
2024-05-08T18:04:26.461307300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 6254
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.461307300-Client connected from /127.0.0.1:46860
2024-05-08T18:04:26.470292400-Client connected from /127.0.0.1:46861
2024-05-08T18:04:26.472328900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 16157
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.473293200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 24200
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.479820500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 16576
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.480821800-Client connected from /127.0.0.1:46862
2024-05-08T18:04:26.480821800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 18887
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.480821800-Client connected from /127.0.0.1:46863
2024-05-08T18:04:26.481821900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 24709
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.481821900-Client connected from /127.0.0.1:46864
2024-05-08T18:04:26.488843700-Client connected from /127.0.0.1:46865
2024-05-08T18:04:26.489835600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10810
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.496822-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 8268
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.496822-Client connected from /127.0.0.1:46866
2024-05-08T18:04:26.497819700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 10644
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.498821200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 7202
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:26.505822400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:26 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 278293
Set-Cookie: cookie14=ma379xrz; Max-Age=21; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:32.850356400-Client connected from /127.0.0.1:46867
2024-05-08T18:04:32.850356400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:32 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 11133
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700


2024-05-08T18:04:33.003709700-Client connected from /127.0.0.1:46868
2024-05-08T18:04:33.003709700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:33 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 17214
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:39.615571600-Client connected from /127.0.0.1:46869
2024-05-08T18:04:39.631267700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:39 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 11896
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:39.833150700-Client connected from /127.0.0.1:46870
2024-05-08T18:04:39.848672400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:39 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 17954
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:47.511948300-Client connected from /127.0.0.1:46871
2024-05-08T18:04:47.523903900-Client connected from /127.0.0.1:46872
2024-05-08T18:04:47.523903900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:47 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 21842
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:47.523903900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:47 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3163
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:47.618314400-Client connected from /127.0.0.1:46873
2024-05-08T18:04:47.634012200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:47 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3158
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:47.738606900-Client connected from /127.0.0.1:46874
2024-05-08T18:04:47.739708400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:47 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3292
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:47.849453400-Client connected from /127.0.0.1:46875
2024-05-08T18:04:47.849453400-Client connected from /127.0.0.1:46876
2024-05-08T18:04:47.849453400-Client connected from /127.0.0.1:46877
2024-05-08T18:04:47.865077200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:47 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3286
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:47.865077200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:47 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3197
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:47.865077200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:47 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3214
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:47.947641100-Client connected from /127.0.0.1:46878
2024-05-08T18:04:47.947641100-Client connected from /127.0.0.1:46879
2024-05-08T18:04:47.963281200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:47 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3210
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:47.963281200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:47 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3330
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.057819300-Client connected from /127.0.0.1:46880
2024-05-08T18:04:48.057819300-Client connected from /127.0.0.1:46881
2024-05-08T18:04:48.057819300-Client connected from /127.0.0.1:46882
2024-05-08T18:04:48.073417100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3017
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.073417100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3322
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.073417100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3336
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.155503600-Client connected from /127.0.0.1:46883
2024-05-08T18:04:48.155503600-Client connected from /127.0.0.1:46884
2024-05-08T18:04:48.155503600-Client connected from /127.0.0.1:46885
2024-05-08T18:04:48.171170700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3083
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.171170700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3016
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.171170700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3247
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.249873700-Client connected from /127.0.0.1:46886
2024-05-08T18:04:48.265475300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3357
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.265475300-Client connected from /127.0.0.1:46887
2024-05-08T18:04:48.265475300-Client connected from /127.0.0.1:46888
2024-05-08T18:04:48.281091700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3221
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.281091700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3078
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.372004500-Client connected from /127.0.0.1:46889
2024-05-08T18:04:48.372004500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3048
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.387041700-Client connected from /127.0.0.1:46890
2024-05-08T18:04:48.387041700-Client connected from /127.0.0.1:46891
2024-05-08T18:04:48.402695500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3245
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.402695500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3217
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.465812800-Client connected from /127.0.0.1:46892
2024-05-08T18:04:48.481376900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3099
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.497008400-Client connected from /127.0.0.1:46893
2024-05-08T18:04:48.497008400-Client connected from /127.0.0.1:46894
2024-05-08T18:04:48.516139-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3251
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.516139-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3241
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.580514600-Client connected from /127.0.0.1:46895
2024-05-08T18:04:48.580514600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3310
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.616352300-Client connected from /127.0.0.1:46896
2024-05-08T18:04:48.616352300-Client connected from /127.0.0.1:46897
2024-05-08T18:04:48.627882100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3159
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.627882100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3248
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.690408300-Client connected from /127.0.0.1:46898
2024-05-08T18:04:48.706051-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3263
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie16=ma381xrz; Max-Age=23; HttpOnly; Date=2024-05-08T18:04:24.723013700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.722132-Client connected from /127.0.0.1:46899
2024-05-08T18:04:48.722132-Client connected from /127.0.0.1:46900
2024-05-08T18:04:48.737782700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3161
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400


2024-05-08T18:04:48.753395700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 2974
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:48.802911-Client connected from /127.0.0.1:46901
2024-05-08T18:04:48.818990300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3274
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:48.834760500-Client connected from /127.0.0.1:46902
2024-05-08T18:04:48.834760500-Client connected from /127.0.0.1:46903
2024-05-08T18:04:48.850281200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 2974
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:48.850281200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 2964
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:48.928795-Client connected from /127.0.0.1:46904
2024-05-08T18:04:48.928795-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3204
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:48.944434300-Client connected from /127.0.0.1:46905
2024-05-08T18:04:48.960057500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:48 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 2965
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:49.027213700-Client connected from /127.0.0.1:46906
2024-05-08T18:04:49.042855600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3044
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:49.136896900-Client connected from /127.0.0.1:46907
2024-05-08T18:04:49.136896900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:49 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3024
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:50.092987300-Client connected from /127.0.0.1:46908
2024-05-08T18:04:50.108486100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:50 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 17131
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.223162-Client connected from /127.0.0.1:46909
2024-05-08T18:04:51.229671200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3146
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.323553800-Client connected from /127.0.0.1:46910
2024-05-08T18:04:51.339918600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3250
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.352958-Client connected from /127.0.0.1:46911
2024-05-08T18:04:51.355405400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3141
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.433751200-Client connected from /127.0.0.1:46912
2024-05-08T18:04:51.433751200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3210
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.449423-Client connected from /127.0.0.1:46913
2024-05-08T18:04:51.449423-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3245
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.543840300-Client connected from /127.0.0.1:46914
2024-05-08T18:04:51.559346800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3338
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.559346800-Client connected from /127.0.0.1:46915
2024-05-08T18:04:51.559346800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3206
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.590609700-Client connected from /127.0.0.1:46916
2024-05-08T18:04:51.606239700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3143
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.668538100-Client connected from /127.0.0.1:46917
2024-05-08T18:04:51.682540800-Client connected from /127.0.0.1:46918
2024-05-08T18:04:51.683790500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3037
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.683790500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3329
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.715058700-Client connected from /127.0.0.1:46919
2024-05-08T18:04:51.724603-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3223
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.784143500-Client connected from /127.0.0.1:46920
2024-05-08T18:04:51.784143500-Client connected from /127.0.0.1:46921
2024-05-08T18:04:51.794151300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3100
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.794151300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3036
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.809786300-Client connected from /127.0.0.1:46922
2024-05-08T18:04:51.825804-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3240
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.872741200-Client connected from /127.0.0.1:46923
2024-05-08T18:04:51.872741200-Client connected from /127.0.0.1:46924
2024-05-08T18:04:51.888346600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3146
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.903985200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3095
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:51.925097600-Client connected from /127.0.0.1:46925
2024-05-08T18:04:51.935636900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:51 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3332
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.003265800-Client connected from /127.0.0.1:46926
2024-05-08T18:04:52.003265800-Client connected from /127.0.0.1:46927
2024-05-08T18:04:52.025412-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3206
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.025412-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3142
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.050667900-Client connected from /127.0.0.1:46928
2024-05-08T18:04:52.050667900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3052
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.097511600-Client connected from /127.0.0.1:46929
2024-05-08T18:04:52.097511600-Client connected from /127.0.0.1:46930
2024-05-08T18:04:52.125653700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3248
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.125653700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3202
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.160488900-Client connected from /127.0.0.1:46931
2024-05-08T18:04:52.176125800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3101
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.207330600-Client connected from /127.0.0.1:46932
2024-05-08T18:04:52.207330600-Client connected from /127.0.0.1:46933
2024-05-08T18:04:52.225511700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3153
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.225511700-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3245
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.254753900-Client connected from /127.0.0.1:46934
2024-05-08T18:04:52.270349400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3215
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.325737400-Client connected from /127.0.0.1:46935
2024-05-08T18:04:52.325737400-Client connected from /127.0.0.1:46936
2024-05-08T18:04:52.344888200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3030
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.347897400-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3153
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.370801700-Client connected from /127.0.0.1:46937
2024-05-08T18:04:52.386415800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3213
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.449397200-Client connected from /127.0.0.1:46938
2024-05-08T18:04:52.449397200-Client connected from /127.0.0.1:46939
2024-05-08T18:04:52.449397200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3020
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.465026600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3030
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.496253400-Client connected from /127.0.0.1:46940
2024-05-08T18:04:52.511871900-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3263
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.574917200-Client connected from /127.0.0.1:46941
2024-05-08T18:04:52.590543200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3014
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.590543200-Client connected from /127.0.0.1:46942
2024-05-08T18:04:52.606175800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3212
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.707771200-Client connected from /127.0.0.1:46943
2024-05-08T18:04:52.707771200-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3030
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:52.817563200-Client connected from /127.0.0.1:46944
2024-05-08T18:04:52.826070500-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:52 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 3036
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:54.328704800-Client connected from /127.0.0.1:46945
2024-05-08T18:04:54.328704800-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 12509
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:54.540115-Client connected from /127.0.0.1:46946
2024-05-08T18:04:54.540115-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:54 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 19029
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:04:58.102136100-Client connected from /127.0.0.1:46948
2024-05-08T18:04:58.102136100-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:04:58 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 12918
Set-Cookie: cookie15=ma380xrz; Max-Age=52; HttpOnly; Date=2024-05-08T18:04:08.915650600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:05:02.167623600-Client connected from /127.0.0.1:46949
2024-05-08T18:05:02.167623600-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:05:02 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 23940
Set-Cookie: cookie19=ma384xrz; Max-Age=55; HttpOnly; Date=2024-05-08T18:05:02.167623600
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700


2024-05-08T18:05:29.779027600-Client connected from /127.0.0.1:46954
2024-05-08T18:05:29.794642300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:05:29 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 23940
Set-Cookie: cookie17=ma382xrz; Max-Age=57; HttpOnly; Date=2024-05-08T18:04:32.850356400
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700
Set-Cookie: cookie19=ma384xrz; Max-Age=55; HttpOnly; Date=2024-05-08T18:05:02.167623600


2024-05-08T18:05:39.549804600-Client connected from /127.0.0.1:46956
2024-05-08T18:05:39.565438300-Response: 
HTTP/1.1 200 OK
Connection: close
Date: Wed, 08 May 2024 16:05:39 GMT
Server: DJGI/1.0.0
Content-Type: image/png
Content-Length: 22506
Set-Cookie: cookie20=ma385xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:05:39.549804600
Set-Cookie: cookie18=ma383xrz; Max-Age=54; HttpOnly; Date=2024-05-08T18:04:48.737782700
Set-Cookie: cookie19=ma384xrz; Max-Age=55; HttpOnly; Date=2024-05-08T18:05:02.167623600


